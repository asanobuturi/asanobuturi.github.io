<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ブログ on 浅野学園物理部</title><link>https://asanobuturi.github.io/blog/</link><description>Recent content in ブログ on 浅野学園物理部</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Thu, 03 Nov 2022 12:58:53 +0900</lastBuildDate><atom:link href="https://asanobuturi.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>T-STEAM:Pro 2022 総合、競技部門で優勝しました</title><link>https://asanobuturi.github.io/blog/20230313/</link><pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20230313/</guid><description>前置き どうも高一の平部員です。
3月13日に行われた豊島岡女子学園が主催する T-STEAM:Pro 2022 ~MyoElectric~ において我々APC(浅野学園物理部)が総合、競技部門で優勝しました！
今年の T-STEAM:Pro は「筋電義手を作成する」というテーマで行われ、APC(浅野学園物理部)が見事総合、競技部門で優勝しました。 期末考査の勉強時間を削った甲斐がありました。
感想 私たちのチームは顧問の先生の都合で、本番当日に会場で実演をすることができなかったので事前に撮影した動画で競技に参加することになりました。 YouTube Liveで競技の様子を見ていると本番でトラブルになっているチームが多く、勿体ないなと感じました。 私たちは動画撮影の2時間ほど前に集まり、そこで1時間ほど本番に近い状況で練習したのですが、それがかなり功を奏したのだと思います。
作った機体を紹介する動画では面白いアイデアが多く、それぞれ機体について詳しく説明されていて参考になる部分が多かったです。 自分たちの紹介動画も、もっと時間をかけて作ればよかったなと思っています。
また、東京電機大学の浅沼さんの研究生活についての講義もとても参考になりました。
最後に ここ数年間、浅野学園の理科部の中で物理部だけ実績がないという状態が続いていたので実績を作ることができてよかったです(?)
では、また。
(制作した機体の詳細について後日追記する予定です)</description></item><item><title>Kodi(LibreELEC)をセットアップする</title><link>https://asanobuturi.github.io/blog/20230223/</link><pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20230223/</guid><description>実質前回の続きです。
物理部には倉庫に保管されているだけのTVが２つ(片方は壊れている)あり、使われるのは5,6月ごろに行われる体験入部のときに極稀に使われるレベルです。去年、一昨年はTVを使わずに教室に備え付けのプロジェクターを使用する始末でした。
そのTVを活用しようと、最近情報科から賜った全く活用されていないOptiPlex 780(コイツとは違う)にLibreELECをインストールし、活用することにしました。
インストール LibreELCのダウンロードページからPC向けの&amp;quot;Generic PC (no NVIDIA support)&amp;ldquo;をダウンロードし、Etcherを使用して書き込みます。
サーバーに接続 PCからサーバーに転送、それをKodiで再生したいと思ったので、サーバーに接続してみることにしました。
左のメニューの[Pictures]からファイルをブラウズし、[Add pictures&amp;hellip;]を押して開くウィンドウの右の[Browse]を押すことで共有に接続する画面が出ます。今回Windows serverでSMBでLibreELECという名前の共有を作成しておきましたので、一番下の[Add network location&amp;hellip;]を押し、各種設定をします。
サーバーのIPは192.168.0.90なので192.168.0.90を入力する。ユーザー名とパスワードも入力する。
そして[OK]を押して共有を作成、使用したい共有を選択して[OK]を押し、ロケーションの名前を決めます。
今回は名前をLibreELECとした。
スピーカー なぜか音がOptiPlex内蔵のよわよわスピーカーからしか出なく、音量MAXでも3Dプリンターが隣で稼働しているだけで聞こえにくくなってしまう。これは如何なものかと思ったので受験勉強に来た高三を拉致してスピーカーのセットアップを行わせた。だが、電源のノイズが酷く使い物にならなかった。
ノイズがなければ最高であった。
終わりに DVD再生も可能でなので試験が終わったときにでも映画を部員と見たいと思います。
この映画おすすめですよ。https://eiga.com/movie/78149/</description></item><item><title>ルーターをモバイルWiFiに接続する</title><link>https://asanobuturi.github.io/blog/20230222/</link><pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20230222/</guid><description>モバイルWiFiをルーターと接続する必要があったのですが、ネットワーク素人の私にはNATコンバータなんて知識はなかったので、そのための備忘録として残しておきます。
物理部には部費で買った楽天ポケットWiFiを使用しており、これは部員の生命線となっています。
そして物理部にはもう一つネットワークがあり、それがTP-LinkのAX4800というルーターを頂点とする部内ネットワークです。ここのサーバーなどがこのネットワークに属しており、ファイル共有などに使用しています。
そして部員はどちらのネットワークを使用するでしょうか。もちろん前者です。インターネットがつながっていないネットワークなんて誰も使いません。
普通にモバイルWiFiから生えてるLANをルータに挿せばいいのではと思ったのですが、なんとモバイルWiFiから生えてるのはUSBです。これにはLANも刺さりません。1無線→有線の変換をどうにか中継機を使わずにやろうと必死にググった結果、iptablesというものを利用しポートフォワーディングすることでモバイルWiFiと接続できるということを知りました。これはやらないわけには行かないと思いましたので早速やることにしました。
環境 ラズパイ:Raspberry pi 4 8GB
ルーター:AX4800
ポケットWiFi:楽天
ポケットWiFiをeth1に、ルーターをeth0に接続。eth1を上流とする。
IPの固定 nanoなりなんなりで/etc/dhcpcd.confに以下の内容を追記する。
1 2 3 4 5 6 7 8 9 10 11 # ... interface eth1 static routers=192.168.0.1 static domain_name_servers=192.168.0.1 denyinterfaces eth0 interface eth0 static ip_address=192.168.20.1/24 static routers=0.0.0.0 static domain_name_servers=8.8.8.8 ラズパイのeth1はDHCPに頼ることにした。これはラズパイへのSSH等での接続の際に面倒になるので悪手であるが、二度とSSHで接続する必要が無いと信じてIPの固定をサボった。
eth0のIPは適当に192.168.20.xxxにした。20の部分はすきに変えても問題はない。dnsmasqというdnsサーバーのソフトウェアのインストールがどうしても上手くいかなかったため、dnsmasqをインストールしてDNSサーバーを走らせるのではなくGoogle Public DNSに頼ることにしたが、ここにせラズパイで名前解決が必要になる状況がないはずなので一応として8.8.8.8を設定した。ここも1.1.1.1(Cloudflare)などお好みのモノを使っていただいて構わない。
以上の操作終了後、dhcpcdを再起動させ設定を適用させる。
1 sudo systemctl restart dhcpcd DHCPサーバーの設定 /etc/dhcp/dhcpd.confの
1 2 option domain-name &amp;#34;example.org&amp;#34;; option domain-name-servers ns1.example.org, ns2.example.org; の2つをコメントアウトし、
1 #authoritative; をコメントから外すことで正当なDHCPサーバーであることを示します。
そして以下を追記します。</description></item><item><title>「ただし同じ記号を二度用いてはならない」とは</title><link>https://asanobuturi.github.io/blog/20221220/</link><pubDate>Tue, 20 Dec 2022 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20221220/</guid><description>ただし同じ記号を二度用いてはならない 問題 それぞれの空欄に最も適当なものを次の群から選びなさい。
入試などではこんな問題をよく見かけると思います。そしてこのような問題のうち、空欄の数以上に選択肢が用意されている問題では、
ただし同じ記号を二度用いてはならない。
という制約がされていることがあります。これはいったい何のためなのでしょうか。ひねくれずに考えるなら、「答えやすくするため」なのでしょう。確かにこのような制約は時にヒントとなりえます。 しかしわざわざ禁止しているのだから、「あてずっぽうでは点数を稼ぎにくくするため」なのではないかという気がしてくるものです。もしそうならばその効果はどれほどなのでしょうか。実際に調べてみましょう。 以下では空欄をa個、選択肢をb個、それぞれの空欄を1点の問題（満点がa点）とします。
空欄と選択肢が同じだけある場合 問題を解けずとも点数を取るための最も単純な戦略の一つは、「すべての空欄に同じ記号をいれて1点を確保する」でしょう。当然この場合、期待値は1です。しかしこの場合、それができなくなっています。なので先ほどの予想が正しければ、あてずっぽうの場合の期待値は1未満であると考えられます。 実際に制約を守って回答した場合の期待値を計算してみましょう。例として1つ目の空欄に関して考えてみると、 $$ すべての回答：a!通り \ 1つ目が正解である回答：(a-1)!通り $$ なので、これをa個の空欄に対して考えると期待値は $$ \frac{(a-1)!}{a!}\times a=\frac{a!}{a!}=1 $$ ！？ 予想外に期待値は「すべての空欄に同じ記号をいれて0点を回避」の場合と等しいようです。期待値が同じでもこの場合ではすべて外れれば0点、まぐれですべて当たればa点なので、より運が試されるようになったということでしょうか。
空欄より選択肢が多い場合 空欄より選択肢が多い場合はもう少し複雑なので、より点が取りづらくなるような気がします。この場合では先ほどの「1点確保」ができません。この手法の期待値は、その選択肢がいずれかの空欄に含まれる確率に等しいので $$ \frac{{}{b-1} C{a-1}}{{}b C{a}}=\frac{(b-1)!}{(a-1)!(b-a)!} \frac{a!(b-a)!}{b!}=\frac{a}{b} $$ です。 次に、制約の中での期待値を求めるために、先ほどと同じように計算してみましょう。 $$ すべての回答：{}b P_a通り \ 1つ目が正解である回答：{}{b-1} P_{a-1}通り $$ おや&amp;hellip;？このことからa個の空欄での総得点の期待値は $$ \frac{{}{b-1} P{a-1}}{{}_b P_a}\times a=\frac{(b-1)!}{(b-a)!}\frac{(b-a)!}{b!}\times a=\frac{a}{b} $$ 結局同じでしたね&amp;hellip;
結論 今回の検証で、この制約は紛れもなくヒントなのであるとわかりました。今後はこの制約に感謝しながら問題を解きたいと思います。</description></item><item><title>話題のアニメ声合成AI「MoeGoe」を使ってみよう</title><link>https://asanobuturi.github.io/blog/20221106/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20221106/</guid><description>ツイッターで、最近新しく公開された音声合成AI「MoeGoe」が話題になっていたので、試してみました。
MoeGoeとは まずはこちらをご覧ください。
なにやら中国の方が作られた音声合成AI「MoeGoe」の2891人の日本アニメキャラの音声モデルが公開されてしまった！！Hugging Faceでデモが試せる！早速まどマギの５人に喋ってもらった！！うわうわうわ！ヤバいよヤバい本当にヤバいよコレはヤバい！！　https://t.co/wzHJdwEvr7 pic.twitter.com/EFgUId9qpd
&amp;mdash; うみゆき@AI研究 (@umiyuki_ai) November 5, 2022 MoeGoeは、最新のアニメ声合成AIです。名称は日本語の「萌え声」が由来だと思われますが、開発者は中国人の方のようです。GitHub及びHuggingFaceでソースコードや学習済みモデルなどが配布されており、誰でも試すことができます。学習済みモデルに関しては、商用利用は固く禁止されています。
技術的には、昨年韓国で開発された音声合成技術の「VITS」を応用したものになっているようです。VITSは今年初めごろに日本でも話題を呼び、複数の日本語による実装レポートもWEB上で発表されました。(Qiita「【機械学習】VITSでアニメ声へ変換できるボイスチェンジャー&amp;amp;読み上げ器を作った話」など)
VITSの仕組みについては一応英語の論文があるので、そちらをご覧ください。15ページ程度ですが私には読めません。(https://arxiv.org/abs/2106.06103)
また、学習に際しては、アニメのセリフを中心に多くの音声をデータベース化し配信しているウェブサイト「VoiStock」などから収集したデータを一部のモデルで使用しているとのことです。NovelAIがStableDiffusionベースのアニメイラスト生成AIをリリースした際、学習に使用したデータがイラストの無断転載サイトから入手したものであったことがネット上で非難の対象になりましたが、このサイトについても著作権周りのことは少し気がかりです。
追記：VoiStock社社長の福井氏によると、「15秒未満の音声には著作権利は発生しないので問題ない」とのこと(引用元記事)。文化庁HPの「著作物が自由に使える場合」の記事もご覧ください。法律についての判断は読者各位に委ねます。
作者のCjangCjenghさんがビリビリ動画に公開している紹介動画も併せてご覧ください。(https://www.bilibili.com/video/BV1P8411Y7v5/)
MoeGoeを試す方法3つ MoeGoeは現在、GitHubで公開されているプログラムのほか、HuggingFace上のオンラインデモページ、Microsoft Azure上に構築された合成済み音声を返すAPIとそれを利用したAndroid向けアプリなどが主にリリースされています。
とりあえず試してみるだけであれば、すぐにブラウザから使用することができるHuggingFace版を試すのが良いでしょう。Androidユーザーの場合はアプリ版も有用です。以下にリンクを記載しています。
HuggingFaceのデモページ(ブラウザ版、PC・スマホ等対応) Android版アプリ(Google Play) この記事では、せっかくなのでGitHubで公開されているものを実際に手元のパソコンで実行することを試みます。(といってもめちゃくちゃ簡単です)
MoeGoeをローカル環境(自分のパソコン)で実行しよう ※下記のソフトウェアを使用して発生したいかなる問題についても、私達は責任を負いかねます。
現在、MoeGoeのプログラムはWindows用のものしか配布されていないので、実行にはWindowsパソコンが必要です。実装自体はPythonですので、技術的にはMac、Linux等でも実行出来ると思われます(GUIアプリを除く)。
また、7-Zip形式の圧縮ファイルを解凍できるソフトウェアが何かしら必要です。7-Zipをインストールしておけば問題ないでしょう。
Windowsパソコンさえ用意できれば、実行ファイルは全て完全にexeファイルにまとめられているので、ソースコードのビルドなどに怖気づく必要は全くありません(私はexeファイルがあるのに気づかず、プログラムを地道にビルドしようとしてVisualStudioの依存関係不足で時間を溶かされました)。
以下、手順を示します。
MoeGoeの実行ファイルをダウンロード まずはMoeGoeのGitHubレポジトリにあるReleasesページをブラウザで開き、最新のMoeGoeの実行ファイル(exeファイル)をダウンロードします。この記事の執筆時点で最新版はVer.3.0.0でした。「MoeGoe.7z」と書かれているファイルをダウンロードし解凍してください。
MoeGoeのReleasesページ：https://github.com/CjangCjengh/MoeGoe/releases
便利なMoeGoeのGUIアプリをダウンロード このファイルだけでも実行することは可能ですが、コマンドライン上での操作となり不便ですので、GUIアプリも続けてダウンロードします。MoeGoe GUIのReleasesページから、最新の「MoeGoe_GUI.exe」をダウンロードします。先ほど解凍したMoeGoeのフォルダーの中に入れておくのが便利ではないでしょうか。
MoeGoe GUIのReleasesページ：https://github.com/CjangCjengh/MoeGoe_GUI/releases
学習済みモデルのダウンロード 最後に、各キャラクターのボイスを学習した学習済みモデルをダウンロードします。GitHubページから好きな物を選んで、それぞれ「Config File」と「Model」を両方ダウンロードしてください。私はMoeGoeのフォルダー内に「models」というフォルダーを作成し、その中に配置しましたが、ファイルがどこにあってもあとでその場所を適宜指定するだけなので問題ありません。
複数のモデルをダウンロードする場合は、以下のように適宜分かりやすいように名前を変更しておいた方が無難です。
モデルごとに対応している言語が異なっているので、ダウンロードリンクの上に書かれている対応言語を確認してください。中には日本語非対応のモデルもいくつかあります。
「ゼロの使い魔」や「ToLoveるダークネス」など絶妙に古いアニメのモデルが多いです。開発者の推しなのか、ノベルゲームメーカー「ゆずソフト」のキャラクターのモデルがなかなか充実しています。
また、下部にあるVoistockモデルは、先述のアニメ音声収集サイトから大量のデータベース化された音声を収集して学習した大型モデルで、3000人弱のキャラ(海外版声優と日本語版声優・同じ声優の演じる別キャラなどの重複はあるとみられる)の音声を学習しているモデルです。これが事実上の標準モデルでしょうか。日本語以外に英語、韓国語、中国語にも対応しています。
MoeGoeの学習済みモデルの配布ページ：https://github.com/CjangCjengh/TTSModels
実際に動かす 全ての必要ファイルのダウンロードが終わったところで、実際に音声合成を試してみましょう。
MoeGoe_GUI.exeを実行します。
このような画面が起動するので、それぞれのメニューについて、上から順に、以下のファイルを指定します。
「打开文件」：「ファイルを開く」の意。このボタンをクリックして、先ほど解凍したフォルダーの中にある「MoeGoe.exe」のファイルを指定する。 「VITS」「HuBERT-VITS」「W2V2-VITS」のメニュー：AIモデルの種類を指定する。MoeGoeが現在公開している学習済みモデルのほとんどがVITSなので、基本的にはVITSを指定しておけば問題ない。モデルをダウンロードしたページに、そのモデルがVITSなのか、HuBERT-VITSなのかといったことが書いてあるので確認する。 「打开模型」：「モデルを開く」の意。このボタンをクリックして、使いたいモデルの.pthファイルを指定する。 「打开配置」：「設定を開く」の意。このボタンをクリックして、先ほど指定したモデルに対応するconfig.jsonファイルを指定する。 モデルを設定出来たら、「文本」の画面に喋らせたい文章の内容を入力し、「说话人」に表示されるリストから、喋らせたいキャラクターを選択します。
最後に、保存ボタンをクリックし、保存先を指定すると、合成された音声が保存されます。「重新合成」は上書き保存、「删除」は削除、「播放」は保存した音声の再生、「停止」は再生中の音声の停止です。
また、一部の複数言語に対応したモデルを使用する際には、[JA]こんにちは[JA]や[ZH]你好[ZH]のように、中括弧で言語を示す必要があります。日本語はJA、中国語はZH、韓国語はKO、英語はENです。
設定はこのようになります。MoeGoe_GUIのアプリを日本語化してみたのですが、あとでMoeGoe_GUIのソースコードのライセンスが不明なことに気づき、公開はしていません。MoeGoe本体はMITライセンスだったので、いつかMoeGoe_GUIのライセンスが更新されたら、日本語化したものをGitHub上で公開するかもしれません。(ちなみに、「文章を消去」はおそらく誤訳で、発音・アクセント・イントネーションの手動設定？が正しい)
追記：5chユーザーの方が翻訳したバージョンが配布されているようですので、今後もこちらから配布を行う事は致しません。
合成した音声は載せません 今の段階では権利関係があまりに不透明すぎると思ったため。
代わりに、TwitterやYouTube、ビリビリ動画にあるおすすめの動画をいくつかご紹介します。
包含2890名动画角色的VITS语音合成模型(2980人のアニメキャラの声を搭載したVITS音声合成モデル) - ビリビリ動画：冒頭で紹介した、作者のCjangCjenghさんの動画です。58秒ごろから、合成音声のサンプルが流れます。 綾地寧々の声を作ってみた - YouTube：同じく作者のCjangCjenghさんがYouTubeに公開している動画です。ビリビリ動画よりも視聴ハードルが低いので、YouTubeじゃないと見れないという場合にはこちらがおすすめです。ただし、少し古いバージョンの合成システムを使用しているものと思われます。 日本語Ｎ１聴解問題 - YouTube：こちらも作者のCjangCjenghさんがYouTubeに公開している動画です。日本語検定1級のリスニング問題を萌え声で再現しています。 MoeGoeのボイチェン(halfmony氏) - Twitter ：MoeGoe特有のイントネーションの弱さは、適切に発音された音声にボイスチェンジャーをかけることで改善できそう。 感想 音声合成のクオリティは総じて高く、VITSの技術を応用した製品の実用化が待たれます。</description></item><item><title>Windows 11にアップグレードして3ヶ月経った感想</title><link>https://asanobuturi.github.io/blog/20221018/</link><pubDate>Tue, 18 Oct 2022 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20221018/</guid><description>あいさつ こんにちは。中２の杉本です。なぜか副部長になりました。初日の朝は豪雨に見舞われた打越祭ですが、無事(?)開催できました。ご来場してくださった方々、差し入れをくださったOBの方々（差し入れは顧問が美味しくいただきました）、本来ならば文化祭の仕事はしないはずなのに働いてくれた中１に、この場を借りて感謝いたします。ちなみに僕は初日の朝、シフトの時間が来るまで靴下を乾かし続けていました。
本題 ※この記事は感想を書いてる。インストールの方法などは書いていない。
なぜWindows 11にアップグレードしようと思ったか。 去年の8月頃に、Windows 11（以下、Win11と表記）がWindows Insider ProgramのDevチャネルで公開が開始された際、友達が「朝起きたらWin11になっていた」と言っていてとても苦労していた。Win11の記事を見たり友達の話を聞いてみたろころあまり好みのUIでもなく、Androidアプリケーションが使える機能も然程魅力的には思えず、そもそもMacからWindows 10（以下、Win10と表記）の移行がほとんど完了して、スタートメニューのパネルもかなりカスタマイズして自分好みにした直後に、パネルシステムを廃止した新OSが出てきたのである。発狂。まぁ実際発狂はしなかったが、当分アップグレードはしないつもりでいた。
そうは思ったものの、ちょっとだけ試用してみたいと思い、128GBの増設したSSDににプレビュー版Win11をインストールすることにした。
PC正常性チェックという、Microsoftが公式で出しているWin11のインストールが可能か調べるツールがある。今でこそなぜインストールできないかが表示されるが、昔はインストールの可否しか出力されず、置き物と化していました。（その後、一度MicrosoftはPC正常性チェックの公開を一時停止。）そこでなぜできないかを困っていたところ、&amp;ldquo;WhyNotWin11&amp;quot;というWin11のインストール（アップグレード）できない理由を教えてくれるアプリケーションを見つけます。WhyNotWin11によるとセキュアブートとTPM2.0が確認されないとのことだった。それらの問題を修正後に、Win10のインストールUSBを作成してWin10をインストール、Win11にアップグレードしました。 1
色々使ってみたが、うん、何も変わってない。最初期の頃は確かUIが変わっただけでほとんど中身は変わっておらず（今もそうと言えばそうだが）、ただセキュリティ強化されただけだった。あと、Devチャネルだったこともあり、すぐグラッシュしてしまうのだが、普通ブルスクが出るところ、グリーンスクリーンが出てきたのには驚いた。何だったのだろうか。まぁ大した面白みなかったため増設したSSDはWin11用からLinux用に変えた。
その後、Win11のことなんて忘れてWin10でWSLにデスクトップ環境をインストールして遊んでいたら、LinuxのGUIアプリケーションを動かせる&amp;quot;WSLg&amp;quot;というものがあることを知り、それがWin11でしか動かせないこと2を知り、仕方ないので春休みぐらいにアップグレードしたは良いものの、強烈に使いにくく、すぐWin10に戻しましたが、中２の夏休みに入った頃にいい感じのフリーソフトのアプリケーションランチャーとWin11のUIをWin10に戻せる&amp;quot;Explorer patcher&amp;quot;というものも見つけたこともあり、これらを使ってだんだんWin11に慣れていこうということにし、アップグレードすることを決めた。
アップグレードしてみよう さぁ！アップグレードだ！って思い立ったのは良いものの、Win11ではなんとUEFIブートしかサポートしないとかいう暴挙にMicrosoftが出きたとのこと3。PCを自作したときにインストールしたMBRのWin10はアップグレードできないらしく、GPTに変換する必要があった4。一度目、春休みのアップグレードの際にはMicrosoft公式のmbr2gpt.exeというツールを使うことでmbrからgptに変換することができた。
そしてWin11を使いづらくてWin10に復元した後、間違いでメインOSのディスクをまっさらにしてしまった。重要なデータ類はHDDにバックアップを取っていたので大した損害は大した損害はなかったものの、再度OSをインストール羽目になってしまった。まぁ再インストールは何事もなかったの良しとしよう。
それでまた夏休みには入るまでそのままWin10を使うのだが、いざWin11にアップデートするとなったときMBRが障壁になっていた。インストールのときの僕は何を考えていたんだ5。そして前回と同じように公式のmbr2gpt.exeで変換しようとしてみたところ、なんか色々エラー吐かれてでききなかった。途方にくれていたときに有志の方が開発してくださっているgdiskのWindows版を使用する方法を知ったので、gdiskを使用しすることにし、ちゃんとGPTに変換することができた。
その後は特に大きなトラブルもなく、スムーズにインストール成功、データも残っていた。一つ問題があったのは、Intelが提供しているドライバサポート&amp;amp;アシスタントが作動しなくなったことでだ。まぁIntelから個別に取得すればよかったので特に問題なし。6
使用した感想 スタートメニュー 中揃えのスタートメニューやタスクバーは、Macで慣れていたのでストレスにはならなかった。 初期のころは前述したランチャーソフトを使わずにやってみようと努力したが、やはり使いにくかった。スタートニューの下半分が意味分からない機能のために占領されてしまっているために、一面で18個のアプリしかピン止めできない。それでは流石に使いにくいというわけで&amp;quot;CLaunch&amp;quot;というフリーソフトを使用することにした。CLaunchはボタン式のランチャーで、とても愛用している。（今も補助的な役割として使っています。）
UI Windows 10時代の角ばっていたUIから、全体的に丸びを帯びたデザインに変貌を遂げた。うっすらウィンドウが透けるMicaというWindows独特のUIはとても良い。
設定、フォト、ペイント、メモ帳、エクスプローラーなどのUIの更新も行われた。個人的には設定とフォトの新しいUIは好みである。エクスプローラーはUIを変えるにしてもリボンUIは廃止しないでほしかった。
WSA(Windows Subsystem for Android) 僕がインストールしたときはまだアメリカでしか公開プレビューは公開されておらず、裏口的な方法を利用することでインストールが可能だった。そしてまだアプリストアは使用できなかったが、（できたのか？）&amp;ldquo;WAS PacMan&amp;quot;というソフトを使用することで.APKからインストールすることができたので、試験的にApple Musicをインストールしてみました。使用してみた感想ですが、割りとサクサク動くが、サウンド関係はまだ弱いようで、Windows版のiTunesで再生したほうがよっぽど音質が良い。ちなみに、ゲームは試していない。スマホゲーは嫌いなのです&amp;hellip;
しかし、今は日本でも正式に公開プレビューが開始し、Hyper-Vと共存できるAndroidエミュレーターは少ない上に、ウィンドウにして動かすことができるのはとても素晴らしい。今後の動きに期待だ。
WSLg さて、当初の目標であったはずのWSLgだが、特に使い道が見つからずにテスト用アプリケーションであるxeyesだけ起動して終わった。今度StableDiffusion関係で活用できないか考えているところだ。
その他 仮想デスクトップ まず、仮想デスクトップ周りが強化されたのは嬉しいことだが、仮想デスクトップのスイッチャーを使用している際のエクスプローラーのクラッシュが非常に多くなった。Win10のときはクラッシュなんて起こったら珍しい方だったが、今では一日に一回ぐらい起きている。 スナップ機能の強化 殆ど使わない コンテキストメニュー なんかモダンになった。これはすぐ戻すべき。 あとはセキュリティ周りが強化されていたらしい。素人には全くもって理解できない。
Win11にするにあたって利用したソフト類 Explorer Patcher 前述の通り、Win11のUIを選択して戻すことができるアプリ。タスクバーはWin11だけどスタートメニューはWin10&amp;hellip;みたいなことも可能 CLauch 前述の通り、アプリケーションランチャー。スキンを適用することでWin11にあった雰囲気にできる。数あるランチャーソフトの中でもオススメ。 Rufus 前述の通り、.isoをUSBに焼くことができるアプリ。Win10のインストーラーを作成する際に使用。 WhyNotWin11 前述の通り、Win11へのアップグレードの可否を表示する際に使用。 Winaero Tweaker 本来ならばレジストリをいじらなければいけない設定をGUIで行えるようになる。便利。 22H2アップデートについて Win11最初の大型アップデートである22H2は、通知機能の改善やタスクマネージャーのUIの変更（中身はもちろん変わっていない）などがあったらしいとのことだが、そんなことはどうでもいい。スタートメニューにフォルダーが作れるようになった。これは大きな進展で、スタートメニューにピン止めできる上限が18しかなく実用性が皆無だったスタートメニューにフォルダが作れるようになり、その上ピン止め可能な段数を増やせる設定も追加されたのである。かなり良いアップデートだったと思う。
結論 WSLgやWSAなどの最新機能が多くあり、個人的に感じていたスタートメニューの使い勝手の悪さも22H2のアップデートでかなり改善されたため、UIの変更に極端な抵抗がなければアップグレードはオススメする。
おわりに 高二の元部長がCEATECに行くらしく、訪問記を書くかもしれないと言っているので次の更新は早くなるかも&amp;hellip;?
当時は.isoが提供されていなかったため、 Win10のインストーラーを作成→Win10をインストール→Windows Insider Programでアップグレード という手順を踏む必要があった。(ハズ)&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>物理部の歴史を探る</title><link>https://asanobuturi.github.io/blog/20220619/</link><pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20220619/</guid><description>(最終更新:2022年12月3日)
挨拶 どうも。中２の杉本です。 主にサイトの改装などをしています。
物理部の歴史を探る 物理部には'99からの部誌が保管されており、部員はそれを自由に読むことができます。そこには当時の物理部の事などが書かれているため、貴重な資料です。
過去の物理部のサイト 過去の部誌にHPのリンクが張ってあるんですが、発見できたものは
おそらく初代 おそらく二代 二代目の方のページのフッターに
画面解像度 800x600 以上、色数 16 bit 以上推奨
Internet Explorer 6.0 以上推奨
って書いてあるのがとても時代を感じる。というかIEサ終しましたね。
このブログは2015年で更新が止まってますし、これはatpagesがサービス終了したせいで詐欺サイトに飛ばされるようになってますね。
1982年の部誌 部誌のバックナンバーを仕舞おうとしたら、とても古い本が見つかりました。中身を見てみたところ、現浅野学園校長の名前と、昭和57年度部長という文字が。そう、現校長は物理部の部長だったんですよね。つまり物理部の部長は校長になれる&amp;hellip;ってコト!?
倉庫整理した 倉庫の整理を行いました。なんやかんやで高二も手伝ってくれてかなり綺麗になりました。
整理中 整理後：棚 整理後：床 なんか落ちてた では、短めな気がしますが、また今度。</description></item><item><title>高校数学で描くマンデルブロ集合</title><link>https://asanobuturi.github.io/blog/20220508/</link><pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20220508/</guid><description>はじめに お久しぶりです。2019年に最後のブログを投稿してから3年以上が経ったようなのですが、当時中学2年だった私もいつの間にか高校三年になってしまいました。物理部がブログではなくTwitterを積極的に使うようになってからは、このウェブサイトも部誌の電子版の公開以外で使うことはほとんどなくなったのです。浅野を卒業する前にもう一度くらいはブログ記事を執筆しておきたいと思い、今回キーボードをたたいています。 前置きはさておき、今回は久しぶり(そりゃそうだろ)に技術的な記事になります。
対象読者 日本の高校一年生相当以上の基本的な数学の知識を有している人。必要な知識を前半部分で解説し、高校一年生、あるいは中学生程度でもある程度は理解できるように書いているつもりです。
加えて、基本的なプログラミングの知識を有している人。今回はJavascriptを使用しますが、for文、変数などの一般的な文法が分かっていればおおよそ意味はつかめると思います。
マンデルブロ集合とは マンデルブロ集合というものを知っていますか？実態はただの複素数の集合※なのですが、よくこのような写真の形でウェブ上に共有されることがあります。
※集合とは 日本では「数学A」で学習する概念。 数やその他さまざまなものの集まりのこと。集合を構成する「要素」は数だけでなく、(たぶん)確率や式であったり、数学以外の分野に集合の考え方を応用すれば「単語」や「情報」であるパターンもある(と思う)。 マンデルブロ集合は、数、そのなかでも複素数の集合である。つまり、マンデルブロ集合の中には(\(-0.2+0.5i\))や(\(0.1-0.3i\))などの様々な複素数が大量に収納されている。(複素数については後程解説します。)
マンデルブロ集合の画像 一部を拡大したマンデルブロ集合の画像 画像出典：Wikimedia Commons(CC BY-SA 3.0)
下の画像は一部を拡大したもの。
このように、マンデルブロ集合をある規則にしたがって画像に落とし込むと、非常に美しい幾何学模様をみせるため、YouTubeをはじめインターネット上にはマンデルブロ集合を描画した映像がたくさん投稿されています。
この記事では、このようなマンデルブロ集合の写真を、高校数学の知識だけで描画することを試みます。なお、今回は上記の写真や映像のようなカラフルな色付けは行いません。
マンデルブロ集合の実態は、以下の漸化式が無限大に発散しないような複素数\(C\)の集まりです。(より正確な定義を後程記載)
\[ \begin {cases} Z_0 = 0\\ Z_{n+1} = {Z_n}^2 + C \end {cases} \]
このように定義されるマンデルブロ集合を構成する各複素数を複素数平面上に黒い点としてプロットしていくと、おおよそ上記の写真のような画像が得られます。
さて、一応ここまで高校数学の用語だけを用いて解説してきましたが、まだ該当範囲を学んでいない人にとってはちんぷんかんぷんだと思いますので、ここから一つ一つ噛み砕いて理解していきましょう。
ここから下は、複素数、複素数平面、漸化式、極限についての基礎知識の解説が続きます。これらを既に理解している方は、「マンデルブロ集合の要素を調べる」の章まで読み飛ばして頂いて構いません。
複素数(数学Ⅱで学習)とは 中学三年で習う平方根(ルート)を思い出してください。\(2\times2=4\)であるとき、\(4\)のルートすなわち\(\sqrt4\)は\(2\)となります。同様に\(3\times3=9\)なので、\(\sqrt9=3\)です。このように、ある数に対して、2乗することでその「ある数」となるような「別のある数」を求めるのがルートの計算です。
なお、\((-2)\times(-2)=4\)でもあるため、正確には\(\sqrt4=\pm2\)となります。また、\(\sqrt2\)などの値もコンピューターなどを使うことでおおよそ\(\pm1.41421356\)という値(近似値)を求めることが出来ます。実際に電卓でこの数を2乗してみれば、約2(1.999999993…くらい)になることが確認できると思います。
虚数の定義 さて、ここで負の数のルートを考えてみます。 \(\sqrt{-1}\)はいくつでしょうか？
\(\sqrt1\)であれば答えは\(\pm1\)、すなわち\(1\)と\(-1\)ですが、2乗して\(-1\)となるような数は存在するのでしょうか？
はい、そんな数は存在しません。正確には、実数(整数、分数&amp;amp;少数、ルートや円周率などの無理数)の中には存在しません。そこで、先ほど2乗して\(2\)になるような、少数で正確に表せない数を\(\sqrt2\)という記号で表したように、2乗して\(-1\)になるような数を\(i\)という記号を用いて考えることになったのです。つまり、\(i^2=-1\)であり、\(\pm i=\sqrt{-1}\)です。このような、2乗して負の数になるような数を、「虚数」と呼びます。
この、\(\pm i =\sqrt{-1}\)で定義される数\(i\)には、「虚数単位」という名前がついています。\(\pm i\)とあるように、この方程式の解はプラスマイナスの2つがありますが、虚数単位はそのどちらか片方のみを表します(計算の途中でプラスとマイナスをごっちゃにして考えなければどちらでも問題ない)。
虚数単位を使うことで、\(\sqrt{-1}\)だけでなく負の数のルートをなんでも表すことが出来るようになります。
例えば\(\sqrt{-5}\)は\(\sqrt{-5}=\sqrt{-1}\times\sqrt5\)と書き換えられますから、\(\sqrt{-5}=\pm\sqrt5i\)です。同様に\(\sqrt{-4}=\pm2i\)、\(\sqrt{-12}=\pm2\sqrt3i\)という風に表すことが可能です。
二次方程式の解の公式で、\(x^2+bx+c=0\)の解\(x=\frac{-b\pm\sqrt{b^2-4ac}}{2ac}\)のルートの中身\((b^2-4ac)\)が負の数になると「この二次方程式は実数解をもたない」だと言ったり、正の場合は「異なる実数解を2つもつ」というフレーズが出てきたりするように、ことあるごとに実数解という面倒な言葉を使うのは、ルートの中身が負の数であった場合には虚数解(複素数解)があるということの裏返しだとも考えられますね。
複素数の定義 先ほど定義した虚数単位\(i\)と2つの実数\(a,b\)を用いて、\[Z = a+bi\]と表すことの出来る数を「複素数」と呼びます。例えば\(3+4i\)という風に表される数のことです。
「\(5\)」のような普通の実数も、\(a=5,b=0\)を代入してみれば\(Z=5+0i=5\)と表せるので、複素数の一種と考えることが出来ます。逆に「\(\sqrt{-25}\)」のような虚数(「純虚数」と呼びます)も、\(Z=0+5i=5i\)と表せるので当然複素数の一部です。
ちなみに、このときに\(a\)の項を「実部」、\(bi\)の項を「虚部」と呼ぶことがあるので覚えておきましょう。
今までに出てきたいろいろな数のカテゴリー(体系)をまとめてみました。
さまざまな数 複素数の計算は、普通の一次多項式の計算と全く同じように行うことが出来ます。 例えば\((1+2i)+(3+2i)\)という計算は、そのまま\(4+4i\)という風に計算できますし、\((1+2i)^2\)のような場合は展開公式をそのまま使って\((1+4i+4i^2)\)となります。\(i^2=-1\)なので、最終的には\(-3+4i\)です。
複素数平面(数学Ⅲで学習)とは 数直線というものがありますよね。
数直線 一定間隔に引いた目盛りに数を割り当てて、ある数がどの位の大きさなのかを比較しやすくしたものです。複素数を数直線上に描くことを考えてみましょう。 例えば、複素数\(1+2i\)はどこにあるでしょうか？</description></item><item><title>AviUtlについて、導入など</title><link>https://asanobuturi.github.io/blog/20190306/</link><pubDate>Wed, 06 Mar 2019 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20190306/</guid><description>お久しぶりです。時がたつのは早いもので、前回書いたのは約3ヶ月前になってしまいました。
いや、すぐに記事を出すつもりだったんですよ。しかしいつの間にかもうこんな時期になってしまいました。本当にはやいです。
ということで今回はAviUtlについてです。
AviUtlとは 参考：AviUtlの易しい使い方（外部リンク）
概要 AviUtlとは無料で提供されている動画編集ソフトです。
ＫＥＮくんという方が開発しました。
特徴 操作がわかりやすい 多機能で動作が軽い なにからなにまで基本的に無料 使うのに管理者権限がいらない（インストールは不要） 有志の方たちが作ってくださったプラグインが豊富 使っている人が多く情報も多い 拡張がしやすい ざっくりとした歴史 1997年
「KENくん」さんが初めてAviUtlを公開。
拡張編集（後述）はまだなく、できることは基本的な動画のカットや結合でした。
2008年
「KENくん」さんが 「拡張編集」 を開発し、リリース。
AviUtlの機能がそれまでの何倍にも便利になりました。
～今 無料で高機能の動画編集ソフトとして有名になり、様々なプラグインなどが開発され、配布されました。
さらには「ゆっくりMovieMaker」「AviSynth」などのAviUtl対応のソフトも出ています。
AviUtlで編集しているYouTuberの方も結構います。
ゆっくりMovieMakerとは
ゆっくりMovieMaker（ゆっくりむーびーめーかー）は饅頭遣いのおもちゃ箱で配布、開発しているゆっくり実況プレイ動画用の動画編集支援ソフトである。
主にニコニコ動画、Youtube等の動画投稿サイトでアップロードされているゆっくり実況動画の作成に使用されている。
愛称は"YMM"である。
引用 - Wikipedia
「拡張編集」とは 拡張編集でできるようになったことで一番大きいのは、
↓これです↓
そう、タイムライン機能です。無料のソフトでタイムラインが扱えるものはかなり少ないです。
タイムラインのおかげで、視覚的に操作ができるようになり、とても編集がしやすくなりました。
さらに、↓設定ダイアログというのも追加されました。
このダイアログで簡単に座標の設定や効果をつけることができるようになりました。
とにかく今のAviUtlには欠かせない機能です。
導入方法 参考：AviUtl初心者が最初に読むべきページ【導入から使い方まで】（外部リンク）
分からないことなどがあったら上のサイトも見てみてください。おそらくこっちのほうがわかりやすくて正確です。
なお、一部フィルタ設定など省いている場所があります。
1.AviUtl本体と拡張編集の導入
2.L-SMASH-Works(入力プラグイン)の導入
↑これを導入することで、mp4、mp3などのファイル形式も読み込めるようになります。
必要のない方は読み飛ばしてかまいません。
3.x264guiEx(出力プラグイン)の導入
↑これを導入することで、mp4での出力が可能になり、出力の設定なども細かくできます。
先ほどと同様に必要のない方は読み飛ばしてかまいません。
4.初期設定など
AviUtl本体と拡張編集の導入 1.1 「AviUtlのお部屋」で、AviUtlxxx.zipとexeditxxx.zip(xxxはバージョン)をダウンロードします。
1.2 AviUtlxxx.zipとexeditxxx.zipを7-zipなどで任意の場所に解凍してください。
1.3 exeditxxxの中身をすべてAviUtlxxxに移してください。移したら、空フォルダになったexeditは削除してかまいません。 こんなかんじになります。
L-SMASH Works(入力プラグイン)の導入 2.1 AviUtl.exeがあるフォルダ（AviUtlxxxの中）にPluginsというフォルダを作ります。
2.2 POP@4bitでL-SMASH_Works_r935-2_plugins.zipをダウンロードしてきて任意の場所に解答してください。</description></item><item><title>MIDIについて語る その三</title><link>https://asanobuturi.github.io/blog/20181229/</link><pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20181229/</guid><description>前回はDominoでとりあえず音を鳴らしてみました。
今回はその続きです。 更新日時が結構空いてるなんて言ってはいけない。
取り消し 前回作った青い四角（これを「ノート」といいます。）を今度は消してみましょう。
方法① 上の方に鉛筆と四角い点線と消しゴムがあると思います。
←これ
今は鉛筆が選択されているので、消しゴムを選択します。
そして、消したいノートをクリックしてください。
すると消えます。
方法② こちらのほうが絶対に速いです。
こちらの方法を強く推奨します。
やり方は簡単。ノートをダブルクリックするだけです。
この方法だと消した後にわざわざ切り替えなくてよいのでとても楽です。
ノートの色々な変更 音の高さやタイミングの設定 ノートの真ん中をクリックしたまま動かすだけ。
以上！！
ノートの長さの変更 これは上の2行で終わった説明に比べて少し難しいです。
そうはいっても簡単ですが。
ノートの左右の端にマウスポインタを合わせてください。
するとマウスポインタが矢印に変わるはずです。
あとはクリックしながら伸ばしたり縮めたりするだけです。
音の強さの変更 音の強弱を設定するにはVelocityという値をいじる必要があります。
Velocityは和訳すると、「速度」です。
つまりどういうことかというと、
ピアノの鍵盤を強くたたいた時と、弱く押した時の音の違いということです。
すなわち、「押す強さ」≒「速度」なのです。
では実際に変えてみましょう。
下の方にグラフのようなものがあると思います。
編集モードを選んで（デフォルトでは直線）高さを調節すると、
音の強さが変わります。
Velocityが大きいと強く、小さいと弱くなります。
まとめ 基本的なことは大体わかったと思います。
それではよいお年を。</description></item><item><title>MIDIについて語る その二</title><link>https://asanobuturi.github.io/blog/20181130/</link><pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20181130/</guid><description>前回はMIDIについて少し話しましたが、今回はMIDIを使って 作曲、打ち込みのやり方を書いていきたいと思います。
ソフトの導入 まず最初に ここ でも紹介していた、MIDIファイルを作成する「Domino」というソフトを導入します。
ほかにもMIDIファイルを作成するソフトはあるのですが、
これが一番初心者に分かりやすいかつ、MIDIのたいていの機能があるので
今回はこれを使いたいと思います。ただDomino以外が使えないだけ
では Domino公式ホームページ にアクセスしてください。
右側にダウンロードのボタンがあるのでダウンロードしてください。
すると「Domino xxx.zip」（現時点で143）というZIPファイルが保存されるので、お好きな場所に展開してください。
なお、Dominoは管理者権限のいるようなインストールはしないのでご安心を。
では解凍したZIPファイルのDomino.exeというファイルを開いてください。
するとこの様な画面になると思います。 そしたら左上の「ファイル(F)」→「環境設定(E)&amp;hellip;」と環境設定を開いてください。
そして「MIDI OUT デバイス」を「Microsoft GS Wavetable Synth」に変更してください。
同様に「音源（音源定義ファイル）」を「GSm(Microsoft GS Wavetable SW Synth)」に変更してください。
変更が終わったら「OK」を押して環境設定を終了してください。
これで導入は完了です。
Dominoの使い方 とりあえず音を出してみる ではピアノの右側の好きなところを左クリックしてみて下さい。
するとこのように青い四角ができるはずです。
ではスペースキーか上部にある緑の三角の再生ボタンを押してください。
ピアノの音が出たはずです。もしできていないなら環境設定を見直してみてください。
楽器を変えてみる 次に楽器を変えてみましょう。
左にあるこの部分をダブルクリックしてください。
するとこのような画面が出てくるので、
左のマップからオルガンを選択し、「PC#」を「017 Organ 1」に変更してください。
ではまた再生してみてください。音が変わりましたね。
まとめ 今回でDominoで作曲する一歩を踏み出しました。
ということで次回に続きます</description></item><item><title>MIDIについて語る その一</title><link>https://asanobuturi.github.io/blog/20181126/</link><pubDate>Mon, 26 Nov 2018 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20181126/</guid><description>みなさんは、MIDIというものを知っていますか？
例えばこんな感じの動画、見たことありませんか？
このような形の動画は「曲名　MIDI」というように検索すればたくさん出てきます。
ではMIDIとはいったい何なのでしょうか。
MIDIの使われ方 MIDIが使われる場面の多くは、
・曲などの打ち込み1
・作曲
という時でしょう。
冒頭の動画もAlan Walkerの「Faded」という曲を打ち込んで、MIDIファイルにしたものです。
YouTubeにあるMIDI系の動画のほとんどはSynthesiaというソフトを使ったものです。
このSynthesiaによって上から降ってくる動画を作ることができるのです。
また、作曲もMIDIをつかうことで手軽にできます。
つまり&amp;hellip;
MIDIとは かみ砕いていうと、
MIDIというのはコンピューター向けの楽譜のようなもの。
これを作って作曲したり、打ち込みをするわけです。
パソコンのソフトだけでMIDIファイルを作ることもできますし、
MIDI対応の楽器をパソコンにつないで演奏したデータを取り込むこともできます。
これのDomino とか使えば比較的簡単に作曲ができますよ。
MIDIの長所 MIDIの長所　１ mp3やwavといった音データと違い楽譜のような構造なので、
曲などの場合はファイルサイズが小さくなりやすいです。
MIDIの長所　２ 作曲などをするときに楽器が弾けなくても大丈夫！
でもやるならある程度は引けたほうがいいと思いますよ。
MIDIの長所　３ どの音がどのタイミングでなるかというデータの集まりなので、
専用ソフトなどで開けば簡単にピアノなどで弾くことができます。
という感じです。
まとめ 長くなりそうなので複数回に分けることにします。
それではまた。
打ち込み（うちこみ）とは、主にドラムマシンやミュージックシーケンサーなどに 前もって演奏情報を入力しておいて（打ち込んでおいて）、 それを再生することで演奏を実現させる技法、またはその結果としての音楽のこと。 Wikipedia より&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>DELL OPTIPLEX 780手術</title><link>https://asanobuturi.github.io/blog/20181113/</link><pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20181113/</guid><description>DELLのパソコンが動かない! 物理部では、私物のノートパソコン等を持ち込んで作業ができない場合、部活にあるパソコンを貸し出して使うことがあります。
PC班員が作業をするときは、持ち込むか借りるかの二択で、部活のPCは文化祭の展示でも使われるものになります。
部活のPCの中に、DELLのOPTIPLEX780があるのですが、それがある日突然電源がつかなくなってしまいました。
電源ボタンを押しなおしたり、電源ケーブルを押し直したりしても動かないので、電源が壊れているという判断に至りました。
変な電源 替えの電源に交換すればいいのですが、組み込まれていた電源が見慣れない形のものでした。よく見るATX電源などではなく、小さな筐体に収まるように独自に設計されたもののようで、物理部内に替えの電源がなかったのです。
「DELL 電源」とAmazonで検索したら、意外と簡単に見つかりました。3000円くらいで安かったので、すぐに買うことになりました。
電源到着、そして交換 暫く待っていたらAmazonから電源が届きました。
日本の倉庫から発送されるのかと思っていたのですが、中国語の伝票が張り付いて届いたので驚きました。深センの業者から香港国際空港→成田空港と飛んできたようです。
一部モザイクを掛けておきました。不必要なところにもかかっているかもしれませんが&amp;hellip;
中にすごく潰れやすいプチプチが入っていました。雑巾絞りでブヂブヂブヂッってやるの楽しかった。
上のが新しい電源です。古い電源はアルミの表面が錆びているみたいです。きれいになってよかった。ついでにPCの中のほこりも拭き取っておきました。
換装前と換装後ではこんな感じ。見た目上ではきれいになって以外に特に変わりはないですが。狭い筐体に配線、CPUファン、HDD、DVDドライブなどを詰め込んでいるせいで色々外さないと配線し直すことができなかったので非常に面倒でした。
その後 蓋をしめて、電源ケーブルをさしたらちゃんと起動しました。よかった。
このブログを書いている日に、新しく別のPCのOSが起動しなくなったのは内緒。
それでは、最後まで読んでいただきありがとうございました。他の記事もぜひ読んでいってくださいね。</description></item><item><title>物理部員のよく使うブラウザ</title><link>https://asanobuturi.github.io/blog/20181109/</link><pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20181109/</guid><description>今、あなたはこのページをどんなブラウザで見ていますか。 物理部員のほとんどがこだわりのブラウザを使っています。 では、そんな物理部員たちのブラウザを見ていきましょう。
※これには個人的な意見がまたまたとても多く含まれています。
また、もしかしたら間違った情報があるかもしれません。
Chromium系列 Chromiumは、Googleが主体となって開発したオープンソースのブラウザで、Google Chromeなどの元になっています。
WEBページはHTMLという形式で文字・画像などの情報がまとめられ、
それをブラウザに搭載されているレンダリングエンジンが画面に描画します。
Chromium系列のブラウザでは、レンダリングエンジンにBlinkを採用しています。
Google Chrome 今世界で一番使われているブラウザです。
リリース当時の他のブラウザと比べて、ものすごく軽いブラウザだったので、今も大人気です。 とくにこだわりがない人はこれか、Windows10標準の Microsoft Edge がおすすめです。
Chromium Chromeとほぼ同じです。
オープンソースで（くどい）インストールが不要です。
「Chromium使うならChromeでいいだろ」というのが物理部のブラウザマスターの意見です。
Chromiumという名前は金属のChrome（クロム）の元素名だと言う事です。
Opera ノルウェーの会社が作ったブラウザです。（現在は中国の会社に買い取られてしまいました。） Chromeよりも軽く、標準で広告ブロッカー1がついています。
Vivaldi Operaの開発者がOperaの開発後に作ったブラウザです。
広告ブロッカー機能はもちろん、ページキャプチャーなどの機能もあるので、おすすめです。
また、OperaはOperaの拡張機能しか入らなかったので「この拡張機能が入れられない！」という事がありました。
しかし、VivaldiはChromeの拡張機能がすべて入るので、主要な拡張機能をほとんど入れることができます。
また、標準でタブを管理する機能がついています。
例えば&amp;hellip;
こんなことができたり&amp;hellip; Chromeより良いブラウザがいいという方にはお勧めです。
その他 FireFox Mozilla Firefoxとも呼ばれます。
Chromeが出る以前にあったブラウザで、InternetExplorerでなければこれを使う、という感じでした。
豊富な拡張機能も魅力の一つです。
Microsoft Edge Windows10にプリインストールされているブラウザです。
そこそこ軽いブラウザです。
でもできるならChromeなどを使ったほうがいいでしょう。
Safari Appleが開発しているMacOS向けのブラウザです。
Windows向けもありますがあまりおすすめしません。
おわりに 結局、物理部員はVivaldiを推しているようですね。
&amp;hellip;と、いうことでですね、以上です。
最後まで読んでいただきありがとうございました。
WEBサイトの広告を表示させなくするものです。 スマホなどの場合、これを使うことによってデータ通信量が減ることがあります。 ただし、読み込みが遅くなる場合があるので注意です。&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>物理部員PC班のよく使う言語</title><link>https://asanobuturi.github.io/blog/20181102/</link><pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20181102/</guid><description>ここでいう言語というのはもちろんコンピュータープログラムで使う言語のことです。 別に「英語で会話しなくてはならない」なんていう縛りがあったりするわけじゃありません。
※これには個人的な意見がまたまたとても多く含まれています。
また、もしかしたら間違った情報があるかもしれません。
C系列 C言語は、すぐ下に書いたものを読んで頂ければわかりやすいと思います。
C言語は初版が半世紀近く前に使われはじめて以来、様々なプログラミング言語の代表格として君臨してきました。
C言語をベースとして、様々な機能が追加されたC++,C#,Javaなどが使われています。
C言語 物理部のパソコン班の中一のほとんどがこの言語から始めます。
参考書籍なども多く、今あるプログラミング言語はC言語がもとになっているといっても
過言ではないと思います。でも最初に断ったようにC言語を話す人は（少なくとも物理部には）いませんよ。
C++ 中二～中三ぐらいから自然とC++を始める人が現れてきます。
当初、この言語はC言語の拡張版として開発されていましたが、
今はC言語とはそれなりに区別されています。
とある人はこの言語の文法などにハマって、ゲームの制作スピードが落ちてしまいました&amp;hellip;
Java C++を参考にして作られた言語です。
物理部員のよく使うソフト で書いた通り、Eclipseというソフトを使って書かれます。
環境構築がめんどくさいけどAndroidのアプリなどの制作に使われています。 結局Javaあきらめてたので&amp;hellip;
C# C#自体で作るのではなく、Unityという開発環境でこの言語を使う、という人が大半です。
歴史的には　C言語　→　C++　→　Java　→　C#　という順番です。
C#はMicrosoftが開発したので、.NET Frameworkなどを使ってWindowsのアプリを簡単に作れるようにもなっています。
インタープリタ型の言語 インタープリター型言語は、Cなどの静的コンパイラ型の言語とは違い、プログラムを機械語に翻訳する作業をプログラムの実行時に行います。
俗に動的言語とも呼ばれます。
Python 「C言語に飽きた！」という人などがたどり着いたのがこれです。
ほかの言語とは違う文法で、読みやすく設計されています。
また、ライブラリ（拡張機能みたいなもの）が多めなので、色々なことができます。
Java 前述 の通り。Cと違って中間言語というものにしてから
実行するので、Javaが入っていればいろいろなプラットフォームで動かすことができます。
JavaScript 「またかよ&amp;hellip;」と思ったそこのあなた！
JavaとJavaScriptはオーストラリアとオーストリアぐらい違うといわれるくらい違いますよ！
JavaScriptはブラウザ上で実行されます。たとえばこれとか。
その他 なでしこ 「プログラミングって英語じゃん！やだ！」って日本人が好きそうな言語がこれです。
この言語は日本語で書くことができる日本産の言語です。
物理部でははるか昔に使われていたそうですが&amp;hellip;
個人的にはソース読むのも書くのも大変そうだと思います。
Scratch 「プログラミングって英語じゃん！しかも文字うたなきゃいけないし！やだ！」
という人や初心者の方におススメしたい言語がこれです。
ブロックを組み合わせるだけでプログラミングができます。
公式のホームページには世界中の人の作品も公開されているので参考にすることができます。
ただそこにあるゲームにハマりすぎないように注意！
Ook! 「プログラミングって英語じゃん！人間の言葉なんてわかるわけないだろ！やだ！」
というオランウータンのための言語です。世界って広いですね。
「Ook.」「Ook?」「Ook!」の三種類しか使いません。
なので暗記がものすごく苦手という方にも良いかもしれません。
ただものすごく読みにくいと思いますよ&amp;hellip;
あれ、これって「物理部員がよく使う言語」じゃないじゃん&amp;hellip;</description></item><item><title>物理部員のよく使うソフト</title><link>https://asanobuturi.github.io/blog/20181026/</link><pubDate>Fri, 26 Oct 2018 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20181026/</guid><description>物理部員がよく使うソフトを紹介したいと思います。 ここにあるソフトは基本的に無料なのでよければ調べてみてください。
※これには個人的な意見がとても多く含まれています。
プログラミング Visual Studio 2017 Community 物理部のパソコン班のほとんどが使っています。
プログラミングをする上での開発環境として王道です。
これを入れておけば困ることはなさそうです。
Visual Studio Code 一部の人が使っています。
自分の好みに合わせてカスタマイズができますが、今のところ物理部にはWi-Fiがないため、
本来の力を発揮できていないようです。悲しい。
Atom これまた一部の人が使ってます。
Git Hubが制作したカスタマイズできるテキストエディタです。
ですが、今のところ物理部にはWi-Fiがないため、本来の力を発揮できていないようです。
ん？どこかで同じような文章を見たような&amp;hellip;
Eclipse IBMが開発した統合開発環境で、 物理部では主にJavaというプログラミング言語を書くのに使われています。 結局Javaあきらめてたので今は使われていません。
シミュレーションなど LTspice 物理部の電工班の一部の人が使っています。 様々な回路素子を組み合わせて動作をシミュレーションすることが出来ます。 一々ブレッドボードの上に回路を組むのが面倒な時に使います。
音楽・動画関係 Domino MIDIファイルという楽譜のような形式の音楽ファイルを作る作曲ソフトです。
これで文化祭の自動演奏装置のデータなどをいろいろしていました。
Audacity ちょっとした音の編集からガチなものまでいろいろ編集ができるソフトです。
音のピッチあげたり&amp;hellip;音量上げたり&amp;hellip;
あとPCからの音をマイクを通さずに録音することも可能です。
AviUtl 無料の動画編集ソフトです。
このソフトもプラグインを入れることでできることがかなり増えます。
有料ソフト並みの使いやすさだと思うのでオススメです。
VLC media player いろいろな形式の動画を再生することができます。 再生だけでなく、ほかの形式への変換も可能です。
画像 ペイント Windows標準のソフトがなぜか物理部の絵師に使われている&amp;hellip;
弘法筆を選ばずってことなのかな？
EDGE ブラウザじゃないですよ。EDGEという高機能ドット絵エディタです。
Dominoの開発者と同じ方が開発されています。
Domino同様、分かりやすくて使いやすい！
inkspace inkscapeはベクター1（.svg）の形式の画像ファイルを作ることができるソフトです。
シンプルなデザインをするときに使われます。
物理部員に絵心がないわけではありません。ハイ。
GIMP 結構本格的な画像編集ソフト（と思っている）。
たまに使われています。
GIMP難しいからあんまり書けません&amp;hellip;
手軽に透明.png そのまんまの機能があります。 機能が透明化のみなので手軽に使うことができます。 よく透明化だけする人にはオススメです。
おわりに 書いてみてわかりましたが、物理部員は結構メジャーなソフトを使っているようですね。</description></item><item><title>近況報告とか</title><link>https://asanobuturi.github.io/blog/20181025/</link><pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20181025/</guid><description>前回の更新から一年ほど経ちました。この間に新しい中学1年生が入ってきたり、2018年の打越祭(文化祭)があったりしたので近況報告をしたいと思います。
今回のブログを書いているのは今までの人とは別の人です。
最近の物理部の様子の写真でも貼っておきます。中1も何人かいます。 中学1年生がたくさん入ってきた 今年は中学１年生がやたらとたくさん入ってきました。ざっと2,30くらいでしょうか。この人数は一部の運動部よりも多かったりするらしいです。部活動紹介のときに触らせた部員作成のゲームや電子工作の作品に興味を持ってくれたのかも知れません。
しかし今年度の中1に関して危惧されているのは、電子工作班の人数が入ってきた人数の割に少なすぎることです。現役の電子工作班員も、「人数が少なすぎて技術を受け継ぐのが難しいかもしれない」と言っていました。
また、多くの人が案の定幽霊になってしまいました。あまり人が多くてもモノが足りないので意味がないのですが、幽霊になってしまったのは残念です。そのせいもあって、今のところはパソコンをあと一、二台(新調|修理)すれば問題なさそうです。
2018年打越祭(文化祭)が終わった 2018年の打越祭が終わりました。第三十九回だそうです。今年は9月8日と9日に開催されました。全体としての様子など詳しい情報は 打越祭公式Twitter なんかを見て頂ければわかりやすいと思います。 中華3Dプリンターを買った 2017年は、部費が少し余ったということで最後の方に前々からほしかった3Dプリンターを買うことになりました。
今回買ったのはQIDI TECHNOLOGYという中国・浙江省温州市の会社のX-ONE2です(ONEなのに2とは(笑))。 アマゾンの商品ページ が有ったので貼っておきます。
3Dプリンターというと、台湾のXYZ Printingが有名ですが、年度末で部費もあまり残っていないので、たくさんのプリンターの中でも高コスパだったこのプリンターを買うことになったようです。
実際にこのプリンターを使ってみての気になったことを書いていこうと思います。ただし、他のプリンターを使ったことがあるわけでもないので比較はできません。完全に独断です。
ほっとくとパイプの中で樹脂が詰まる これは他のプリンターでも同じかも知れません。印刷が終わった後、掃除をしないとパイプの中で溶けた樹脂がつまりました。二回目の印刷でなかなか樹脂が出てこないと思ったら中にキノコが入っていました。 遅い 3Dプリンターってこんなに時間がかかるものなんですね。物理部では最初にテストとして5cm立方くらいの中が空洞の蓋がない立方体を印刷しましたが、かなり時間がかかって部活動終了時刻になってからは倉庫で一人動いてもらいました。
さすがに次の活動日には印刷が終わっていましたが。
モデリングが難しい 実は、プリンターを買ってから、テストとして最初についてきた3Dデータひとつと立方体を印刷した以外に何も印刷していません。
作りたいものが有っても、3Dのモデルを作ることが出来る人が物理部に居ないのです。
今、 Blender という3Dのソフトを勉強していたりするので、来年の文化祭でなにかできたらいいなと思っています。
最後に ということで、最後まで読んでいただきありがとうございました。次回も早めに更新していきたいと思います。物理部にあった古いパソコンを何台か修理したりしているので、その報告でも書こうかと思っています。</description></item><item><title>2018年2月は満月にならない</title><link>https://asanobuturi.github.io/blog/20171217_2/</link><pubDate>Sun, 17 Dec 2017 08:49:15 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20171217_2/</guid><description>まずは，これを見てください。
上の画像は，国立天文台の暦のページからお借りしたのですが，普段なら
このように「望(満月)」があるはずなのに，2018年2月の暦には「望(満月)」がないんです。
今回は，このことについてです。
そもそも満月とは 天文学的な意味での満月（望）は、太陽、地球、月の位置関係によって決まります。満月とは、地球から見て月と太陽が反対方向になった瞬間（月が太陽の光を真正面から受けて、地球からまん丸に見える瞬間）の月のことを指します。
つまり，「○月○日は満月」ではなく，「○月○日 ○時○分の瞬間に満月になる」ということです。上の2017年12月の例で言うと，2017年12月4日 0:47の瞬間，地球から見て月と太陽が反対方向になります。
なぜこんなことが起こるのか 実は，2018年1月と3月に満月はそれぞれ２回あります。 2018年1月から3月の満月を見てみると，
1 2 3 4 2018/01/02 11:24 2018/01/31 22:27 2018/03/02 09:51 2018/03/31 21:27 こんな感じで，ちょうど2018年2月に満月が来ません。
満月から次の満月までは約29.5日なので，うまく１月の最後に満月が来れば２月に満月が来なくなるというわけです。
2018年2月以外にはいつあるの？ 1 2 3 4 5 6 7 8 9 10 import ephem pr=0 d=ephem.Date(&amp;#39;1800&amp;#39;) while d&amp;lt;ephem.Date(&amp;#39;2500&amp;#39;): d=ephem.next_full_moon(d) tl=ephem.Date(d+ephem.hour*9) mo=tl.datetime().month if (mo-pr+12)%12&amp;gt;=2: print(&amp;#39;{0}/{1}&amp;#39;.format(tl.datetime().year,mo-1)) pr=mo その結果は，
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 1801/2 1809/2 1847/2 1866/2 1885/2 1915/2 1934/2 1953/2 1991/2 2010/2 2018/2 2029/2 2037/2 2067/2 2094/2 2105/2 2143/2 2162/2 2181/2 2200/2 2219/2 2238/2 2257/2 2287/2 2306/2 2325/2 2363/2 2382/2 2401/2 2420/2 2439/2 2466/2 2485/2 前回は2010年2月，次回は2029年2月。大体100年に４回から６回あります。</description></item><item><title>ホームページ引っ越し</title><link>https://asanobuturi.github.io/blog/20171217/</link><pubDate>Sun, 17 Dec 2017 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20171217/</guid><description>Hello, New Home page!
新しいホームページからこんにちは！
ということで，HPを移転しました。若干デザインの変更もしてあります。
引っ越し先 以前は， 忍者ホームページ を使っていたのですが，色々あって GitHub Pages に移転しました。
デザインの変更 このアップデートから，Material Design Liteという，Google製のフレームワークを使っていません。 左上にあるハンバーガーメニューも，他のサイトを色々と参考にしながら作りました。
それだけ。短いですが今回はこのへんで終わり。</description></item><item><title>ホームページ更新</title><link>https://asanobuturi.github.io/blog/20171126/</link><pubDate>Sun, 26 Nov 2017 08:37:58 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20171126/</guid><description>はじめまして。というか、お久しぶりです。の方が正しいですかね。書いている人（前回の更新は２代前の部長さん）は変わりましたが。
ホームページを更新しました 多分ちょうど１年ぶりの更新になります。 というか、最終更新日（だと思われる）のが2016年9月9日。去年の文化祭直前。 そして、その時のホームページが、
部誌のページ
ゲームのページ
（ぜんぜん「文化祭終了後」ではないですね。もう次の文化祭も終わったのに。） 来年はちゃんと更新するのでご安心を～（←信用できない）
ブログっぽい何か（これのこと）を作りました そもそも、ブログはもとから存在していました。
物理部活動日誌
↑これのことです。
一応、このブログのIDとパスワードはもらっているので更新はできます。 でも、上のブログって自由度が低いし、それに物理部のホームページを一つにまとめたかったので、 こっちにブログ（っぽい何か）を新しく作りました。
「じゃあ こっち もまとめろよ」と言われそうですが、それはまだちょっと先になりそうです。
このホームページは無料版の忍者ホームページを使っているのですが、 忍者ホームページはPHPが使えないので、ブログ向きではないんです。無料で使わせていただいているのに失礼ですが。
このページも、HTMLから直接いじって書いている状態です。
なので今現在、ホームページを移転することを考えています。</description></item></channel></rss>