<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技術記事 on 浅野学園物理部</title><link>https://asanobuturi.github.io/blog/categories/%E6%8A%80%E8%A1%93%E8%A8%98%E4%BA%8B/</link><description>Recent content in 技術記事 on 浅野学園物理部</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 06 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://asanobuturi.github.io/blog/categories/%E6%8A%80%E8%A1%93%E8%A8%98%E4%BA%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>話題のアニメ声合成AI「MoeGoe」を使ってみよう</title><link>https://asanobuturi.github.io/blog/20221106/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20221106/</guid><description>ツイッターで、最近新しく公開された音声合成AI「MoeGoe」が話題になっていたので、試してみました。
MoeGoeとは まずはこちらをご覧ください。
なにやら中国の方が作られた音声合成AI「MoeGoe」の2891人の日本アニメキャラの音声モデルが公開されてしまった！！Hugging Faceでデモが試せる！早速まどマギの５人に喋ってもらった！！うわうわうわ！ヤバいよヤバい本当にヤバいよコレはヤバい！！　https://t.co/wzHJdwEvr7 pic.twitter.com/EFgUId9qpd
&amp;mdash; うみゆき@AI研究 (@umiyuki_ai) November 5, 2022 MoeGoeは、最新のアニメ声合成AIです。名称は日本語の「萌え声」が由来だと思われますが、開発者は中国人の方のようです。GitHub及びHuggingFaceでソースコードや学習済みモデルなどが配布されており、誰でも試すことができます。学習済みモデルに関しては、商用利用は固く禁止されています。
技術的には、昨年韓国で開発された音声合成技術の「VITS」を応用したものになっているようです。VITSは今年初めごろに日本でも話題を呼び、複数の日本語による実装レポートもWEB上で発表されました。(Qiita「【機械学習】VITSでアニメ声へ変換できるボイスチェンジャー&amp;amp;読み上げ器を作った話」など)
VITSの仕組みについては一応英語の論文があるので、そちらをご覧ください。15ページ程度ですが私には読めません。(https://arxiv.org/abs/2106.06103)
また、学習に際しては、アニメのセリフを中心に多くの音声をデータベース化し配信しているウェブサイト「VoiStock」などから収集したデータを一部のモデルで使用しているとのことです。NovelAIがStableDiffusionベースのアニメイラスト生成AIをリリースした際、学習に使用したデータがイラストの無断転載サイトから入手したものであったことがネット上で非難の対象になりましたが、このサイトについても著作権周りのことは少し気がかりです。
追記：VoiStock社社長の福井氏によると、「15秒未満の音声には著作権利は発生しないので問題ない」とのこと(引用元記事)。文化庁HPの「著作物が自由に使える場合」の記事もご覧ください。法律についての判断は読者各位に委ねます。
作者のCjangCjenghさんがビリビリ動画に公開している紹介動画も併せてご覧ください。(https://www.bilibili.com/video/BV1P8411Y7v5/)
MoeGoeを試す方法3つ MoeGoeは現在、GitHubで公開されているプログラムのほか、HuggingFace上のオンラインデモページ、Microsoft Azure上に構築された合成済み音声を返すAPIとそれを利用したAndroid向けアプリなどが主にリリースされています。
とりあえず試してみるだけであれば、すぐにブラウザから使用することができるHuggingFace版を試すのが良いでしょう。Androidユーザーの場合はアプリ版も有用です。以下にリンクを記載しています。
HuggingFaceのデモページ(ブラウザ版、PC・スマホ等対応) Android版アプリ(Google Play) この記事では、せっかくなのでGitHubで公開されているものを実際に手元のパソコンで実行することを試みます。(といってもめちゃくちゃ簡単です)
MoeGoeをローカル環境(自分のパソコン)で実行しよう ※下記のソフトウェアを使用して発生したいかなる問題についても、私達は責任を負いかねます。
現在、MoeGoeのプログラムはWindows用のものしか配布されていないので、実行にはWindowsパソコンが必要です。実装自体はPythonですので、技術的にはMac、Linux等でも実行出来ると思われます(GUIアプリを除く)。
また、7-Zip形式の圧縮ファイルを解凍できるソフトウェアが何かしら必要です。7-Zipをインストールしておけば問題ないでしょう。
Windowsパソコンさえ用意できれば、実行ファイルは全て完全にexeファイルにまとめられているので、ソースコードのビルドなどに怖気づく必要は全くありません(私はexeファイルがあるのに気づかず、プログラムを地道にビルドしようとしてVisualStudioの依存関係不足で時間を溶かされました)。
以下、手順を示します。
MoeGoeの実行ファイルをダウンロード まずはMoeGoeのGitHubレポジトリにあるReleasesページをブラウザで開き、最新のMoeGoeの実行ファイル(exeファイル)をダウンロードします。この記事の執筆時点で最新版はVer.3.0.0でした。「MoeGoe.7z」と書かれているファイルをダウンロードし解凍してください。
MoeGoeのReleasesページ：https://github.com/CjangCjengh/MoeGoe/releases
便利なMoeGoeのGUIアプリをダウンロード このファイルだけでも実行することは可能ですが、コマンドライン上での操作となり不便ですので、GUIアプリも続けてダウンロードします。MoeGoe GUIのReleasesページから、最新の「MoeGoe_GUI.exe」をダウンロードします。先ほど解凍したMoeGoeのフォルダーの中に入れておくのが便利ではないでしょうか。
MoeGoe GUIのReleasesページ：https://github.com/CjangCjengh/MoeGoe_GUI/releases
学習済みモデルのダウンロード 最後に、各キャラクターのボイスを学習した学習済みモデルをダウンロードします。GitHubページから好きな物を選んで、それぞれ「Config File」と「Model」を両方ダウンロードしてください。私はMoeGoeのフォルダー内に「models」というフォルダーを作成し、その中に配置しましたが、ファイルがどこにあってもあとでその場所を適宜指定するだけなので問題ありません。
複数のモデルをダウンロードする場合は、以下のように適宜分かりやすいように名前を変更しておいた方が無難です。
モデルごとに対応している言語が異なっているので、ダウンロードリンクの上に書かれている対応言語を確認してください。中には日本語非対応のモデルもいくつかあります。
「ゼロの使い魔」や「ToLoveるダークネス」など絶妙に古いアニメのモデルが多いです。開発者の推しなのか、ノベルゲームメーカー「ゆずソフト」のキャラクターのモデルがなかなか充実しています。
また、下部にあるVoistockモデルは、先述のアニメ音声収集サイトから大量のデータベース化された音声を収集して学習した大型モデルで、3000人弱のキャラ(海外版声優と日本語版声優・同じ声優の演じる別キャラなどの重複はあるとみられる)の音声を学習しているモデルです。これが事実上の標準モデルでしょうか。日本語以外に英語、韓国語、中国語にも対応しています。
MoeGoeの学習済みモデルの配布ページ：https://github.com/CjangCjengh/TTSModels
実際に動かす 全ての必要ファイルのダウンロードが終わったところで、実際に音声合成を試してみましょう。
MoeGoe_GUI.exeを実行します。
このような画面が起動するので、それぞれのメニューについて、上から順に、以下のファイルを指定します。
「打开文件」：「ファイルを開く」の意。このボタンをクリックして、先ほど解凍したフォルダーの中にある「MoeGoe.exe」のファイルを指定する。 「VITS」「HuBERT-VITS」「W2V2-VITS」のメニュー：AIモデルの種類を指定する。MoeGoeが現在公開している学習済みモデルのほとんどがVITSなので、基本的にはVITSを指定しておけば問題ない。モデルをダウンロードしたページに、そのモデルがVITSなのか、HuBERT-VITSなのかといったことが書いてあるので確認する。 「打开模型」：「モデルを開く」の意。このボタンをクリックして、使いたいモデルの.pthファイルを指定する。 「打开配置」：「設定を開く」の意。このボタンをクリックして、先ほど指定したモデルに対応するconfig.jsonファイルを指定する。 モデルを設定出来たら、「文本」の画面に喋らせたい文章の内容を入力し、「说话人」に表示されるリストから、喋らせたいキャラクターを選択します。
最後に、保存ボタンをクリックし、保存先を指定すると、合成された音声が保存されます。「重新合成」は上書き保存、「删除」は削除、「播放」は保存した音声の再生、「停止」は再生中の音声の停止です。
また、一部の複数言語に対応したモデルを使用する際には、[JA]こんにちは[JA]や[ZH]你好[ZH]のように、中括弧で言語を示す必要があります。日本語はJA、中国語はZH、韓国語はKO、英語はENです。
設定はこのようになります。MoeGoe_GUIのアプリを日本語化してみたのですが、あとでMoeGoe_GUIのソースコードのライセンスが不明なことに気づき、公開はしていません。MoeGoe本体はMITライセンスだったので、いつかMoeGoe_GUIのライセンスが更新されたら、日本語化したものをGitHub上で公開するかもしれません。(ちなみに、「文章を消去」はおそらく誤訳で、発音・アクセント・イントネーションの手動設定？が正しい)
追記：5chユーザーの方が翻訳したバージョンが配布されているようですので、今後もこちらから配布を行う事は致しません。</description></item><item><title>Windows 11にアップグレードして3ヶ月経った感想</title><link>https://asanobuturi.github.io/blog/20221018/</link><pubDate>Tue, 18 Oct 2022 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20221018/</guid><description>あいさつ こんにちは。中２の杉本です。なぜか副部長になりました。初日の朝は豪雨に見舞われた打越祭ですが、無事(?)開催できました。ご来場してくださった方々、差し入れをくださったOBの方々（差し入れは顧問が美味しくいただきました）、本来ならば文化祭の仕事はしないはずなのに働いてくれた中１に、この場を借りて感謝いたします。ちなみに僕は初日の朝、シフトの時間が来るまで靴下を乾かし続けていました。
本題 ※この記事は感想を書いてる。インストールの方法などは書いていない。
なぜWindows 11にアップグレードしようと思ったか。 去年の8月頃に、Windows 11（以下、Win11と表記）がWindows Insider ProgramのDevチャネルで公開が開始された際、友達が「朝起きたらWin11になっていた」と言っていてとても苦労していた。Win11の記事を見たり友達の話を聞いてみたろころあまり好みのUIでもなく、Androidアプリケーションが使える機能も然程魅力的には思えず、そもそもMacからWindows 10（以下、Win10と表記）の移行がほとんど完了して、スタートメニューのパネルもかなりカスタマイズして自分好みにした直後に、パネルシステムを廃止した新OSが出てきたのである。発狂。まぁ実際発狂はしなかったが、当分アップグレードはしないつもりでいた。
そうは思ったものの、ちょっとだけ試用してみたいと思い、128GBの増設したSSDににプレビュー版Win11をインストールすることにした。
PC正常性チェックという、Microsoftが公式で出しているWin11のインストールが可能か調べるツールがある。今でこそなぜインストールできないかが表示されるが、昔はインストールの可否しか出力されず、置き物と化していました。（その後、一度MicrosoftはPC正常性チェックの公開を一時停止。）そこでなぜできないかを困っていたところ、&amp;ldquo;WhyNotWin11&amp;quot;というWin11のインストール（アップグレード）できない理由を教えてくれるアプリケーションを見つけます。WhyNotWin11によるとセキュアブートとTPM2.0が確認されないとのことだった。それらの問題を修正後に、Win10のインストールUSBを作成してWin10をインストール、Win11にアップグレードしました。 1
色々使ってみたが、うん、何も変わってない。最初期の頃は確かUIが変わっただけでほとんど中身は変わっておらず（今もそうと言えばそうだが）、ただセキュリティ強化されただけだった。あと、Devチャネルだったこともあり、すぐグラッシュしてしまうのだが、普通ブルスクが出るところ、グリーンスクリーンが出てきたのには驚いた。何だったのだろうか。まぁ大した面白みなかったため増設したSSDはWin11用からLinux用に変えた。
その後、Win11のことなんて忘れてWin10でWSLにデスクトップ環境をインストールして遊んでいたら、LinuxのGUIアプリケーションを動かせる&amp;quot;WSLg&amp;quot;というものがあることを知り、それがWin11でしか動かせないこと2を知り、仕方ないので春休みぐらいにアップグレードしたは良いものの、強烈に使いにくく、すぐWin10に戻しましたが、中２の夏休みに入った頃にいい感じのフリーソフトのアプリケーションランチャーとWin11のUIをWin10に戻せる&amp;quot;Explorer patcher&amp;quot;というものも見つけたこともあり、これらを使ってだんだんWin11に慣れていこうということにし、アップグレードすることを決めた。
アップグレードしてみよう さぁ！アップグレードだ！って思い立ったのは良いものの、Win11ではなんとUEFIブートしかサポートしないとかいう暴挙にMicrosoftが出きたとのこと3。PCを自作したときにインストールしたMBRのWin10はアップグレードできないらしく、GPTに変換する必要があった4。一度目、春休みのアップグレードの際にはMicrosoft公式のmbr2gpt.exeというツールを使うことでmbrからgptに変換することができた。
そしてWin11を使いづらくてWin10に復元した後、間違いでメインOSのディスクをまっさらにしてしまった。重要なデータ類はHDDにバックアップを取っていたので大した損害は大した損害はなかったものの、再度OSをインストール羽目になってしまった。まぁ再インストールは何事もなかったの良しとしよう。
それでまた夏休みには入るまでそのままWin10を使うのだが、いざWin11にアップデートするとなったときMBRが障壁になっていた。インストールのときの僕は何を考えていたんだ5。そして前回と同じように公式のmbr2gpt.exeで変換しようとしてみたところ、なんか色々エラー吐かれてでききなかった。途方にくれていたときに有志の方が開発してくださっているgdiskのWindows版を使用する方法を知ったので、gdiskを使用しすることにし、ちゃんとGPTに変換することができた。
その後は特に大きなトラブルもなく、スムーズにインストール成功、データも残っていた。一つ問題があったのは、Intelが提供しているドライバサポート&amp;amp;アシスタントが作動しなくなったことでだ。まぁIntelから個別に取得すればよかったので特に問題なし。6
使用した感想 スタートメニュー 中揃えのスタートメニューやタスクバーは、Macで慣れていたのでストレスにはならなかった。 初期のころは前述したランチャーソフトを使わずにやってみようと努力したが、やはり使いにくかった。スタートニューの下半分が意味分からない機能のために占領されてしまっているために、一面で18個のアプリしかピン止めできない。それでは流石に使いにくいというわけで&amp;quot;CLaunch&amp;quot;というフリーソフトを使用することにした。CLaunchはボタン式のランチャーで、とても愛用している。（今も補助的な役割として使っています。）
UI Windows 10時代の角ばっていたUIから、全体的に丸びを帯びたデザインに変貌を遂げた。うっすらウィンドウが透けるMicaというWindows独特のUIはとても良い。
設定、フォト、ペイント、メモ帳、エクスプローラーなどのUIの更新も行われた。個人的には設定とフォトの新しいUIは好みである。エクスプローラーはUIを変えるにしてもリボンUIは廃止しないでほしかった。
WSA(Windows Subsystem for Android) 僕がインストールしたときはまだアメリカでしか公開プレビューは公開されておらず、裏口的な方法を利用することでインストールが可能だった。そしてまだアプリストアは使用できなかったが、（できたのか？）&amp;ldquo;WAS PacMan&amp;quot;というソフトを使用することで.APKからインストールすることができたので、試験的にApple Musicをインストールしてみました。使用してみた感想ですが、割りとサクサク動くが、サウンド関係はまだ弱いようで、Windows版のiTunesで再生したほうがよっぽど音質が良い。ちなみに、ゲームは試していない。スマホゲーは嫌いなのです&amp;hellip;
しかし、今は日本でも正式に公開プレビューが開始し、Hyper-Vと共存できるAndroidエミュレーターは少ない上に、ウィンドウにして動かすことができるのはとても素晴らしい。今後の動きに期待だ。
WSLg さて、当初の目標であったはずのWSLgだが、特に使い道が見つからずにテスト用アプリケーションであるxeyesだけ起動して終わった。今度StableDiffusion関係で活用できないか考えているところだ。
その他 仮想デスクトップ まず、仮想デスクトップ周りが強化されたのは嬉しいことだが、仮想デスクトップのスイッチャーを使用している際のエクスプローラーのクラッシュが非常に多くなった。Win10のときはクラッシュなんて起こったら珍しい方だったが、今では一日に一回ぐらい起きている。 スナップ機能の強化 殆ど使わない コンテキストメニュー なんかモダンになった。これはすぐ戻すべき。 あとはセキュリティ周りが強化されていたらしい。素人には全くもって理解できない。
Win11にするにあたって利用したソフト類 Explorer Patcher 前述の通り、Win11のUIを選択して戻すことができるアプリ。タスクバーはWin11だけどスタートメニューはWin10&amp;hellip;みたいなことも可能 CLauch 前述の通り、アプリケーションランチャー。スキンを適用することでWin11にあった雰囲気にできる。数あるランチャーソフトの中でもオススメ。 Rufus 前述の通り、.isoをUSBに焼くことができるアプリ。Win10のインストーラーを作成する際に使用。 WhyNotWin11 前述の通り、Win11へのアップグレードの可否を表示する際に使用。 Winaero Tweaker 本来ならばレジストリをいじらなければいけない設定をGUIで行えるようになる。便利。 22H2アップデートについて Win11最初の大型アップデートである22H2は、通知機能の改善やタスクマネージャーのUIの変更（中身はもちろん変わっていない）などがあったらしいとのことだが、そんなことはどうでもいい。スタートメニューにフォルダーが作れるようになった。これは大きな進展で、スタートメニューにピン止めできる上限が18しかなく実用性が皆無だったスタートメニューにフォルダが作れるようになり、その上ピン止め可能な段数を増やせる設定も追加されたのである。かなり良いアップデートだったと思う。
結論 WSLgやWSAなどの最新機能が多くあり、個人的に感じていたスタートメニューの使い勝手の悪さも22H2のアップデートでかなり改善されたため、UIの変更に極端な抵抗がなければアップグレードはオススメする。
おわりに 高二の元部長がCEATECに行くらしく、訪問記を書くかもしれないと言っているので次の更新は早くなるかも&amp;hellip;?</description></item><item><title>高校数学で描くマンデルブロ集合</title><link>https://asanobuturi.github.io/blog/20220508/</link><pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20220508/</guid><description>はじめに お久しぶりです。2019年に最後のブログを投稿してから3年以上が経ったようなのですが、当時中学2年だった私もいつの間にか高校三年になってしまいました。物理部がブログではなくTwitterを積極的に使うようになってからは、このウェブサイトも部誌の電子版の公開以外で使うことはほとんどなくなったのです。浅野を卒業する前にもう一度くらいはブログ記事を執筆しておきたいと思い、今回キーボードをたたいています。 前置きはさておき、今回は久しぶり(そりゃそうだろ)に技術的な記事になります。
対象読者 日本の高校一年生相当以上の基本的な数学の知識を有している人。必要な知識を前半部分で解説し、高校一年生、あるいは中学生程度でもある程度は理解できるように書いているつもりです。
加えて、基本的なプログラミングの知識を有している人。今回はJavascriptを使用しますが、for文、変数などの一般的な文法が分かっていればおおよそ意味はつかめると思います。
マンデルブロ集合とは マンデルブロ集合というものを知っていますか？実態はただの複素数の集合※なのですが、よくこのような写真の形でウェブ上に共有されることがあります。
※集合とは 日本では「数学A」で学習する概念。 数やその他さまざまなものの集まりのこと。集合を構成する「要素」は数だけでなく、(たぶん)確率や式であったり、数学以外の分野に集合の考え方を応用すれば「単語」や「情報」であるパターンもある(と思う)。 マンデルブロ集合は、数、そのなかでも複素数の集合である。つまり、マンデルブロ集合の中には(\(-0.2+0.5i\))や(\(0.1-0.3i\))などの様々な複素数が大量に収納されている。(複素数については後程解説します。)
マンデルブロ集合の画像 一部を拡大したマンデルブロ集合の画像 画像出典：Wikimedia Commons(CC BY-SA 3.0)
下の画像は一部を拡大したもの。
このように、マンデルブロ集合をある規則にしたがって画像に落とし込むと、非常に美しい幾何学模様をみせるため、YouTubeをはじめインターネット上にはマンデルブロ集合を描画した映像がたくさん投稿されています。
この記事では、このようなマンデルブロ集合の写真を、高校数学の知識だけで描画することを試みます。なお、今回は上記の写真や映像のようなカラフルな色付けは行いません。
マンデルブロ集合の実態は、以下の漸化式が無限大に発散しないような複素数\(C\)の集まりです。(より正確な定義を後程記載)
\[ \begin {cases} Z_0 = 0\\
Z_{n+1} = {Z_n}^2 + C \end {cases} \]
このように定義されるマンデルブロ集合を構成する各複素数を複素数平面上に黒い点としてプロットしていくと、おおよそ上記の写真のような画像が得られます。
さて、一応ここまで高校数学の用語だけを用いて解説してきましたが、まだ該当範囲を学んでいない人にとってはちんぷんかんぷんだと思いますので、ここから一つ一つ噛み砕いて理解していきましょう。
ここから下は、複素数、複素数平面、漸化式、極限についての基礎知識の解説が続きます。これらを既に理解している方は、「マンデルブロ集合の要素を調べる」の章まで読み飛ばして頂いて構いません。
複素数(数学Ⅱで学習)とは 中学三年で習う平方根(ルート)を思い出してください。\(2\times2=4\)であるとき、\(4\)のルートすなわち\(\sqrt4\)は\(2\)となります。同様に\(3\times3=9\)なので、\(\sqrt9=3\)です。このように、ある数に対して、2乗することでその「ある数」となるような「別のある数」を求めるのがルートの計算です。
なお、\((-2)\times(-2)=4\)でもあるため、正確には\(\sqrt4=\pm2\)となります。また、\(\sqrt2\)などの値もコンピューターなどを使うことでおおよそ\(\pm1.41421356\)という値(近似値)を求めることが出来ます。実際に電卓でこの数を2乗してみれば、約2(1.999999993…くらい)になることが確認できると思います。
虚数の定義 さて、ここで負の数のルートを考えてみます。 \(\sqrt{-1}\)はいくつでしょうか？
\(\sqrt1\)であれば答えは\(\pm1\)、すなわち\(1\)と\(-1\)ですが、2乗して\(-1\)となるような数は存在するのでしょうか？
はい、そんな数は存在しません。正確には、実数(整数、分数&amp;amp;少数、ルートや円周率などの無理数)の中には存在しません。そこで、先ほど2乗して\(2\)になるような、少数で正確に表せない数を\(\sqrt2\)という記号で表したように、2乗して\(-1\)になるような数を\(i\)という記号を用いて考えることになったのです。つまり、\(i^2=-1\)であり、\(\pm i=\sqrt{-1}\)です。このような、2乗して負の数になるような数を、「虚数」と呼びます。
この、\(\pm i =\sqrt{-1}\)で定義される数\(i\)には、「虚数単位」という名前がついています。\(\pm i\)とあるように、この方程式の解はプラスマイナスの2つがありますが、虚数単位はそのどちらか片方のみを表します(計算の途中でプラスとマイナスをごっちゃにして考えなければどちらでも問題ない)。
虚数単位を使うことで、\(\sqrt{-1}\)だけでなく負の数のルートをなんでも表すことが出来るようになります。
例えば\(\sqrt{-5}\)は\(\sqrt{-5}=\sqrt{-1}\times\sqrt5\)と書き換えられますから、\(\sqrt{-5}=\pm\sqrt5i\)です。同様に\(\sqrt{-4}=\pm2i\)、\(\sqrt{-12}=\pm2\sqrt3i\)という風に表すことが可能です。
二次方程式の解の公式で、\(x^2+bx+c=0\)の解\(x=\frac{-b\pm\sqrt{b^2-4ac}}{2ac}\)のルートの中身\((b^2-4ac)\)が負の数になると「この二次方程式は実数解をもたない」だと言ったり、正の場合は「異なる実数解を2つもつ」というフレーズが出てきたりするように、ことあるごとに実数解という面倒な言葉を使うのは、ルートの中身が負の数であった場合には虚数解(複素数解)があるということの裏返しだとも考えられますね。
複素数の定義 先ほど定義した虚数単位\(i\)と2つの実数\(a,b\)を用いて、\[Z = a+bi\]と表すことの出来る数を「複素数」と呼びます。例えば\(3+4i\)という風に表される数のことです。
「\(5\)」のような普通の実数も、\(a=5,b=0\)を代入してみれば\(Z=5+0i=5\)と表せるので、複素数の一種と考えることが出来ます。逆に「\(\sqrt{-25}\)」のような虚数(「純虚数」と呼びます)も、\(Z=0+5i=5i\)と表せるので当然複素数の一部です。
ちなみに、このときに\(a\)の項を「実部」、\(bi\)の項を「虚部」と呼ぶことがあるので覚えておきましょう。
今までに出てきたいろいろな数のカテゴリー(体系)をまとめてみました。</description></item><item><title>AviUtlについて、導入など</title><link>https://asanobuturi.github.io/blog/20190306/</link><pubDate>Wed, 06 Mar 2019 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20190306/</guid><description>お久しぶりです。時がたつのは早いもので、前回書いたのは約3ヶ月前になってしまいました。
いや、すぐに記事を出すつもりだったんですよ。しかしいつの間にかもうこんな時期になってしまいました。本当にはやいです。
ということで今回はAviUtlについてです。
AviUtlとは 参考：AviUtlの易しい使い方（外部リンク）
概要 AviUtlとは無料で提供されている動画編集ソフトです。
ＫＥＮくんという方が開発しました。
特徴 操作がわかりやすい 多機能で動作が軽い なにからなにまで基本的に無料 使うのに管理者権限がいらない（インストールは不要） 有志の方たちが作ってくださったプラグインが豊富 使っている人が多く情報も多い 拡張がしやすい ざっくりとした歴史 1997年
「KENくん」さんが初めてAviUtlを公開。
拡張編集（後述）はまだなく、できることは基本的な動画のカットや結合でした。
2008年
「KENくん」さんが 「拡張編集」 を開発し、リリース。
AviUtlの機能がそれまでの何倍にも便利になりました。
～今 無料で高機能の動画編集ソフトとして有名になり、様々なプラグインなどが開発され、配布されました。
さらには「ゆっくりMovieMaker」「AviSynth」などのAviUtl対応のソフトも出ています。
AviUtlで編集しているYouTuberの方も結構います。
ゆっくりMovieMakerとは
ゆっくりMovieMaker（ゆっくりむーびーめーかー）は饅頭遣いのおもちゃ箱で配布、開発しているゆっくり実況プレイ動画用の動画編集支援ソフトである。
主にニコニコ動画、Youtube等の動画投稿サイトでアップロードされているゆっくり実況動画の作成に使用されている。
愛称は"YMM"である。
引用 - Wikipedia
「拡張編集」とは 拡張編集でできるようになったことで一番大きいのは、
↓これです↓
そう、タイムライン機能です。無料のソフトでタイムラインが扱えるものはかなり少ないです。
タイムラインのおかげで、視覚的に操作ができるようになり、とても編集がしやすくなりました。
さらに、↓設定ダイアログというのも追加されました。
このダイアログで簡単に座標の設定や効果をつけることができるようになりました。
とにかく今のAviUtlには欠かせない機能です。
導入方法 参考：AviUtl初心者が最初に読むべきページ【導入から使い方まで】（外部リンク）
分からないことなどがあったら上のサイトも見てみてください。おそらくこっちのほうがわかりやすくて正確です。
なお、一部フィルタ設定など省いている場所があります。
1.AviUtl本体と拡張編集の導入
2.L-SMASH-Works(入力プラグイン)の導入
↑これを導入することで、mp4、mp3などのファイル形式も読み込めるようになります。
必要のない方は読み飛ばしてかまいません。
3.x264guiEx(出力プラグイン)の導入
↑これを導入することで、mp4での出力が可能になり、出力の設定なども細かくできます。
先ほどと同様に必要のない方は読み飛ばしてかまいません。
4.初期設定など
AviUtl本体と拡張編集の導入 1.1 「AviUtlのお部屋」で、AviUtlxxx.zipとexeditxxx.zip(xxxはバージョン)をダウンロードします。
1.2 AviUtlxxx.zipとexeditxxx.zipを7-zipなどで任意の場所に解凍してください。
1.3 exeditxxxの中身をすべてAviUtlxxxに移してください。移したら、空フォルダになったexeditは削除してかまいません。 こんなかんじになります。
L-SMASH Works(入力プラグイン)の導入 2.</description></item><item><title>MIDIについて語る その三</title><link>https://asanobuturi.github.io/blog/20181229/</link><pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20181229/</guid><description>前回はDominoでとりあえず音を鳴らしてみました。
今回はその続きです。 更新日時が結構空いてるなんて言ってはいけない。
取り消し 前回作った青い四角（これを「ノート」といいます。）を今度は消してみましょう。
方法① 上の方に鉛筆と四角い点線と消しゴムがあると思います。
←これ
今は鉛筆が選択されているので、消しゴムを選択します。
そして、消したいノートをクリックしてください。
すると消えます。
方法② こちらのほうが絶対に速いです。
こちらの方法を強く推奨します。
やり方は簡単。ノートをダブルクリックするだけです。
この方法だと消した後にわざわざ切り替えなくてよいのでとても楽です。
ノートの色々な変更 音の高さやタイミングの設定 ノートの真ん中をクリックしたまま動かすだけ。
以上！！
ノートの長さの変更 これは上の2行で終わった説明に比べて少し難しいです。
そうはいっても簡単ですが。
ノートの左右の端にマウスポインタを合わせてください。
するとマウスポインタが矢印に変わるはずです。
あとはクリックしながら伸ばしたり縮めたりするだけです。
音の強さの変更 音の強弱を設定するにはVelocityという値をいじる必要があります。
Velocityは和訳すると、「速度」です。
つまりどういうことかというと、
ピアノの鍵盤を強くたたいた時と、弱く押した時の音の違いということです。
すなわち、「押す強さ」≒「速度」なのです。
では実際に変えてみましょう。
下の方にグラフのようなものがあると思います。
編集モードを選んで（デフォルトでは直線）高さを調節すると、
音の強さが変わります。
Velocityが大きいと強く、小さいと弱くなります。
まとめ 基本的なことは大体わかったと思います。
それではよいお年を。</description></item><item><title>MIDIについて語る その二</title><link>https://asanobuturi.github.io/blog/20181130/</link><pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20181130/</guid><description>前回はMIDIについて少し話しましたが、今回はMIDIを使って 作曲、打ち込みのやり方を書いていきたいと思います。
ソフトの導入 まず最初に ここ でも紹介していた、MIDIファイルを作成する「Domino」というソフトを導入します。
ほかにもMIDIファイルを作成するソフトはあるのですが、
これが一番初心者に分かりやすいかつ、MIDIのたいていの機能があるので
今回はこれを使いたいと思います。ただDomino以外が使えないだけ
では Domino公式ホームページ にアクセスしてください。
右側にダウンロードのボタンがあるのでダウンロードしてください。
すると「Domino xxx.zip」（現時点で143）というZIPファイルが保存されるので、お好きな場所に展開してください。
なお、Dominoは管理者権限のいるようなインストールはしないのでご安心を。
では解凍したZIPファイルのDomino.exeというファイルを開いてください。
するとこの様な画面になると思います。 そしたら左上の「ファイル(F)」→「環境設定(E)&amp;hellip;」と環境設定を開いてください。
そして「MIDI OUT デバイス」を「Microsoft GS Wavetable Synth」に変更してください。
同様に「音源（音源定義ファイル）」を「GSm(Microsoft GS Wavetable SW Synth)」に変更してください。
変更が終わったら「OK」を押して環境設定を終了してください。
これで導入は完了です。
Dominoの使い方 とりあえず音を出してみる ではピアノの右側の好きなところを左クリックしてみて下さい。
するとこのように青い四角ができるはずです。
ではスペースキーか上部にある緑の三角の再生ボタンを押してください。
ピアノの音が出たはずです。もしできていないなら環境設定を見直してみてください。
楽器を変えてみる 次に楽器を変えてみましょう。
左にあるこの部分をダブルクリックしてください。
するとこのような画面が出てくるので、
左のマップからオルガンを選択し、「PC#」を「017 Organ 1」に変更してください。
ではまた再生してみてください。音が変わりましたね。
まとめ 今回でDominoで作曲する一歩を踏み出しました。
ということで次回に続きます</description></item><item><title>MIDIについて語る その一</title><link>https://asanobuturi.github.io/blog/20181126/</link><pubDate>Mon, 26 Nov 2018 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/blog/20181126/</guid><description>みなさんは、MIDIというものを知っていますか？
例えばこんな感じの動画、見たことありませんか？
このような形の動画は「曲名　MIDI」というように検索すればたくさん出てきます。
ではMIDIとはいったい何なのでしょうか。
MIDIの使われ方 MIDIが使われる場面の多くは、
・曲などの打ち込み1
・作曲
という時でしょう。
冒頭の動画もAlan Walkerの「Faded」という曲を打ち込んで、MIDIファイルにしたものです。
YouTubeにあるMIDI系の動画のほとんどはSynthesiaというソフトを使ったものです。
このSynthesiaによって上から降ってくる動画を作ることができるのです。
また、作曲もMIDIをつかうことで手軽にできます。
つまり&amp;hellip;
MIDIとは かみ砕いていうと、
MIDIというのはコンピューター向けの楽譜のようなもの。
これを作って作曲したり、打ち込みをするわけです。
パソコンのソフトだけでMIDIファイルを作ることもできますし、
MIDI対応の楽器をパソコンにつないで演奏したデータを取り込むこともできます。
これのDomino とか使えば比較的簡単に作曲ができますよ。
MIDIの長所 MIDIの長所　１ mp3やwavといった音データと違い楽譜のような構造なので、
曲などの場合はファイルサイズが小さくなりやすいです。
MIDIの長所　２ 作曲などをするときに楽器が弾けなくても大丈夫！
でもやるならある程度は引けたほうがいいと思いますよ。
MIDIの長所　３ どの音がどのタイミングでなるかというデータの集まりなので、
専用ソフトなどで開けば簡単にピアノなどで弾くことができます。
という感じです。
まとめ 長くなりそうなので複数回に分けることにします。
それではまた。
打ち込み（うちこみ）とは、主にドラムマシンやミュージックシーケンサーなどに 前もって演奏情報を入力しておいて（打ち込んでおいて）、 それを再生することで演奏を実現させる技法、またはその結果としての音楽のこと。 Wikipedia より &amp;#x21a9;&amp;#xfe0e;</description></item></channel></rss>