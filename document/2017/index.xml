<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2017年度・部誌 on 浅野学園物理部</title><link>https://asanobuturi.github.io/document/2017/</link><description>Recent content in 2017年度・部誌 on 浅野学園物理部</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Thu, 01 Jan 1970 00:33:37 +0000</lastBuildDate><atom:link href="https://asanobuturi.github.io/document/2017/index.xml" rel="self" type="application/rss+xml"/><item><title>"Arduino"とは何ぞや？</title><link>https://asanobuturi.github.io/document/2017/4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2017/4/</guid><description>はじめに こんにちは、中3のAです。今年で2回目ですね。
さて今年は、Arduino(アルディーノ)というものについて、語りたいと思います。実は、アナログ回路だけでできることには限界があります。例えば、LEDを1秒ごとに点滅させる、という動作をさせるのはと でも難しいです。そんなことを、プログラムで実行してくれるのが、Arduinoです。
ちなみに僕は、電子工作班であり、PC班ではないので、プログラミングは詳しくないので、プログラムについては、ここでは触れないことにします。
電子工作の限界 電子工作と聞いて皆さんは何を思い浮かべるだろうか？まあ、僕も中学に入るまで電子工作の“で” の字も知らない身でしたので何も思い浮かばないかもしれません。簡単に説明すると、トランジスタ、 抵抗と呼ばれるような電子部品を使って回路を作り、いろいろな機械を作ることです。
次に、電子工作の限界について説明したいと思います。例えば、ラジオなどの回路は、電子工作だけでできます。私が去年作った壁に沿って走るロボットもできます。しかし、自分の思うように動いてくれるロボットを作るとなると、Arduinoなどのマイクロコンピュータが必要となります。
この違いは何か？それは、ずばり制御するかしないかです。前者2つのものは我々人間が命令しなくても勝手に動作してくれますが、後者はマイクロコンピュータ(通称マイコン)と呼ばれるものを使い、 パソコンでプログラムを書き、それをマイコンに書き込み、それで制御するロボットはとても複雑な動作をさせることができます。例えば5歩働いて1秒止まり、90°回転して10歩動き・・・あるいは、LEDを2つ並列につなげて、それを数秒ごとに交互に光らせるなど。
Arduino Uno ところでArduinoって結局何なのか?ずばりマイコンの一種です。プログラムするときの言語もC言語、C++をもとにしているので、最もポピュラーで、使いやすいマイコンだと思います。Arduinoにもいろいろな種類がありますが、一番有名なのがArduino Uno(アルディーノ ウノ)です。
価格は2800円とおそらくArduinioの中でもっとも安価なものだと思われます。ピンの数はdigitalが13本とちょうどいい本数となっています。互換品もたくさん出ていて、マルディーノというマルツ部品屋で売っているものもあります。
「Arduinoを使って工作しよう!」みたいなArduino関連書籍もたくさん出ていますが、その中で使われているのはほとんどArduino Unoと言っても間違えではないくらい多く使われています。ちなみに大きさは大体てのひらに乗るくらいの小さいものです。
Unoについての説明 それでは、Arduine Unoについて細かい説明をしていきたいと思います。下の画像に番号がふってあるのでその順番で説明します。
1.プロセッサー
プログラムの実行や制御を行う中核となる部品です。メインメモリーやプログラムなどを保存しておくフラッシュメモリーも同梱されています。
2.USB ポート
USBケーブルを差し込み、パソコンとの間で通信を行うためのものです。パソコンで作成したプログラムをケーブルを使って書き込んだり、Arduinoとシリアル通信を行ってパソコンから制御できます。
3.電源ジャック
ACアダプタを接続してArduinoに電気を供給します。
4.リセットボタン
Arduino を再起動するボタンです。プログラムを実行しなおしたいときやArduinoの挙動がおかしくなった場合に使います。僕は展示してあるロボットがちゃんと動かなかったときによく押していましたが、リセットというぐらいだから押して、プログラムをもう一度入れなおし、ちゃんと動くものだと 思っていたのに、これを押しても少し動作が止まるだけでした。なので、あまり使う機会はないと思 います。
5.各種インターフェース
Arduinoの上部と下部にある、電子回路に接続するための小さな穴の空いたソケットです。それぞれのソケットにはGND,Digital5,5V,Analog0などの役割があります。図の上側は主にDigital, 下側は主にAnalogや5V,3.3Vなどの出力です。
6.LED
Arduinoの状態を表示するLEDです。パソコンを使ってシリアル通信をしている時には、TXとRXが点滅します。
その他のArduino 最後にArduino Uno以外のものを紹介します。これらを使用するときには、ソフトウェアのツールから、ボードを選択して、使いたいArduinoの種類を選択する必要があります。
Arduino Mega2560 全自動鍵盤ハーモニカ演奏機(?)でも使われているUnoより大きいArduinoです。その特徴は、圧倒的なピン数の多さ。価格は5800円。
Arduino Due Megaとほとんど変わらない見た目ですね。はっきりいって値段ぐらいしか違いがわかりません。デジタルのピン数が54本とUnoの4倍です。またUnoの約5倍の処理を行えるそうです。価格は6264円
Arduino Micro Unoより小さいものとなっています。このタイプは、ブレッドボードとよばれるハンダ付けなしで回路を作ることができるものに差し込んで、使うものだと思われます。大きさも小さいモノ消しゴム2個ぐらいだと思います。価格は、3893円。
Arduino Nano Microよりも小さいArduino。デジタル入出力とアナログ入力の切り替えができないそうです。Microよりも一回り小さくなっていて、これもブレッドボードに差し込んで使うものです。価格は4546円
最後に さていかがだったでしょうか。少しでもArduinoというものについて、わかっていだだけたでしょうか。また興味を持った、電子工作にさらに興味を持ったのであれば幸いです。
今年は部誌に関して特に何も言われてないのでとてものびのびと書くことができました。そして、最後まで読んでいただきありがとうございました。また物理部展2017 にお越しいただきありがとうございました。
参考文献 「これ1冊でできる!Arduinoではじめる電子工作超入門改訂第2版」
ランセンス情報 2022年9月追記：WEB版の発行にあたり、著作権の兼ね合いから画像を一部差し替えました。ライセンス情報を以下に記載します。
Arduino Unoの写真：oomlout様(画像出典リンク)、CC BY-SA(表示・継承) 2.0(二枚目の写真はこれを改変したものなので、同じライセンスが適用されます) Arduino Mega2560の写真：Adafruit Industries様(画像出典リンク)、CC BY-NC-SA(表示・非営利・継承) 2.</description></item><item><title>"落ちる"動きと当たり判定のプログラミングについて</title><link>https://asanobuturi.github.io/document/2017/2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2017/2/</guid><description>こんにちは。ここでは、2Dのアクションゲームがどのように動いているか、簡単に見てみたいと思います。ここで説明しているのは、2Dのアクションゲームを作るにあたって、ほぼ自分で考えたものなので、実際の物とは全く異なるかもしれませんが、どのようにゲーム が動いているのか少しでもわかってもらえればと思っています。
フレームとは？ まずは、「フレーム」について説明します。
実は、パソコン・スマホ・テレビなどの映像は、1秒間に数十枚の画像を表示して、動いているように見せています。ゲームでも、1秒間に60枚の画像(1枚あたり1/60秒)を入れ替えることが多いです。そして、その1枚1枚の画像のことを、「フレーム」といいます。ふつう、ゲーム内では、1/60秒の間に次の画像を用意して、1/60秒経ったら入れ替えて・・・ということを繰り返しています。
落ちる動きについて 次に、重力について説明したいと思います。
例えば、ゲームで高いところから落ちると下に落ちますよね。この動き方を作るのは簡単そうに思えますが、実は少し難しいのです。 単純に、1フレーム当たり1ずつ下に落とすようにすると変な動き方になってしまいます。物を落としたとき、加速度は一定だから、物 体の速度は時間に比例して大きくなっていくので、1フレーム目は1、2フレーム目は2、3フレーム目は3ずつ落ちるようになります。そうすることで本当に落ちているように見えます。では、ジャンプもさせてみましょう。1フレーム目は10上に、2フレーム目は9上に、11フレーム目は0、12フレーム目からは落ちる動きと同じようにしてみると、うまくジャンプできます。
(少しプログラミング的なことを言うと、例えば、重力の変数gを用意しておいて、gには1フレーム当たり0.3ずつ増やし、プレイヤーのy座標に1フレームずつgを足して、ジャンプのキーが押されたときにgを-20にするとジャンプができます。)
当たり判定について 最後に、当たり判定について説明したいと思います。
当たり判定と言っても色々ありますが、ここでは、1つの正方形のブロックと、長方形のプレイヤーとの当たり判定について説明していきます。これも、簡単そうに見えて実は難しいのです。どうしてかというと現実世界では、ものが動くとき、連続的に動きますが、ゲームでは1/60秒ごとにプレイヤーを動かしているので、連続的には動きません。プレイヤーがブロ ックに当たったら止めるという処理だけだと、ブロックに埋まってしまいます。そこで、ブロックに埋まったら押し出すという処理が必要になります。ここでは、その押し出しをどのように実装したか、説明したいと思います。
まず、あるフレームでプレイヤーがブロックに当たったとしましょう。その1つ前のフレームで、プレイヤーがどこに居たかで場合分けをします。
(1)1つ前のフレームで、ブロックよりも上にいた場合
この1フレームの間に、ブロックの上側の辺に当たった可能性が高いので、プレイヤーをブロックの上側に持ってくる。
(2)1つ前のフレームで、ブロックより下にいた場合
この1フレームの間に、ブロックの下側の辺に当たった可能性が高いので、プレイヤーをブロックの下側に持ってくる。
(3)それ以外のとき(図の2本の横線のどちらかにあたっていた、またはその間に入っていたら)
〈1〉1つ前のフレームで、ブロックより左側にいたら
この1フレームの間に、ブロックの左側の辺に当たったのプレイヤーをブロックの左側に持ってくる。
〈2〉1つ前のフレームで、ブロックより右側にいたら
この1フレームの間に、ブロックの右側の辺に当たったので、プレイヤーをブロックの右側に持ってくる。
〈3〉それ以外のとき(1つ前のフレームも埋まっていたら)1つ前のフレームで埋まったのに押し出せていない?
このような場合分けをしてみたところ、それっぽく動きました。
では､ブロックがたくさんあるときはどうでしょう。単純に、それぞれのブロックに対して同じことをすると、例えば図のようにプレイヤーが動いたとき上の当たり判定の方法でやって見ましょう。一番上のブロックで押し出しをやってみると、1フレーム前のプレイヤーは一番上のブロックより下にいたので、ブロックの下側に持って行きます。そして、二番目のブロックでは、1フレーム前のプレイヤーは左側にいたのでブロックの左に持っていきます。すると、ブロックが縦に並んで壁のようになって、左側にしか当たりそうにないの に、その壁のブロックに頭をぶつけたようになってしまいます。
そうならないように、ブロックがたくさんある場合は、先にすべて左 右の当たり判定をしてから、そのあと、すべての上下の当たり判定をします。
というわけで、少し説明してみましたが、どうでしたか。分かりにくいところもあったと思いますが、少しでも、ゲームがどのように動いているのか興味を持ってくれたらうれしいです。ここまで読んでいただきありがとうございました。</description></item><item><title>オタクから見る精神論</title><link>https://asanobuturi.github.io/document/2017/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2017/11/</guid><description>前書きみたいななんか いきなり分けのわからないタイトルだが気にしないでほしい。筆者自身もそう思っている。タイトル通り「オタクと呼ばれるもの』について語ろうと思う。
オタクの定義 オタクとは何か。この論題については今までに多くの論争が起こってきた。
“オタク”と置いて最初に思い浮かべるのは何だろうか。アニメオタク、アイドルオタク、鉄道オタク。まあ、この3つを思い浮かべる人が多いだろう。中には健康オタクなどの他の〇〇オタクを思い浮かべる人もいるだろう。だが、この相違は『オタク』の本来的な意来からの乖離のよって生まれる。
オタクの本来的意味とは何か。これははっきりしている。1983年、『漫画ブリック』において、『「この頃やたら目につく世紀末的ウジャウジャネクラマニア少年達」「友達に「おたくら さぁ!」なんて呼びかけてるのってキモイと思わない?」と評し、「彼らをおたくと命名する」』と蔑称、名詞として使われ始めた。このように『オタク』とはもともと軽蔑の意味を持つ言葉である。
反対に、健康オタクなどのマイナスイメージが極端に大きいわけではない『オタク」を思い浮かべた人は、かつてあった『オタク』という蔑みの意味を持つ言葉に縛られていない人物だ。本来の意味とは異なった使い方ではあるが、寧ろ良い傾向だ。
『オタク』が蔑称として用いられたのは20世紀までであり、最近ではこのような蔑みの意味が薄い「オタク』が表に出てきている。このように最近では『オタク』というものはかつてとは違い、言葉の持つ意味が多様化し、ある程度社会に浸透し一般化してきた。
本題に戻ろう。『オタク』の定義だが簡単にそういうものとするのは困難だ。語源から考えると『気持ち悪いやつら』となる。だが最近言われるようになってきた『オタク』たちは必ずしもそうではないだろう。「気持ち悪いやつら』ではなく、『理解に苦しむ奴ら』の意味合いが強くなってきている。冷静に考えてほしい。例えば健康オタクとアニメオタクについて比較してみよう。
このグラフは私の個人的な偏見を織り交ぜた一般人から見た両者の違いを表したものだ。この2つの最大の違いは理解可能領域の有無だ。長さは知らん。この理解可能領域は『へー、ふーん。あぁなるほどそういうことね』程度には理解できる領域を表す。全く健康に興味がない人なんてほとんどいないだろう。ちょっと行き過ぎてる気もするけどわからなくもないと思えるレベル、それがこれだ。対してアニメオタクゲージにはそれがない。考えてみてほしい。自分がまったく興味ないどころか初めて聞いたことについて語りだす人間を。理解するしない以前に関わりたくないと思うだろう。だがどちらも行き過ぎれば気持ち悪いというのは共通している。
まとめると、『オタク』の定義は”興味ない人からしたら理解しがたい人々”ということ になる。
さて次はオタクが対象とする趣味について考えよう。どんな趣味なら『オタク』でありどんな趣味なら『オタク』ではないのか。
これは一言で言えば『マジョリティかマイノリティか』ということである。
たとえば、アニメとサッカーで考える。サッカーは間違いなくマジョリティだろう。WCや国を挙げてのイベントだ。それに生きてきて一切サッカーに関係しなかった人はほとんどいないだろう。WCの時期はテレビをつけると大体関係したことが取り上げられている。サッカーは誰でも知っている、ということになる。それはさておき、サッカーはマジョリティというのはいい。アニメはどうだろうか。最近は多少は浸透してきたとはいえそれでもまだマイノリティだろう。
ここでこの図だ。前述のモノとほぼ同じものだ。ここで理解可能領域に注目してほしい。マジョリティとマイノリティの最大の違いはこのゲージの有無だ。この図からわかるように、マジョリティは理解される、という点が大きい。少しばかり行き過ぎても自分も少しは知ってるから&amp;hellip;&amp;hellip;とある程度は理解される。この辺りは前に述べたので省く。
マジョリティとマイノリティの境は個人の基準だ。誰でも理解できる、という点で区切るのがいいかもしれない。もしくは初対面の相手に対する自己紹介の際に言えるかどうか、でもいいだろう。
どこからが『オタク』なのかについてはまた後ほど。
ようやくまとめに入ろう。『オタクの定義』とのことだが、
意味の対象がマイノリティ マジョリティでも英味がない人からすれば気持ち悪いレベル 『マニア』も『オタク』の範囲内 ということである。
オタクレベルと日常生活 ここからは、何事も程度が大切である、ということについて語る。
ここでは主にサッカーとアニメ、この2つから見ていこうと思う。
まずはレベル 0。というか普通の人。サッカーならばテレビで放送してることに気づき、気が向いたら見る、アニメも同じ。興味ないわけじゃないけど能動的ではない、というような感じ。尚、アニメとは深夜以外も含むことにする。日常生活には一切影響はない。
レベル 1。サッカーならばテレビでやっているなら見る。さらに好きなチームあるわけではなく『サッカー』そのものが好き。アニメならば好きな漫画などがアニメ化したら興味を 持つぐらい。この程度まではまだまだ普通。アニメの方は人によっては理解不能になるかも。それでも普通の人でもこのぐらいだと思っている。
レベル 2。サッカーなら好きなチームができたり、選手ができたりするレベル。そのチームの試合や選手が出る試合は前日からチェックしたりもする。アニメならその時期に放送しているアニメの中から興味のあるものを選んで見るレベル。人によってはこの時点でオタク認定が始まる&amp;hellip;..のか?もう少し早いかもしれない。流石にアニメを見るだけでオタク認定する人には何も言えない。このレベルは興味ない人にでも理解してもらえるぐらいだろう。 理解してください。
レベル 3。 サッカーなら好きなチームの試合が近くであるのならスタジアムにいき観戦するレベル。人によってはグッズを買ったりもするだろう。アニメならば好きな『声』ができたり、『絵』に対しても注目するようになり、ただのアニメ観賞から一歩進む。このあたり から日常生活にも影響が出てくる。話題としても十分通用するぐらいだろう。とはいっても、軽くだが。
レベル 4。サッカーなら好きなチーム試合があるならどれだけ遠くても行こうと努力する レベル。人によっては応援団の一員になっている。アニメならワンクールあたりに見るアニメの本数が増え、グッズの購入が増加したりする。日常生活にかなり影響が出る。ここまでくれば立派なオタクの一員と言える。
レベル 5。 末期。サッカーなら日本代表サポーターとして海外にまで行く。アニメなら生活費を切り詰めてまでグッズを買ったりする。ここまで来たらもはや日常生活に影響が出る以前に趣味の合間に生活するか、趣味が日常になる。もはや気持ち悪い領域に入る。
上記に書いたのはあくまでも一例かつ偏見であり色々と言いたいこともあるだろうが、ご了承願いたい。
日常生活に影響がある、といっても人それぞれで個人差がある。アニオタのなかでも結構深い方にいるのにグッズはあまり持たずに、イベントにもあまり参加しない人もいる。逆にあまり深くはまっていないのに大量にグッズを買ったりイベントに行きまくる人もいる。日常生活への影響は趣味への深度よりも個人がどのように趣味と生活を分けているのかが関係している。
『オタク』と日常生活への影響を語るうえで『NEET』や『ひきこもり』との関係性は欠かせないだろう。『オタク』と聞けばそれらを思い浮かべる人も決して少なくないだろう。それは間違っていない。確かに『NEET』や『引きこもりは』そのほとんどが『オタク』に分類 される。だが必ずしも『オタク』が『NEET』や『ひきこもり』になるわけではないと認識してもらいたい。
『NEET』や『ひきこもり』になりやすい『オタク』もいればなりにくい『オタク』もいる。中にはそうなることを危惧してアニメやラノベなど一切触れさせようとはしない親がいるだろう。だがそれは悪手でしかない。そのように押さえつけられてしまうと将来独り立ちした際に一気に解放されてしまう。そうなると自分で稼いだ金ということもあり歯止めがきかず、どんどんと深みにはまってしまう。押さえつけられていた故の反発が起こってしまう。そうなると日常生活にも影響が強く出るようになる可能性がある。対して幼いころからアニメや漫画に触れ、制限されなかった場合はというと、中学、高校あたりでピークを迎え、多少下がって落ち着く。グッズを買う金があったとしても制限があり、欲しいものをすべて買ってはすぐに底をつく。そのため浪費はあまりせず、大人になってもイベントなどのために節制するようになる。中学生、高校生のころから趣味と生活を分けて考えさせることが重要だ。『NEET』や『ひきこもり』にしたくないというのなら押さえつけるのはあまり得策ではない。さらに親がそのような趣味に対して理解があるのならば、親子間のコミュニケーションツールとしても機能する。日常生活云々はどれほどの深度にいるかではなく、個人の精神的な問題の方が強いのではないだろうか。
ここからが本題 ◆ オタクはなぜ 「オタク』なのか 『オタク』とは決して好まれるものではない。『キモオタ』という言葉があるとおり、『オタク』は気持ち悪いものであるといった悪感情は存在する、ではなぜそのように思われるのだろうか、それを考えていこう。
見た目 なんといっても見た目は重要だ。初めの印象に大きく関わってくるところだ。普通ならば見た目に多少は気を遣うだろう。だがオタクはそうではない。
まずは服装だ。『着られればいい』『服を買う金がない』そんな理由で服を買わない。いや、オタク以外だってそう言う人はいるだろう。しかし、オタクはあまり服に対して関心がないのは恐らく『普通』がおかしいからだろう。学生のころから同じような趣味の相手とだけ関係を持つとこのようなことになってしまう可能性がある。
痛〇〇 痛車、痛スマホ、痛T&amp;hellip;&amp;hellip;あげればキリがない。街中で痛車を見るとすごいと思うのもあれば「うわぁ&amp;hellip;」となるものも多い。オタクではない人やオタクでも公私ではっきりと分けている人からすればかなりのインパクトがある。一部のオタクにはこういった類のものを所有したがる傾向がある。
このようにオタクに対する印象が悪くなってしまう原因は多数存在する。
オタクと精神論 『オタク』を精神的な意味で考えていこう。
『オタク』にはよく『地雷』と呼ばれるものが存在する。ある特定のことについて、触れられたくないことを不用意に触れてしまうと逆上したりすることだ。『オタク』に限らずほとんどの人にはあるだろう。だが『地雷』というと何かと『オタク』が怒ることをさす場合が多い。なぜだろうか。ここには人間としての本質がかかわってくる。
人間の本質とは何か。それは『否定』であると考える。「いや、それは違うんじゃないか」と思った時点で当てはまる。『疑問に思う』という行為は軽度の『否定』であるからだ。『オタク』はよく人の話を否定する、と言われることがある。それは正しいが何も『オタク』に限った話ではない。人間ならすべて当てはまる。自分の意見を持つ、ということはすなわち相手の意見を『否定』するということだ。『オタク』がよく人の話を否定する、と言われるのはこの『否定』が『全否定』だからではないだろうか。
では『全否定』と『部分否定』の違いは何か。『全否定』は文字通りすべてを否定するということだ。それはつまり他人の話を聞かない、意見を取り入れない、ということだ。対して『部分否定』はどうかというと逆だ。他人の意見を全肯定するわけでもなく全否定するわけでもない。他人の意見で共感できる部分や自分にとってプラスになることを吸収し、自分または大多数にとってマイナスになる部分は否定する。それが『部分否定』だ。この部分否定は自分の意見の昇華につながることになる。
『地雷を踏む』と呼ばれるのはそんな『全否定』をたたきつけているのと同じことだ。そんな意識は全くなくとも、受け取る側にとっては全否定されている気分になっている。『地雷』を踏まないためにはいろいろと工夫しなければならない。
この『否定』だがアニメが年に何十本も出ている理由でもある。それまでにあったアニメを『部分否定』し、また別の要素を入れることで同じようなジャンルの愛好家やそれ以外からも新たに引き込むことができる。そのようにどんどんと新しい、限りなく理想に近いものがどんどんと出てくるため、『オタク』は泥沼から抜け出すことが難しい。シリーズ物はそれが顕著に表れる。</description></item><item><title>サブカルについて</title><link>https://asanobuturi.github.io/document/2017/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2017/10/</guid><description>はじめに 今日、日本は、国ぐるみでサブカルを海外に向けて発信していこうとする方向に向かっているわけですが、日本の文化の一つと言われているサブカルも、一部の人々からは嫌われてしまっています。
アニメ好きでも漫画好きでも、サブカル好きのオタクというのはほかの人々から下に見られ馬鹿にされいじめられているものです。
そんなマイナスの印象が強いサブカルですが、筆者はサブカルに少し触れた者として、そのマイナスの印象を少しでも払拭できたらと思いこの文章を書きました。
サブカルとは何か サブカルというのは、簡単に言ってしまえば大衆文化と異なった文化のことをいいます。日本で言えば、皆さんご存知の通りアニメ、漫画、ラノベ、ネトゲといったものたちです。ちなみに、海外ではこの単語は全く別の物を指し示すことがほとんどなので、濫用は&amp;hellip;&amp;hellip;やめようね!サブカルにあまりなじみがない方々のためにラノベとは何か少しだけ解説させていただきます。
ラノベ ライトノベルの略。ライトノベルと一般的な小説の境界ははっきりと定義されていない。中高生を主なターゲットにしており、世界観が幻想的、または学生に身近なものが多く、現在はどのラノベも同じような話ばかりである。アニメの原作となっているものも多い。
サブカルの衰退 ラノベをこよなく愛するオタクたちは、それぞれの好きな作品を持ち上げ、他の作品を下げる傾向にあります。
具体的な事例は多く挙げられますが、それぞれのファンどうしが争うことによって、その作品が大衆の目に晒されることになります。
争いと共に日の目を見た作品は多くの人に悪印象を与えることになり、結果として作品全体の価値を落としてしまっています。
サブカルの衰退というのは、往々にして思慮の浅いファンによって引き起こされるのです。
二次元と現実の混同 よくテレビでは、「犯罪者がアニメや漫画を見ていた!やはりやばい!」と言っています。最近ではとある18禁同人誌を模倣した事件も起きました。そういった事件は取り立てて大きく報道されます。これの原点はやはり東京・埼玉連続幼女誘拐殺人事件の犯人が「アニメによる異常性癖」と報道されたのが最初になります。
マスコミはオタクを下に見ているように受け取れます。自分たちは現実に満足していると思い込んでる根暗な人たちのように思われます。
このように二次元は現実に影響を与えると騒ぎ立てられていますが、よく考えてみると、人々は仮想世界で実行できることが現実でもできると本気で信じているのでしょうか?
所詮、二次元というのは空想の存在でしかありません。二次元を根拠にした行動はありえないのです。
最後に 筆者自身、自らが過激かつ理解しがたいことを述べていることは自覚しています。この内容が部誌に掲載されることに疑問も感じてます。
ただひとつ言っておきたいことは、サブカルを表に出すべきではないということです。たとえば、国を挙げてサブカルというものを推進していくのは避けるべき、というのも、この国にはほかに誇れることがあるはずだからです。
この文章をここまで読んだ方には、もっと有意義な時間の使い方を学ぶことをおすすめします。
以上です。共感してくださった方がいれば幸いです。</description></item><item><title>パソコンで絵を描くには？</title><link>https://asanobuturi.github.io/document/2017/8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2017/8/</guid><description>こんにちは。物理部で主に会計などの事務作業をしておりますI.H.です。まあ、事務専門でありますのでそこまで物理部らしい専門的な話はできませんが&amp;hellip;。この紙面ではパソコンで描画をするとき使用するソフトについて解説したいと思います。
パソコン上での描画に使用する主なソフトについて 皆さんはパソコンで描画をしたい時&amp;hellip;どのソフトを思い浮かべますか。多くの人はWindows標準搭載のペイントを思い浮かべるのではないでしょうか。単純な図形であればペイントでもかまわないかもしれません。それではグラデーションをかける、など複雑な作業をしたいときは?このときに使用するソフトとしては Photoshop Gimp2.0 があげられます。ほかにもペンタブレット(パソコン上で手書きで描写するための周辺機器)で紙に描くような絵をパソコンで描画したいときには、ClipStudioPaint , SAI , Pixia ,MediaBangPaintPro などがあげられます。
画像加工ソフトについて(photoshop Gimp2.0) ここからは各種ソフトの説明を簡単にしたいと思います。
Photoshop 画像加工ソフトの中で最も有名なソフトです。このソフトはビットマップ画像という、画像をドットという小さな色の点の集まりで現した画像を編集するのが主な機能です。ですので線で描画する絵ではなく、このソフトは写真や背景などの素材画像作成、全体的な色味やトーンの調節に向いています。グラフィックデザイナーやWEBデザイナーのプロが使用するほどの充実した機能とパフォーマンスを兼ね備えたソフトですが、価格はPhotoshop CCで月額使用料3980円(デザイナー向けコンプリートプラン)、家庭向けのPhotoshop elementsですら税別9800円と、非常に高額であるのが難点です。また、(あくまで個人的な実感ですが)機能が複雑な面もありソフト使用技術の習得には若干時間がかかります。
Gimp2.0 画像加工ソフトの中でもPhotoshopと同様に非常に著名なソフトです。Photoshopと同様、背景などの素材画像や写真の編集に適しています。しかし、なんとこのソフトはフリーソフト、無料で使用することができるのです。また、有料の画像編集ソフトと引けをとらない高機能で多くのユーザーを今日までに引き寄せています。ただ、このソフトの悪い点を上げるとすれば、ソフトの起動の際に多くのデータを読み込む?らしく、パソコンのメモリが不足していると正常に動作しないところです。もし自前のパソコンでGimpが起動できない場合はその軽量バージョンであるGimp Portableを使用することをお勧めしま す。(ただし機能は若干削減されています。)
線画描写ソフトについて(ClipStudioPanit など) ClipStudioPaint このソフトはドットの処理が可能なレイヤーであるラスタレイヤーのみならず、画像を座標やベクトルの概念を用いて表すレイヤーであるベクターレイヤーを扱うことができます。ベクターレイヤーでは拡大縮小を行っても画像の解像度が損なわれないため、線画(線のみの画像)の描写に適しています。また、ペンタブレットの筆圧を反映することができます。価格が税込 5000円と安価である一方、3Dデッサン人形をパソコン上で扱えるなど機能は非常に多彩で、コストパフォーマンスが非常に高いソフトです。ちなみに、Amazonや家電量販店での売り上げでは2015年から3年連続で一位を記録しています。
SAI このソフトは先のソフトと同様、線画の描画と画像処理を行うことができるソフトです。価格は5400円(税込)で、動作は比較的軽く、書き心地もよいので多くのユーザーがら支持を得ているソフトです。ただし、かなり前からソフトの更新がされていないようなので、現在販売されているソフトと比べて、機能が若干古めであったり、少ないといった印象をうけてしまいます。
Pixia このソフトは無料で配布されている、線画の描画と画像処理を行うことができるソフトです。ツールが文字ではなくアイコンで大きく表示されているなど、操作画面が初心者にとっても非常にわかりやすく、フリーソフトであることもあって、デジタルイラストの入門用ソフトとして定評があります。
MediaBangPaintPro このソフトも同じく無料で配布されている、線画の描画と画像処理を行うことができるソフトです。操作画面は比較的わかりやすく、動作も軽いことから多くのユーザーから指示がありますが、ペンタブレットで描画する際の動作は有料ソフトと比べてあまり滑らかとはいえません。
総括 主な画像処理ソフト、線画描写ソフトの説明は以上です。自前のPCの諸事情により、GIMPとPhotoshopの操作画面を掲載することはできませんでした。なお、編集中の画像は自作のものであるのですが、使用してて線画ソフトの中で個人的に最も使いやすいソフトはClipStudioPanitでしたね。有料のものと無料のものの間では圧倒的な質の差があるのは否めません。ただより安い飯はありませんが&amp;hellip;。ただ、有料のソフトはどれでも無料体験版をダウンロードすることができるので、ソフトの購入を検討される際はフリーソフトとの比較をしつつ、無料体験版の試用をお勧めします。紙面の都合上、説明を簡略化した箇所や詳しい説明を控えさせていただいた箇所がありますがご了承ください。一部読みにくい箇所もあったかとは思いますが、最後までお読みくださってありがとうございました。
(文責:IH)</description></item><item><title>ホバークラフトをつくろう!!</title><link>https://asanobuturi.github.io/document/2017/6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2017/6/</guid><description>ここでは、特殊な機材などを使わずにどの家庭にもあるパーツを使って“人が乗れるホバークラフト”を作っていきたいと思っております。
そもそもホバークラフトとは何ぞや？ 空気の圧力で浮上して移動する乗り物である!
ホバークラフトの原理 (下の図を主に参照して理解してください。)
本体とスカートでつくられた隙間に空気を送り込みます。隙間の気圧が高まります。すると、空気圧によって本体が持ちあげられます。このとき、スカートと地面にほんのしこし間が空き、スカート内の空気が漏れだしますが、少量なのでスカート内の気圧にはそれほど影響はありません。
製作における注意点 原理に則って考えると、スカートを水平方向に広げ、空気圧を受ける面積を大きくすると本体を持ちあげる力も大きくなります(格好良く言うとパスカルの原理のことです)。また、スカート内に空気を送り込む圧力を強めるとスカート内の気圧は高くなり、持ち上げる力は大きなります。
スカートは地面との隙間を小さくするために地面と密着する必要があります。
設計!! 「まず、スカートに使う素材を決めます。上記の理由により地面と密着できるようにするには、柔らかい素材にする必要があります。また、上記の通り出来るだけ大きいものが良いです。そこで、120cm の大人用うきわを使うことにしました。
次に、空気を送り込む機械を決めます。これはある程度の風量があり、強い圧力をつくれるものが良いです。ここでは、掃除機に使われているモーター及びファンを使います。掃除機を分解すれば簡単に入手できます。実は、掃除機のモーターというのは非常に便利な代物で、家庭100v電源で稼働できる上にファンと一体になった構造をしているのです。掃除機のファン及びモーターは掃除機の構造上、強い圧力をつくれるようにできています。まさにホバークラフトにぴったりではありませんか!
やっと製作に取り掛かります 巨大うきわに図1の本体となる板を取り付け、モーターを取り付け、補強をします。同じような物をもう一つ作り、二つをつなげて完成です。空気もれがないように注意しましょう。(実際の作業は木工というあまり物理らしくないものなのでここでは割愛します。)
そして起動!! モーターを交流電源に並列につなぎ動かします。フワフワと床の上を浮いています。手で押してやると何の抵抗もないようにすいすいと進みます。さっそく乗ってみましょう。板に座り後ろから押してもらう。上手く進まない。
問題点 掃除機のファンが生み出す気圧はおよそ0.25気圧($25\mathrm{kPa}$)です。ホバークラフトの気圧を受ける面積は二つ合わせて $0.8\mathrm{m^2}$ です。$25\mathrm{kPa} \times 0.8\mathrm{m^2}=20\mathrm{kN}=約2000\mathrm{kg}$持ちあげる力がある計算になります。
そんな大きな力があるにもかかわらず人が乗ると動かなくなってしまう。なぜ?・・・どうやら左右のバランスが悪く、片側から空気が漏れもう片方が地面についてしまっているようです。板の上に重りを乗せたときは動いていました。また、バランス感覚の良い人が乗った時も動いていたので、やはり左右のバランスが問題です。
解決策としては“うきわを3個搭載した形状にする” “バランス感覚を鍛える”等がありますが、時間や予算の関係であしからず・・・。
以上、ホバークラフト製作記でした。</description></item><item><title>便利ソフトまとめ(2017年版)</title><link>https://asanobuturi.github.io/document/2017/7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2017/7/</guid><description>どうも、中3の私です(誰だ)。今回は便利ソフトを紹介したいと思います。以前そういうまとめをしていた先輩がいるので(2017年版)と書いておきました。
GIMP 画像編集ソフト。無料だが、有料ソフトに匹敵するほどの性能を持つ。 レイヤー機能や、透過 TING の直接編集などが標準搭載。
URL: https://www.gimp.org/ (DL 方法が2つあるが、Directly を選ぶとよい。)
VLC media player 動画プレイヤー。とにかく軽い(CPU、メモリへの負荷)上に、ある程度の動画編集も可能という、万能ソフト。
URL: https://www.videolan.org/vlc/index.ja.html
Aviutl 動画編集ソフト。とにかく有能。追加スクリプトの導入でさらに輝く。
URL: http://spring-fragrance.mints.ne.jp/aviutl/
Davinci Resolve ハリウッド御用達の動画編集ソフト。長らく有料だったが、昨年無料に。様々な機能が標準搭載され、GUIも非常に見やすい。有能。
URL: https://www.blackmagiodesign.com/jp/products/davinciresolvel
Wallpaper engine デスクトップ背景をMP4形式の動画ファイルに出来る。ただし有料なのと、要求スペックがかなり高いので注意。
URL: http://steamcommunity.com/app/431960/workshop/
Atom 多機能テキストエディタ。C、JAVA などのプログラミング言語に対応。追加パッケージでさらに輝く。
URL: https://atom.io/
Free download manager ダウンロードが爆速になる。1GBが電話回線で数分。専用のブラウザ拡張機能の導入により、ダウンロードリンクのクリックで自動的にこのソフトで DL を行うことが可能。
URL: http://www.freedownloadmanager.org/
以上、便利ソフトまとめでした。
ライセンス情報 2022年9月追記：WEB版の発行にあたり、著作権の兼ね合いから画像を一部差し替え/削除しました。ライセンス情報を以下に記載します。
GIMPのロゴマーク・VLC Media Playerのロゴマーク：GPL
This work is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or any later version.</description></item><item><title>御挨拶</title><link>https://asanobuturi.github.io/document/2017/1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2017/1/</guid><description>初めまして。プログラミングも電子工作もできない中3まで部活に来たことがなかった文系部長です。なぜ物理部部長をやっているかには、複雑な事情があります。が、そのことは簡単にまとめられないので省略します。
さて、今回の文化祭は前回、前々回とは根本的に格が違います。部長のやる気なんかがそうです。ですが、やる気があるのは電工班と一部PC班のみ。PC班の中3などは常に遊んでいる。一昨年、去年は高二ですらそうでした。やる気に関しては中身を読んでみてください。表紙、裏表紙は部長。編集は電工班。会計も電工班です。
今年は装飾にも力を入れています。一昨年、去年は装飾らしい装飾はありませんでした。ですが今年は多少ですが存在します。それも全部部長が主導して、電工班の高二、中3、中2を動員して作りました。主に夏休みを利用して作りましたが、PC班は誰も手伝っていません。中1には元から手伝わせる気はなかったのですが、他に誰もいません。これを書いている今(2017/08/25 11:06)PC班は中1しかいません。誰か来いよ。一応高一が1人普段はいますが、他が使えない中ではゲームを一つでも多く作ってもらったほうが良いので手伝ってもらうわけにはいきませんでした。今年はすっぱりとPC班を見捨てて、電工班が主導で進めたので来年以降、私の跡に続く電工班が主導してくれると思うので、それらに比べたら良い仕事をしたと思います。
今年の部誌、実は8月序盤には既にほとんど完成していました。ですがちょっとした連絡の齟齬で印刷が遅れ、9月になってしまいました。
「どこが挨拶だよッ！」とかなんとか思っているでしょうが自分でもそう思います。ここまで頑張ってもようやくスタート地点。ゼロからのスタートなんて言いますが、今年したことはマイナスからゼロに戻しただけ。これからがようやくです。
そんなこんなでいろいろとある物理部展#2017ですが、ほぼすべてが初の試みです。部員全員が一丸となって、とは言えませんがかなり気合を入れた内容です。評価はご自分でつけてみてください。</description></item><item><title>微分・積分回路の仕組み</title><link>https://asanobuturi.github.io/document/2017/5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2017/5/</guid><description>おはこんばんちわ。今回はオペアンプを使用したバンドパスフィルタ(特定の周波数の波だけを通すフィルタ)の仕組み、また、その仕組みを利用したオーディオ関連の道具の設計について紹介したいと思います。
オペアンプって何だ? (図1を参照のこと)三角形の部分がオペアンプを表しています。これはオペアンプ回路の基本的な使い方なのですが、その機能は入力された信号が$R_1/R_2$倍された電圧で出力されるというものです。この、どれだけ電圧が大きくなるかの数値を利得といいます。
当然、$R_1$の値が0になれば利得も0になります。
コンデンサの性質 (図2は回路図での表し方)
コンデンサには“特定の周波数より高い波を通し、低い波を通さない”という性質があります。周波数が低くなるとともにインピーダンス(電気の通しにくさ)が大きくなり、高くなるとインピーダンスが小さくなる、つまり周波数とインピーダンスは反比例の関係だということです。インピーダンスが増加する周波数はコンデンサの容量によって変化し、容量が小さいと高くなり、容量が大きいと低くなります。
微分回路 それでは、ここで図1の$R_2$がコンデンサ($C_1$)に置き換わった場合を考えましょう(図3参照)。うえで述べた$“利得=R_1/R_2&amp;quot;$が$“利得-RI/(C_1のインピーダンス)”$となるわけです。分母となる$C_1$のインピーダンスが周波数によって変化するわけで・・・
周波数高→インピーダンス小→利得大
周波数低→インピーダンス大→利得小
というように、周波数が高いほど利得もも大きい回路になるわけです。これを微分回路といいます。
積分回路 微分回路とは逆の回路だと考えれば良いです。今度は$“利得=(C_2のインピーダンス/R_2)”$となり・・・
周波数高→インピーダンス小→利得小
周波数低→インピーダンス大→利得大
というように、周波数が低いほど利得が大きい回路になるわけです。これを積分回路といいます。
フィルタとして使おう(*^^)v 例えば、色々な周波数が混ざった信号があるとき、微分回路をつかえば特定の周波数より高い信号だけを増幅することが出来ます。つまり、高い周波数だけを選択して取り出すことが出来るのです。このような使い方を“ハイパスフィルタ”と呼びます。反対に、積分回路を使って低い周波数の信号だけを取り出す使い方を“ローパスフィルタ”と呼びます。ハイパスフィルタとローパスフィルタを組み合わせることで、特定の周波数だけを取り出すことも出来ます。この使い方はバンドパスフィルタと呼びます。
応用例その1“バンド別レベルメーター” 音楽などのオーディオ信号には、低音域から高音域まで幅広くいろいろな周波数の音が混ざっています。たとえば、その中から特定の楽器の音だけ取り出したいとき、バンドパスフィルタを使うことでその楽器の周波数の音だけを取り出すことができます。このとき、近い周波数を持つほかの楽器の音も取り出してしまうのですが、聞いているうえではそれほど気になりません。
図6のように、増幅したオーディオ信号をフィルターを使い3つの音域に分け、それぞれをレベルメーター(音量を光で表す装置)につなげたものが“バンド別レベルメーター”です。低音域ではバスドラムにあわせて、中、高音域ではそれぞれ歌声やシンバルの音にあわせて光がちらちら動く、というような見ていて楽しめる装置です。
今回の文化祭で作品として展示してあるので見ていってください。
応用例その2”グラフィックイコライザ” フィルタを使うことで信号の好きな音域だけ増幅することもできます。まず、図7のような回路を考えてみましょう。このとき、ボリュームを調整すると利得を変えることができます。では$R_3$をフィルタに置き換えてみましょう。そうすると、フィルタが通す音域だけの利得を可変できる回路になります。また、異なる音域のフィルタを並列させることで、いくつもの音域の利得を同時に調整するころもできます。(図8を参照)
このように、ボリュームをいくつか並べてオーディオの信号を変えられるようにする機械がグラフィックイコライザです。また、並列するフィルタの数に応じて”〜バンド別イコライザ”という名前になったりします。
まとめ このように、オペアンプにはさまざまな使い方や活用法があります。まさにアナログオーディオにとっては欠かせない存在です。この記事を通して、アナログ回路、自作オーディオ(そして電子工作班!)に興味を持っていただけると嬉しいです。
実をいうと、いままで紹介したような回路は現在のオーディオ分野ではほとんど使われていません。というのも、今日ではほぼすべての機器がデジタル制御できるようになっているため、アナログ回路は必要なくなっているからです。また、アナログ回路にはノイズが入りやすい、放熱が必要、等の欠点もあります。
そんなアナログな機器は入手することができません。つまり、自作するしかないということです。
以上、マイナーな趣味の話でした。</description></item><item><title>本格的に物理学っぽい話</title><link>https://asanobuturi.github.io/document/2017/9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2017/9/</guid><description>はじめに 筆者は中三の6月に一旦物理部を辞めている。それで、6月に再入部をしたので、プログラミングは専門外である。しかし個人的に物理学に興味があるので物理学っぽいことを書くことにした。というわけで、少し前に世間を賑わせ、そのままフェードアウトした重力波についてなんとなく分かるくらいに書く。
重力とは何者か ―17世紀イギリス― 概要 最初から答えを言うが、重力とは、地球が私たちを引き付けたり、太陽が地球を周回運動させたりするあの力である。皆さんは古典力学の祖であるアイザック・ニュートン(1642-1727) があのリンゴのエピソードで万有引力に思い至ったことをご存じだろう。というわけで、第一章ではそれについて関係あるものもそこまでないものも、いろいろざっくりと書く。
プリンキピア以前 突然プリンキピアという固有名詞が出てきて驚いた人もいるだろう。本当に申し訳ない。プリンキピアというのは後で説明するが要するにニュートンが万有引力について書いた本である。多分科学の本としては世界一有名なので、これだけでも覚えてほしい。
本題に戻ろう。万有引力説以前は、アリストテレスが「どんなものにも本来の場所があり、ほとんどの物体はそれがずっと真下にあり、炎はそれが天上にある。天体は例外で円運動をする」、という説を出したのが近代になるまで信じられていた。
さあ、ここで筆者は妙なデジャヴを感じた。そう、地動説の時と状況が完全に一致する。しかも、やはり近代になってこれを疑う人が出てくるのも一致した。あのガリレオ・ガリレイもその一人だったが、ガリレイは、天体はアリストテレスの言った通りに動くと思っていたようだ。
その後ニュートンはペストという感染症の流行で大学が閉まったので実家にいたときに*1リンゴの一件で万有引力にたどり着くのだが、何が凄かったかというと、これは天体にも働くというのだ。同時期のロバート・フックという自然哲学者も同時期の研究から惑星の運動が円運動なのは太陽が惑星を引き付けているからだとし、引力は距離の2乗に反比例する、というところまで求めた。結果的にプリンキピアが出版されることになるが、フックとニュートンはどっちが先だったかで揉めたそうである。
プリンキピアについて さあ、プリンキピアという語句がここまでに五回出ているが、どんな本なのかをとりあえず説明しよう。まず、ハレー彗星とかグリニッジ天文台で有名なエドモンド・ハレーは敬虔なキリスト教徒で、アリストテレスの説を覆すのに抵抗があったのだが、*2「もしかしたら惑星の軌道はきれいな円ではなく楕円かもしれない。どう思うか」と訊いたところ、ニュートンは「実は前に計算で求めたことがある。やっぱり楕円だった。途中計算の紙は捨てたが、もう一回別の紙に書いて渡そう」と答えた。これによりハレーはニュートンが自分とは別アプローチで万有引力に気づいていたことを知り、それで本を出すことを提案したことからニュートンが出版したのである。
この本の正式な日本語題は「自然哲学の数学的諸原理」で、書くにしても話の話題にするにしても弊害があるのは自明なので、そのラテン語名である $&amp;ldquo;Philosophiae,Naturalis,Principia,Mathematica”$の $Principia$(多分正式な日本語題でいう「諸原理」の部分)を抜き出してプリンキピアと呼ばれている。*3物体の運動の法則とか、ここまで触れた万有引力や天体の運動について触れている。
プリンキピアは3巻に分かれていて、最初の二冊は物体の運動の法則について、まず高校物理で習うように抵抗を無視したうえで考え、次はこれらを勘定に入れて書かれている。そして、三冊目で、万有引力で地上の物理法則から天体の運動まで説明できることが取り上げられている。
微積分が誰のアイデアなのかでほかの学者ともめていたため微積分をしないようにしているが、そのせいで3冊になっているうえ、かなり難解になっている。しかも、第二巻は説明不足になっている。
この説は、万有引力が一瞬で伝わる、ということも表しているが、ほかの重大な発見と同様に、当初は力が一瞬で伝わるはずがない、とする反対派がかなりいて、ニュートン自身それに歩み寄るところがあったが、実験で一瞬で伝わると証明されて受け入れられるようになる。 尚、万有引力はこんな式で表される。
$$ F = G\frac{Mm}{r^2}$$
$F$が万有引力の大きさ、$G$は定数、$M$・$m$は二つの物体の質量で、$r$はその距離だ。二乗なので$r \times r$となる。
重力の本質 ―20世紀以降― かなり間をすっ飛ばしたが、重力は現代物理ではまた違った形で話題になる。ここからが筆者の興味のある分野なのだが、そんなことはどうでもいいのだ。
素粒子の場合 素粒子物理学では素粒子は
物質を作ったりする素粒子(電子とか、質量があることで一昔くらい前に話題になったニュートリノもこれ) 力(重力やら原子崩壊やら光やら)を伝える素粒子 の二種類に大別される。*4重力を伝える素粒子はそのまんま重力子と呼ばれている。が、重カ子自体が観測されていないうえ、質量ゼロ、電荷ゼロとなると観測のしようがないので、ここで素粒子から離れた話になる。
さっきの素粒子の分類における、後者の「力」には、電磁気力・弱い力・強い力・重力の4種類*5がある。
このうち、電磁気力と弱い力は同一視でき、強い力をそこに加える「定説」となった理論はできたものの、重力を入れられる理論だけは未だに確かな理論がない。
とはいえ、この4種類の力は宇宙ができたときには一つだったことが分かっており、重力が最初にそこから分離したようである。
これらをまとめる理論はいくつもあり、素粒子がさらにいくつかの粒子でできているとか、素粒子は小さなひもであるとか、いろいろある。
さらに重力子について言うと、重力だけはなぜかほかの3つよりものすごく弱い。これを説明するにあたり、ロープが遠目には1次元に見えて近くで見ると3次元に見えるようにこの世界は実は11次元時空であるが、残りの7次元は小さく折りたたまれているとする説が代表的だ。*6これについては、第一章でふれた逆二乗則が、ものすごくミクロなレベルでは破れると最近分かり、かなり確実性が出てきた。他にも、3次元世界はミルフィーユみたいにたくさん平行に並んでいて、重力子だけはそこを行き来できるとか、これには諸説ある。
重力場の場合 現代物理では、アルバート・アインシュタインがものすごく有名だが、アインシュタインは重力についても新しい考え方をもたらしている。簡単にどんなものかを説明しよう。
まず、この世界を一様に延々と広がっているゴム膜のようなものと考える。そこに何かものを置くと、その部分が沈む。これが重力だ。そこに十分に軽いものを置けば、沈んだ部分の傾斜で最初に置いたものに引き寄せられるだろう。そう、万有引力が働いたのである。どちらも同じくらいの質量なら、たがいに引かれあう。 また、光はここでは膜上の歪みに影響されながらまっすぐ進むと仮定される。つまり、光でさえも重力で曲がるのである。そして、もしそこにロードローラー*7か何かを置けば、沈むどころかゴム膜がこんな具合に沈む、あるいは破れるだろう。
雑な図ですまないが、このバスケットボールのゴールを延々と長くした様なのがブラックホールである。周知のとおり一定の範囲に入ると光でさえ出られなくなる。時々それがほかの空間と何かの拍子につながるのだが、それがワームホールだ。
もっと詳しい説明をできればそれが一番だが、残念ながらこれ以上は筆者にとっても皆さんにとっても苦痛になるので、この程度で説明はおしまいである。
重力波というが何を感知したのか、そして では、本題に移ろう。重力波というのは、簡単にいうと滅茶苦茶密度の高い天体が動くときに発生する空間の歪みである。その歪みは光が一定距離を行って戻るのにかかる時間の方向ごとの差で感知される、というプロセスを経る。これを重力波と呼ぶ。まあ、ざっと仕組みを説明すればこんな感じだ。
これを観測するのにどんなメリットがあるのかというと、おもにこんな感じだ。
重力波はすべてを素通りするので、観測できない天体を「見る」ことができる これによって今まで観測できなかったより初期の宇宙への理解が深まる また、この観測装置の精度を上げ、あるいは高精度な観測装置を作るのにおいて世界各国が現在競い合っている状態だ。もちろん日本もその一カ国だ。ニュートリノの観測に使われたカミオカンデの跡始に現在KAGRA(大型低温重力波望遠鏡)が建設中だ。筆者はこの競争による観測用の範囲を超えた技術の向上、そして観測による新たな知識の獲得に期待する。
脚注 *1 教師としてではなく、学生としてである。教師が才能に気づいていて、教師はニュートンに実験室を使わせていた。
*2 地動説の話を知っていれば大体わかると思うので、細かいことは省略。
*3「なぜそこでラテン語!?」、と思う人に説明すると、この時代には、論文はラテン語というのが鉄則だったし、生物学ではそれがとりわけ顕著である。
*4 ヒッグス粒子は一応力のほうに入るようだ。
*5 それぞれ説明すると、常に気力はつまり電力と磁力で、光子により伝えられる、実は日常における物体の衝突もここに含まれる。弱い力は原子崩壊に関わる。太陽がまぶしい理由もこれだったりする。 強い力は、原子核の陽子や中性子の中の素粒子同士を結び付けていて、核力とも呼ばれている。日本初ノーベル賞の湯川秀樹の理論もここに関わってくる。重力についてはわざわざ語る意味が思い浮かばない。
*6 残り一次元は時間だ。n次元は時間と空間だが、7次元は空間だけを指して言っている。</description></item><item><title>編集後記</title><link>https://asanobuturi.github.io/document/2017/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2017/12/</guid><description>どーも。この部誌の編集を担当した物理部書記の者です。さーて、今年の部誌、POSITRON#2017はいかがだったでしょうか。例年とは趣きを異にしている(いろんな意味で)感じに仕上がっていると思います。我らが部長が部長挨拶にていろいろと思うところを書き連ねているようですが・・・私自身としてはこの部誌も含め、文化祭全体として満足できるものになったとおもっています。
POSITRON#2017に関するご意見、ご感想、ご質問、文句等は物理部展#2017にいる暇そうな物理部員にお申し付けください。
最後まで読んでくれてありがとう!!</description></item><item><title>自動演奏装置について</title><link>https://asanobuturi.github.io/document/2017/3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2017/3/</guid><description>今回は今年作った「自動演奏装置」について書いていきたいと思います。去年作ったリコーダーのリベンジですね。去年に比べてそれなりのものができたと思います。いやぁ、去年は酷かった。ずっと尺八吹いてるみたいな感じになってしまいました。教師にもその後の授業でなんか言われるしあれでしたんで
今年は色々と改善&amp;hellip;というか根本から見直しして作り直しました。まあ、ともかく物理部展#2017をよろしくお願いします
製作動機 一番は去年のような無様な真似はしたくないというのが一番でしょう。去年の敗因はリコーダーの穴をしっかり抑えられなかったのと、空気をただ吹き込んでも音が出るということだと思います。それを防ぐために、もっとも効果的な策はリコーダーを諦めるということでした。というか去年とある動画を丸パクし過ぎました。
そこでたどり着いたのが「メロディオン」です。空気をただ流し込んでも音もでない、鍵盤超押しやすい、和音もでる。リコーダーに何一つ劣っている点がないね！！
というわけで、メロディオンを用いた自動演奏装置を作ることに決めたのです。
材料 ソレノイド × 32個 2SK2233 × 33個 150Ω × 33個 22kΩ × 33個 リレー × 1個 TLP627-4 × 9個 Arduino Mega 2560 × 1 エアーコンプレッサー × 1 メロディオン × 1 木材 × 適量 バルブ × 2個 PC x 1個 愛情 × ∞（ムゲンダイ） 部品の説明 ソレノイドとは、電磁石の力で鉄の棒を上下させる部品です。鍵盤を押す部品ですね。2SK2233はトランジスタ(のようなもの)です。Arduinoから出力される電流が小さいのでそれを増幅する部品です。150Ω、22kΩは抵抗です。電流の勢いを落とします。安全装置ですね。リレーは遮断装置です。バルブに流す電流がすごいので、それを使って処理回路と遮断します。
TLP627-4は安全装置です。Arduinoは繊細な部品なので、それを守ります。Arduino Mega2560は処理装置です。PCから出力された音楽の信号を電気信号に変えます。エアーコンプレッサーは空気送り機です。メロディオンに空気を供給します。メロディオンは楽器です。愛情は説明不要でしょう。愛なくしては原因不明のエラーに耐えられません。
How to 動作 パソコンで楽譜データを数字に変換(俗に言うMIDI)し、その数字をArduinoに送り、Arduinoでこの数字のときはドの音、この数字のときはレの音&amp;hellip;&amp;hellip;と先に教えておいて、その数字が来たら、その音を出す鍵盤を押すソレノイドに信号を出します。
実際はArduinoとソレノイドの間には安全装置と増幅装置を挟んでいます。後、和音のときや極端に低い音の時などはバルブにも命令を出し、流れる空気の量を増やすようにしています。
回路図 Anduino に書き込んだプログラム 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 #include &amp;lt;MIDI.</description></item></channel></rss>