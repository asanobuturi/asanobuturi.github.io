<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2016年度・部誌 on 浅野学園物理部</title><link>https://asanobuturi.github.io/document/2016/</link><description>Recent content in 2016年度・部誌 on 浅野学園物理部</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Fri, 14 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://asanobuturi.github.io/document/2016/index.xml" rel="self" type="application/rss+xml"/><item><title>2045年問題(技術的特異点)についてちょっと説明</title><link>https://asanobuturi.github.io/document/2016/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2016/10/</guid><description>皆様は、「2045年問題」という言葉を聞いたことがあるでしょうか？「2045年問題」とは、「機械が人間を超えてしまうのではないか」という問題です。今回はこの問題について少し説明をしようと思います。
(※電子版移植時追記：基本的に原本に手を加えずに電子化を進めていますが、元データでは「人間が機械を超えてしまうのではないか」になっていたのでさすがに修正しました)
その前にまず、「収穫加速の法則」について説明します。「収穫加速の法則」とは、「新たに大きな出来事が起きるまでの時間間隔は、時間の経過とともに短くなる」というものです。例えば、人類が二足歩行になった時手が空いたので、今までやっていたことがもっと早くでき、ものを考える時間が増え、結果的に今までより早く新しい発明が起こったようにです。
なぜ今そのような話をするのか、簡単に言うと「このまま機械を開発していくと、近いうちに機械が人間を超えてしまう」からなんですね。最近のコンピューターは1.5年で2倍の性能になっている(ムーアの法則)と言われているので、このまま行くといつかは人間を超えてしまうのは納得できるでしょう。この法則を提唱したカーツワイルは「技術的特異点(2045年問題のこと)は近い」と結論づけました。
さて、「2045年問題」とは何でしょうか。ざっくり言うと2045年以降のことです。詳しく言うと「人工知能が人間の能力を超えることで起こる出来事」とされています。つまり、機械が人間を超えてしまうことで、今までの世界の法則が乱れてしまう可能性がある(または、る)ということです。最悪の場合、某タ○ミネータ○(I&amp;rsquo;ll be back👍)のように、機械が人間を不要とみなして暴力的に排除しようとしてしまうかもしれません(もちろんそうなった時には人間が機械に対抗する手段はありませんが)。おそろしあー。
更に恐ろしいことは、「人間を超えた機械が更にそれ自身を超えた機械を作る」ことです。この場合(理論上無限ループになるのですが)、最後に作られる機械の思考能力は、人間の思考能力の10の24乗倍にもなるという試算があります。その場合、その機械から見て人間は大きい石と変わらないのではないかとも言われているのです。
ところで、なんで2045年なのでしょうか？答えは簡単です。「収穫加速の法則で計算したら2045年だぜ」ということだけなのです。実際、「2030年までに起こるかもしれないぜ」といってる人や、「2100年までは大丈夫だろ」といっている人もいます。どっちにしろ、そう遠くない将来にこのようなことが起こると言ってることには変わりありません。
しかし、このような問題を否定している人たちもいます。「コンピューターの高速化は限界に達している」という意見や、「計算すべきことが無数にあるので、人間のようにあらゆる物事を実行する人工知能は作れない(モラベックのパラドックス)」などというものがあります。
もちろんどうなるのかはその時にならないとわかりません。しかし、私はこのようなことが起こらないで、人類が滅亡しなければいいなと願うばかりです。私の記事はどうでしたか？これで皆様が機械について更に興味を持ってくれれば幸いだと思います。
(10の24乗=1,000,000,000,000,000,000,000,000=/*すごく&amp;hellip;大きいです*/)
参考文(？)献 Wikipedia 技術的特異点
https://ja.wikipedia.org/wiki/技術的特異点
Wikipedia収穫加速の法則
https://ja.wikipedia.org/wiki/収穫加速の法則
http://www.nicovideo.jp/watch/sm21068977
↑技術的特異点、人工知能について説明した動画です。私がこの記事を書こうと思った理由です。</description></item><item><title>AMラジオ製作記</title><link>https://asanobuturi.github.io/document/2016/4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2016/4/</guid><description>初めに 僕は今回、文化祭に向けてAMラジオの製作をしたので、それについて簡単に記したい。
製作内容 今回造ったラジオはAM専用で、トランジスターを一個使った（いわゆる一石ラジオ）ものである。
上記が回路図です。
今回使った部品は、主にメインとなるトランジスタ（２SC１８１５）、炭素被膜抵抗、ダイオード、ポリバリコン、電解コンデンサー、ほかにはアンテナとなるミノムシクリップを使ったケーブル、エナメル線を使ったコイル、スイッチ、クリスタルイヤホンである。電池は、９Vのものを使用している。電子部品の基板に関しては、ラグ板を使用した。作成手順としては、まずラグ板に部品をはんだ付けし、その後コイルを自作、そしてラグ板とバリコンを導線でつなぎ、電池系のケーブルなどをはんだ付けし、方眼紙のケースに固定した。上の写真は、製作途中のものである。
所感 比較的簡単だろうと最初は高をくくっていたが、まず、コイルの自作が一番難しかった。コイルを作るうえでは方眼紙で円柱を作らなければいけないのだが、そこできれいな円柱を作ることができなかった。(方眼紙はケースなどにも利用したが、正直言ったところやわらかいかもしれない。)また、エナメル線を巻くときに、線が絡んで玉のようなものができてしまったり、円柱の表面に線の巻けていない部分ができてしまったりするなど、案外コイルの自作は難しいものだと思った。コイルができても、保管中にコイルの輪が外れるなど、維持も大変であった。このようにコイルで大幅に苦労した。また、ラグ板やポリバリコンの端子に部品をはんだ付けする際、一か所にコイルの線やケーブルが何個か重なる部分があり、すべての部品にはんだをなじませるのが大変であった。また、完成後もなかなか動かず、苦労した.また、アースをつけるとかなり音がよく聞こえた。
おわりに 以上製作の所感などを書いてきた。意外と苦労するところもあったが、非常に勉強になるとことも多かった。お読みいただきありがとうございました。ご参考になれば幸いです。
参考文献 「ゼロから理解する 世界一簡単なトランジスターのきほん 伊藤尚未 誠文堂新光社 ２００８」</description></item><item><title>スマホ世代の為のパソコン活用の心得</title><link>https://asanobuturi.github.io/document/2016/7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2016/7/</guid><description>10年目 初代iPhoneが世に出てからもうじき10年、今では小学6年生の実に7割がスマホを使っているというデータも出るほど、子供にとっても身近な存在となっているスマホ。一方で生活から離れつつあるとも言えるのがパソコン、2015年実施の総務省の調査によると、20代以下で普段パソコンよりもスマホを使うとした人は60代以上の1割に対し6割にも上る。
問題点も… そんな中顕在化してきているのがパソコンに触れてこなかったことによる20代以下のパソコンスキルの低下だ。その深刻さは今年3月のNIKKEI STYLEで「スマホ世代のＰＣ知らずスキル低下、職場で波紋」という記事が出来ている程である。
確かにパソコンを使わずとも、スマホさえあれば日常生活では事足りる。だが現状パソコンを生活から完全に切り離せるかというと決してそうではないと思う。普段スマホしか使ってこなかった人がいざパソコンを使うとなったとき、どのように向き合えばいいか、その心得をここでは記しておきたい。
スマホとの差とは？ そもそもアプリを使って何らかの作業をするという点で、パソコンとスマホに大きな差は無い。それでも、スマホは使えるのにパソコンは苦手という人がいるのには大まかに2つの差異があるからと考えた。その2点を克服すればパソコンが苦手ということは無い筈だ。
結論を述べると、タイピング練習をすることとファイルという概念を理解すること。これをすればスマホが出来る人はパソコンも出来る。
タイピング まずタイピングについて、直感的に操作できるスマホに比べ、100近くのボタンから成り立つパソコンのキーボードには初め間違いなく戸惑う筈だ、人によっては苦手意識すらあるだろう。まずここに関してはキーボードは文字の入力の為だけにあると割り切り、文字を打つ以外の事はマウスでやることを心掛けてほしい。特殊キーは後々必要に応じて覚えればいいのだ。
ファイル もう一方のファイルという概念についてだが、実はコンピューターの本質にも触れる重要な概念であり、ここで全てを解説することは不可能である、だが次の3点は理解してほしい。
パソコンもスマホも数字しか扱えない、文字や色といった情報は特定の数字に関連付けて保存されている。
文章や音楽や画像といった数字情報の纏まり1つ1つをファイルと呼ぶ
ファイルはどんなに少なくても一台のパソコンやスマホに数万以上あり、目的のファイルを見つけやすいようにフォルダというもので分類するものである
スマホではこのファイルという概念を意識しなくても使えるようになっているが、パソコンは基本そうではない。ファイルの保存場所を一々自分で決めなくてはならないからだ。
そうは言ってもWordやExcelくらいは知らなくても使えると思ってる人、例えばそのデータをCDやUSBメモリ、それこそスマホに入れて他の人に渡せるだろうか？
繰り返すが、ファイルに関する概念はパソコンの本質ともいえる。理解できるまでWeb検索や、本を読むことが大切だ、最初期のパソコンから続く概念なので、図書館にあるような古い本で構わない。
最後に これまでPC-98について、MS-DOSについて、とマニアックな担当ページを作ってきたが、ここに来てこういった初心者向けの文章を書いてみることとなった。
なるべく素人にも分かりやすく、簡潔な内容となるよう心掛けたつもりだが、やはりというか、どことなくマニアックな内容になってしまったような気もする。
ここまで読んでくれた読者の、少しでも役に立つことを祈るばかりである。
2016/08/25 物理部部長 大浦</description></item><item><title>マウスレーサーの仕組みについて</title><link>https://asanobuturi.github.io/document/2016/2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2016/2/</guid><description>前書き 電子工作班中２の安藤です。はじめまして。
マウスレーサーについて、作り方や材料について詳しく書こうと思ったのですが、B5２ページで、と言われたので、マウスレーサーに使われている主要な部品と仕組みになどについて補足程度に書こうと思います。
主要部品の説明 トランジスター
足が3本あり黒く小さい部品はトランジスターという部品です。流れた電気を増幅する能力などを持っています。
このマウスレーサーの回路では、センサーで感知し出された電気を増幅し、リレーに流す役割を持っています。
店で買うと1個10円ぐらいで買えると思います。
リレー
ボックス状になっている、大きい部品は、リレーと言います。仕組みは説明すると1ページでは収まらないので、簡単に書くと複雑になっているスイッチのようなものだと思って下さい。このマウスレーサーの回路では、モーターの動きを制御してマウスレーサーの動きを変えています。店で買うと種類によって変わりますが、ここで使ったものは1個360円でした。
LED
プラス（アノードA）とマイナス（カソードK）を間違えると光らないというあのLEDです。今回は光を反射させたいので超高輝度というものを使っています。本来は高輝度ですが、大丈夫みたいなので、超の方を使っています。保証はしません。
お詫び
ページ数の関係で写真を載せられませんでした。すみません。
仕組みについて マウスレーサーは、簡単に言うと、壁に沿って一定の距離を保ちながら走るロボットです。どうやって一定の距離を保つかと言うとLEDの横にある合計３つのセンサー（フォトトランジスター）で、LEDから出て壁で反射された光を感知します。光を感知すると電気が流れるので、それをトランジスターやリレーでスイッチを切り替えたりしてモーターの動きを制御しています。壁から遠ざけた場合は、左のタイヤだけが回るように、壁に近づけた場合はそれの逆になるようにします。また前の壁に近づけた場合は右だけが回るようにします。
そしてそのセンサーの感度は、前方のセンサーは500ｋΩの、残り２つの右と左を制御するセンサーは、100kΩの半固定抵抗で、ドライバーを使って調整します。この調整が思ったより大変です。（というか、いくら調整しても完璧に作動するか分からない。）
展示されている部屋の光などにも影響されるので外光避けをセンサーにつけても中々あいつは言うことを聞いてくれません。これを作って片山さんの言っていた「センサーは難しいよ。」という意味がようやく分かった気がします。
展示されているコースについて 展示されているコースに関して、説明します。中央が四角く囲ってあり、横に4枚立ててある変なものはこのマウスレーサーを動かすためのものです。へこんでいる部分にL字の板や、３枚がくっついた板と1枚の板を全ての箇所に入れ、自分で好きなように動かせます（マウスレーサーの調整がとてもうまくいっていたら）。また板が少し白くなっていますが、それは白色が光を反射しやすいのでスプレーで塗ったからです。板によって白さが異なることは仕方ないと思ってください。
##終わりに スペースの問題で書ける事はこれぐらいになります。参考にさせて貰ったサイト及び検索の仕方も載せるので、興味があったら、調べてみてください。作り方や部品の詳細について載っています。最後に、電子工作を初めて1年程の素人の僕の記事を読んでいただきありがとうございました。
参考サイト http://www.murata.com/jajp/campaign/ads/japan/elekids/ele/try/~/media/webrenewal/campaign/ads/japan/elekids/ele/try/koka13f/koka13f0021?la=ja-jp
←これに作り方など載っています。
１.「電子工作」と調べます。　２.6個目くらいに村田製作所と書いてあるものをクリック　３.開いたページで「KIDS電子工作セカンドシーズン」を開く　４.後は分かると思います。</description></item><item><title>高電圧</title><link>https://asanobuturi.github.io/document/2016/5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2016/5/</guid><description>えー、今年は顧問の要望もあってページ数が限られています。よって長くなりそうな作品の説明はせず、自分の好きな分野について語らせていきたいと思います。
まず電圧とは何か、ということから始めさせていただきます。まずそもそも電気とは何かと言いますと、電子です。電子とは化学の分野になるので詳しい説明は省きますが、『―』の電気を持っています。小学校低～中学年のころに習ったと思いますが、電気は電源の＋極からー極へと流れています。ですがこれは正確な表現ではなく、実のところ、電子がー極から＋極に流れていっているのです。電子は『―』の電気を持っていますので、『―』が『―』極から出ている、これは言い換えると、「『＋』の電気が『＋』極から出ている」ということです。
さて、ここで電圧の話に戻らせていただきたいと思います。電圧と言うのは端的に言ってしまえば、電子の動く速度です。余談ですけれども、電流とは電子の量です。よくマンガや小説で「電圧が高くても電流が低ければ人は死なない」というフレーズを目にしたことがある人は多いと思います。これはホントの事で、秒速80ｍでＢＢ弾を撃たれても（エアガンの速度です）「あてっ」ってなるだけですけれども、時速80ｋｍ（秒速2ｍ）で岩が転がってきたら死にます。電流が高ければ電圧が低くてもダメージが与えられるというのはこういうことです。
とまあ、電圧と電流の説明はここまでにして、『高』電圧の説明に入って行きたいと思います。
まずどのくらいの『Ｖ』から高電圧と呼ぶかと言いますと、実は厳密には決まってなくて、自分は家庭用コンセントの電圧が100Ｖなので101Ｖ以上が高電圧と考えています。
続いて、高電圧の作り方について説明したいと思います。高電圧の作り方は大きく4つに分けることができます。「部品」「回路」の二つです。
部品については、世の中には『静電気』という数千Ｖに達する自然現象があります。これを利用してエンジンやライターに点火する装置があります。エンジンの点火装置の方は安定性抜群、電圧も高いのですが値段が半端ではありません。大人からすればポンって出せる金額なのだろうけど、高校生の僕では当分色々と我慢しなければなりません。ライターの方は100均で購入して分解すれば手に入るのですが、すぐ壊れて、電圧もそれほど高くありません。これらは割と制御が簡単ですので高電圧初心者にお勧めです。
次に、回路を組んで、低電圧を高電圧に昇圧する方法を紹介したいと思います。この方法はそれこそ星の数ほどあり、紹介しきれないので自分がやったことのある、またはすぐに出来そうなものを紹介したいと思います。最初はタイマーＩＣというものを用いて、コンデンサと言う電気をためられる部品に低電圧を何回も何回もぶち込んで最終的に高電圧を作る方法です。これは回路も簡単ですが、コンデンサにためた電気を発散し損ねると爆発を起こします。取り扱うときは十分注意しましょう。次はコックウォルトンフロント回路です。これは先ほど紹介したコンデンサと、電気を一方方向にしか流さないダイオードという部品をはしご状に組んで交流の入力電源をはしごの数だけ倍加し、直流電流を出力する回路です。
とても簡単で、電流の低い交流電源さえ用意できればかなりの高電圧を用意できます。ただし、コンデンサやダイオードのリード(つなぐ針金みたいなところ)や自然放電の影響もあって10000Ｖくらいまでしか上げることのできません。次にコンデンサを並列につなぎ、ある一定以上の電圧がたまった瞬間に直流になってコンデンサの数だけ電流が倍加される回路があります。これは調節が非常に難しく、うまくいかなかったときの放電はえげつないものがありますし、仮にうまくいったとしても、きれいに倍になるというわけでもない上に、ここまでの電圧に耐えるコンデンサは一般向けに販売されていませんので自作する必要があります。続いては電子レンジの中身を分解したときに出てくるＭＯＴと言う部品をうまいこと接続して高圧高電流を引きずり出すという方法があります。(分解は自己責任でやりましょう。下手をすれば保険が効きません)これは先ほどの回路と比べて、段違いの電流、電圧を取り出せますが、とてつもなく危険です。良くて死亡、悪ければ人相さえ分からなくなります。最後に、回路で最も安全かつ高電圧を取り出せる方法を紹介します。それはテスラコイルと呼ばれるもので、4年前の文化祭でも展示していましたが、これは本来大学の研究室が作るようなもので、お金もかかりますし、作成もとても難しいですが、今までの回路と比べると比較的安全で、ある程度極めると楽器にもなります。
スペースもそろそろなくなってきたのでそろそろ終わりにしたいと思います。本当は高電圧の月道とかも書きたかったのですが、それはまたの機会にということで。
本日は物理部展＠2016にお越し頂き有難うございました。来年もよろしくお願いいたします。
※回路図も乗せたかったのですが、これを参考に作って万一怪我を負ってしまいますと自分は下手すれば退学なので省略させていただきました。ご了承ください</description></item><item><title>弾幕の作り方</title><link>https://asanobuturi.github.io/document/2016/8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2016/8/</guid><description>皆さんこんにちは。作者名のスパゲッティソースというのは“スパゲッティみたいにこんがらかっていて読みにくいソースコード”という意味である。そんなソースコードを書く人がこんな部誌を書いていることを気にしたら負けである。
本題に入るが、弾幕とは簡単に言えば弾の複数形である。つまりゲームで敵が撃ってくる弾をどうやって作るのかを解説する。またこの部誌はC言語およびC++を基調としている。それ以外の言語では違うところが多々あると思うので、注意してほしい。
まずはグラフィックの調達だ。一般の企業が出しているようなクオリティの高いものでなければペイントで十分である。事実私も多用している。また透明化するソフトも必要だがそれは無料ソフト“手軽に透明”を私は使っている。透明化しかできないが十分である。どうしてもそれらができない場合は簡単な図形であれば描画する機能がC言語についているのでそれを使えば問題ない。ただし、少し処理が重くなることは考慮する必要がある。
次にソースコードを書いていく。まず、配列と呼ばれるものを用いてたくさんの変数を作る。といってもわからないであろうから、順に説明していく。まず、変数というのは箱みたいなものである。そこには数値をひとつ入れることができる。言い換えるとひとつしか入らない。であるがゆえにたくさん作る必要があるのだが、そのことはひとまず置いておいて、変数についてもう少し詳しく説明していく。ひとつしか数値が入らない変数に二つ目の数字を入れるとどうなるか、一つ目の数字が消えるのである。そこも使いやすい点であるのだが、それを知らないと混乱してしまうであろう。さらに、すべての数を入れられるわけではないということである。よく使われる変数の型であるINT型は-2147483468~2147483467までの整数しか入らない。小数を扱うならFLOAT型で約±3.4×10の38乗までで有効桁は7桁となっている。FLOAT型の方が多くの数を入れられるため便利に見えるが、その分多くのメモリを使う上に、“3で割った余りを求める”という時にも使えないので適材適所で使う必要がある。他にもたくさんの型があるが、私はこれ以外にほとんど使ったことがないのでこれだけあれば十分である。興味があれば調べてみても構わないが。
変数についてわかったところで、配列の説明に入る。難しく聞こえるかもしれないがなんてことはない。変数の複数形だと思えば良い。それをfloatbulletx[1024];などとすればよい。これは弾のX座標の配列の例である。つまり最低でももう一つfloatbullety[1024];が必要である。それ以外にも弾が様々な方向に飛ぶとすれば、その向きと速度の配列（もしくは移動方向のXとYの長さ）が必要である。ちなみに私は括弧内の方を使っているのだが、意味がわからない人は図１を見てほしい。また、1024というのは表示できる弾幕数の最大値となる。
それでは数値を代入していこう。例えば「にゃにゃめにゃにゃじゅうにゃにゃどのにゃらびでにゃにゃつのたまを（にゃにゃ,にゃにゃ）からはにゃつ」（斜め77度の並びで7つの弾を（7,7）から放つ）為にはどうすればよいか。ちゃんと説明しようと思うと三角関数（sin,cos,tan）や弧度法（ラジアン）が必要だが、まだ習っていない人のために簡単に言うとコンピューターに77度の三角形の縦、横、斜めの長さを計算させるだけである。それらがわかっている人にとっては本当にそれだけでいいの？と思うかもしれないが、コンピューターは計算がだーいすきなので、がっつりお仕事してもらおう。当然それらを相似拡大する必要があるが、ここまで読んだ人ならわかるであろう。ちなみに（7,7）から77度の角度で弾を放つとすぐに画面外に出て消えてしまうので、-77度で弾速7で7フレームおきに放ってもらおう。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 /*初期化処理など*/ int a=-1; int x; //一時的に弾の x 座標を保存するための変数 int y; //一時的に弾の y 座標を保存するための変数 int i; int gametime=-1; //ゲームが始まってからの時間 float pi=3.141592; //円周率。ラジアンに変換する時に使う float bulletx[8];//今回は 8 個もあれば十分ですね。（以下同様） float bullety[8]; float bulletx2[8]; float bullety2[8]; /*初期化処理など 2*/ int white=GetColor(255,255,255);//白い色 while(ProcessMessage()!=-1){//エラーがない限りループする gametime++; //gametime に１を足す if(gametime%7==0){//もし gametime を 7 で割った余りが 0 だったら a++; bulletx[a]=7; //bulletx[a]に 7 を代入 bullety[a]=7; bulletx2[a]=7*sin(-77*pi/180); //斜辺が 7、角度が-77 度の横の長さ bullety2[a]=7*cos(-77*pi/180); } for(i=0;i&amp;lt;8;i++){ //8 回ループ bulletx[i]+= bulletx2[i]; bullety[i]+= bullety2[i]; x=bulletx[i]; //小数点以下を切り捨てて整数値に y=bullety[i]; DrawCircle(bulletx[i],bullety[i],7,white,TRUE); //半径7の円を描画 } If(gametime&amp;gt;=42){break;}//弾を 7 つ放ち終わる時間になったら終了 概ねこんなかんじである。かなりはしょって書いたのでほとんどの人はわからないだろうが、興味を持ってくれたら幸いである。一応全然わかってない人のために言っておくが、「初期化処理など」のところを書いていないためこれをコンパイルしても動かない。加えてこれだと7つ目の弾を放った瞬間に終わるので、その弾は見えて一瞬である。さらに実行し始めてから0.</description></item><item><title>当たり判定</title><link>https://asanobuturi.github.io/document/2016/6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2016/6/</guid><description>はじめに こんにちは。物理部PC班ではゲームを作っていますが，そのゲームを作る中で多分最初の難関が「当たり判定」ではないでしょうか。ここでは，どのようにして当たり判定が行われているのか説明したいと思います。
かなり難しくなってしまったので，読み飛ばしてもかまいません。そして，ここに書いてある当たり判定は実際に必要になった時に自分で考えたものなので，もしかしたらもっといい方法があるかもしれません。
また，図は適当に書いたものなので，参考程度にしてください。
座標とは まずは，「座標」について説明したいと思います。（座標は中学で習うので，ここに書かれていることは分からなくても気にしないでください。）
座標とは下のようなものです。例えば，点Aのx座標は７，y座標は５というような感じです。
ただし，数学で言う座標は普通，↑のことなのですが，コンピューターの画面で言う座標はこれとは違って，一番左上が（０，０）で，横に行くほどｘが大きく，下に行くほどｙが大きく（ｙだけ逆に）なっています。
PCやテレビの画面をよく見ると，ドットがたくさんあるのがわかりますか？そうです。これの一つ一つに座標が割り振られていて，一番左上が（０，０）です。そして，今のほとんどのテレビ（フルハイビジョン）は横に1920個，縦に1080個あります。ゲームなどでも，ウインドウの中の一番左上を（０，０）としています。
点と点の当たり判定 さて，ここからは実際に当たり判定を考えていきましょう。
まずは，点Aと，点Bの当たり判定をしてみましょう。
例えば，A（３，５）とB（２，５）があった時，これは重なっていますか？もちろん，重なってないですよね。つまり，点と点の当たり判定をするときはそれぞれx座標とｙ座標が等しいかどうかを判定するだけです。
つまり，右のとき，「AｘとBｘが等しく，AｙとBｙが等しいとき」，この２つの点は，重なっているということになります。
長方形と長方形の当たり判定 つぎに，一気にハードルを上げて長方形と長方形の当たり判定をしてみたいと思います。 ただし，長方形は傾いていないものとします。
例えば上のような２つの長方形があったとします。この２つはどのように当たり判定をすればいいと思いますか？
（この微妙な空白を埋めるのに少 しお付き合いください。）
実は，一番最初にこれの当たり判定をしようとした時，それぞれの点が長方形の中に入っているかどうかで判定をして，長方形と長方形がクロスしている（スイスの国旗みたいな形）パターンを見落としていて，４時間それに気づかず悩まされたときがあります。（実話）
その後，いろいろ調べてみると，下のように判定する方法を見つけました。よく使われる方法は下のようにｘ軸とｙ軸を分けて考えるという方法です。
まずx軸について。
下に，考えられるものをすべて上げてみました。下のどの場合でもあたっていることにすればいいので，「DxがAxより大きく（右にある），CxがBxより小さければ（左にあれば）」当っているということになります。
同じようにy座標も考えて，「DxがAxより大きく，BxがCxより小さく，DyがAyより大きく，ByがCyより大きければ」当たったということになります。（点Aは点Bより左上，点Cも点Dより左上とする）
円と点の当たり判定 下のような円（半径をｒとする）と点の当たり判定をしてみましょう。
実は，円と点の当たり判定は長方形と長方形の当たり判定よりはるかに簡単で，「円の中心から点までの距離が円の半径より短ければ当たった，長ければ当たっていない，同じなら点は円上にある」です。（点と点の距離を求める公式は中学で習います。）
円と円の当たり判定 一見むずかしそうな気がするのですが，じつはこれも簡単（こんなに小さなところに書 けるくらい）で，「それぞれの中心の距離がそれぞれの半径の和より小さければ」当たったとなります。
線分とx軸に平行な線分の当たり判定 （「線分」とは，長さが決まっている直線のこと。「直線」の長さは無限。あれ，矛盾してる。）
線分と線分（x軸に平行かどうかわからない）の当たり判定はかなり難しいので気になる人は自分で考えてみてください。
まずは，上のような２本の線分があったとします。（Cy＝Dyとする）濃い線を線分AB，薄い線を線分CDとします。
最初に，長方形と長方形の当たり判定でもやったように，y軸だけを考えます。
上の場合は，AyとByの間にCyがないので，絶対に当たらないですよね。つまり，１つ目の条件は「AyとByの間にCyがある」と当たっているです。
次に，上の条件に当てはまっているとき。
直線ABと直線CDの交点（交わっている点のこと）を求めて， その点が線分CDの上にあるかを判定すれば，当たり判定ができます。つまり，「AyとByの間にCyがあり，２つの直線の交点のx座標がCxとDxの間にあれば」当っているということになります。
おわりに ここまで読んでくれてありがとうございます。m(__)m
少し駆け足な感じになってしまいました。たぶん最後までわかったという方は少ないのではないのでしょうか。分からなくても入試に出ることは無いと思うので，無理に理解する必要はありませんが，どのようにして当たり判定がされているか少しでも興味を持っていただけたら幸いです。</description></item><item><title>部長挨拶</title><link>https://asanobuturi.github.io/document/2016/1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2016/1/</guid><description>今年も文化祭の時期が近づいて来ました、台風も近づいていますが多分文化祭前に通り過ぎてくれるはずです。文化祭直前に東京沖で発生とか許されないからね？物理部では主にパソコンでのゲーム制作と電子工作をやっていますが、どちらも小学生の皆さんには馴染みが薄いかもしれません。電子工作は勿論、その手の体験教室でもないとやりませんし、パソコンの方も今の小学校だとどのくらい授業でやるのでしょうか。
さて、今の小学5年辺りは一部でスマホネイティブ世代とも呼ばれています。初の本格的なスマホであるiPhoneが日本で発売されたのが2008年、人によっては小学1年からスマホと慣れ親しんできた人もいるのではないでしょうか。
一昔前までインターネットを使おうとすればその手段はパソコンが主なものでした、そういった意味で20年ほど前からパソコンは人々の生活必需品とも言えました、その形がスマホの登場により大きく崩れようとしています。というか既に20代を中心にパソコンを普段使わない層が出来ています。
実際、パソコンはあと数十年もすれば一般家庭からは完全に淘汰されると私は思っています、恐らく企業ではもう暫く現役でしょうが。そんなパソコンに残った立場の一つがこの展示にあるゲーム開発です。これを機会にパソコンというものに触れてみてください。
私自身がパソコン班なのでパソコンに関する話題が大半になってしまいましたが、今年は電子工作もすごい(ことになっているらしい)です。是非楽しんでいって下さい。
2016/09/08 物理部部長 大浦</description></item><item><title>編集後記</title><link>https://asanobuturi.github.io/document/2016/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2016/11/</guid><description>今回、部誌の編集を担当した UT です。今回は印刷直前までばたばたしていて、あまり分量は多くないと思います。ですが、一つ一ついいことが書かれているため、質はいいものだと思います。この部誌を通じて、プグラミングや電子工作に興味を持ってくれると嬉しいです。受験生の皆さん、物理部の発表を見て浅野に合格したらぜひ、高校棟地下一階物理教室までいらしてください。今回は物理部展を見ていただいてありがとうございました。</description></item><item><title>無音カメラとその違法性について</title><link>https://asanobuturi.github.io/document/2016/3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2016/3/</guid><description>こんにちは、3年のYtです。実は今回の編集なのですがそれは置いといて、今回はスマホの”無音カメラ”について話したいと思います。皆さんスマホで食べ物やスクリーンショットなどを撮るときにうるさいな&amp;hellip;と感じたことはありませんか？そしてそれを無音にしたいと思ったことはありませんか？
私はあります。電車内でLINEのトークをスクショして保存したい！ってときでも音が鳴るので周りに白い目で見られますよね。まずはそのときの対処法についてです。今回はアンドロイドを中心に話していきたいと思います。
無音カメラアプリを入れる これが一番気楽かと思います。例えばGoogle Playにある「忍びカメラ」です。ですがこれには、ピントを合わせられない、フラッシュが使えないなどの制限があります。ですが、手軽にインストールできるので皆様試してみてはいかがでしょうか？
カメラの音のデータを消す これは難易度が高いです。Androidでroot(パソコンでいう管理者権限)を改造して使えるようにし、カメラの音のデータを消します。こちらはメーカー保証をなくす行為なので良い子は真似しないでね。
海外のスマホを買おう これは海外のスマホを買い、そのまま使ってしまおうというものです。simカードという携帯に入っているものをさしかえて設定します。スマホはアマゾンでも売っていますし、海外のスマホはシャッター音のONOFFができるので大丈夫です。
※この内容は総務省の技術基準適合証明を通っていない端末を購入する方法となりますが、決して電波法違反を助長するものではありません。購入は自己責任でお願いします。 では実践していきたいと思います。
1番は使えばわかるので割愛します。 2番ですが、下の画像のところを削除したら、カメラ音が消えました。静かなので堂々といけますね。
3つ目ですが、さすがに新たにスマホを買うお金はないので、今回はXperia ZL2(SOL25)をZ2a(D6563)に中身をかえてみました。すると…音が消えました。ですが、日本の通信を使うとカメラの音が出てしまいます。ここらへんまで厳しいんですね…現状だと無音アプリが安全です。
では、次に何故海外ではシャッター音は鳴らさないでいいのに日本では音が出るようにしなければならないのか、ですが、これはわかりますよね。勿論公共の場での盗撮を防ぐためのものです。音が鳴らないとわからないですからね。それがルールになってきていますし、そのため、携帯メーカーは自主規制によりシャッター音を強制にしているというわけです。
ここからが本題です。
無音カメラについてどの辺りまで合法なのか、疑問点は2つあります。
無音アプリの配信は違法なのか 使用について違法なところはあるのか まず一つ目ですが、あくまで配信はただの配信なので縛る法律はありません。そのため、黙認状態となっています。使用者側が気を付けろ、ということらしいです。
２つ目は、こちらは状況によって違いますが、風景などを撮るのは構わないそうですが、公共の場で盗撮らしき行為またはそのものをすると、迷惑防止条例に当たるそうです。
結論 無音カメラは簡単なアプリを利用して利用できるが、公共の場で使用するのは気を付けた方がいい。
皆さんも無音カメラを電車の中などで人を撮ったりせずに使いましょう以上で私の部誌発表を終わります。最後まで読んで頂きありがとうございました。</description></item><item><title>落下る</title><link>https://asanobuturi.github.io/document/2016/9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2016/9/</guid><description>初めに 今回で最後になりました、どうでもいいことを物理的に検証するというという企画です。今回検証するのは、この阿鼻地獄の刑罰の、2000年間落ち続けるというものです。早速ですが、Let&amp;rsquo;s 計算！
阿鼻地獄とは…
罪：殺生、盗み、邪淫、飲酒、妄語、邪見、犯持戒人、父母・阿羅漢（聖者）殺害。
具体的説明：地獄の最下層に位置する。大きさは前の7つの地獄よりも大きく、縦横高さそれぞれ2万由旬（8万由旬とする説もある）。最下層ゆえ、この地獄に到達するには、真っ逆さまに（自由落下速度で）落ち続けて2000年かかるという。前の七大地獄並びに別処の一切の諸苦を以て一分として、大阿鼻地獄の苦、1000倍もあるという。剣樹、刀山、湯などの苦しみを絶え間（寸分・刹那）なく受ける。背丈が4由旬、64の目を持ち火を吐く奇怪な鬼がいる。舌を抜き出されて100本の釘を打たれ、毒や火を吐く虫や大蛇に責めさいなまれ、熱鉄の山を上り下りさせられる。
これまでの7つの地獄でさえ、この無間地獄に比べれば夢のような幸福であるという、とんでもない地獄です。
問（配点ｎ点） 地獄の最深部にあるという、阿鼻地獄に到達するためには、2000年間落ち続ける必要があるという。
この時、ある罪びとが、紀元後16年に裁かれて、阿鼻地獄に落ちたとする。さて、この時、落下を始めてから２０００年後、つまり現在の落下速度は、いくつでしょう？また、この時落下した距離は、何キロメートルでしょう？ただし、重力加速度は、9.8m/sとする。ただし、空気抵抗などは考えず、基本的に物理基礎の考え方で考える。
解答1 まず、単純に、（速度）=（落下開始時の速度）+（時間）*（加速度）という、もっとも単純な計算式で考えてみよう。
すると、
$$（速度）=0+（2000\times365\times24\times60\times60）\times9.8 $$
をする。
$$\begin{align*}（速度）&amp;amp;=0+63,072,000,000\times9.8 \&amp;amp;=618,105,600,000（\mathrm{m/s}）\end{align*}$$
となる。
しかし、これは、正解とはならない。残念！
なぜならば、特殊相対性理論によって、すべての物体は、光の速さを超えないというルールみたいなものがあるので、光速つまり、$299,792,458\mathrm{m/s}$を優に超えてしまうので、まちがいとなる。
ちなみに、この時の落下距離は、いま、等加速度落下なので、
$$（距離）=（最高速度）\times（時間）\div2 $$
で求められるので、
$$\begin{align*}（距離）&amp;amp; =618,105,600,000\times63,072,000,000\div2\ &amp;amp; =38,985,156,403,200,000,000,000\div2\ &amp;amp; =19,492,578,201,600,000,000,000（\mathrm{m}）\ &amp;amp; =19,492,578,201,600,000,000(\mathrm{km})\ &amp;amp; =2,060,308.445365183（光年）\end{align}$$
※一光年を9461000000000キロメートルとする
うん。やばい距離ですね。
ちなみに、太陽系の直径は約0.000475光年らしいので、約4337490526.315789倍だそうです。わかりにくいので、太陽系を一円玉に例えると、横浜線の全長くらいになります。
つまり、とんでもなく長いということです。
解答2 次に、物体が光速に近くほど、その物体は重くなるというルールをつかって、考えてみましょう。つまり、光速に達したら、そこから早くならないという過程で計算してみましょう。
$$\begin{align*}299,792,458&amp;amp;=0+（時間）\times9.8 \（時間）&amp;amp;=30,591,067.14285714秒 \&amp;amp;\fallingdotseq509,851分 \&amp;amp;\fallingdotseq8,500時間 \&amp;amp;\fallingdotseq1年\end{align*}$$
つまり１年間は等加速度運動で以降は光速の速さで党則運動をするので、
$$\begin{align*}（距離）&amp;amp;=299,792,458\times31,536,000\div2 \&amp;amp;\quad+299,792,458\times31,536,000\times1,999 \&amp;amp;=300,000,000\times32,000,000\div2 \&amp;amp;\quad+300,000,000\times32,000,000\times1,999 \&amp;amp;=19,195,200,000,000,000,000ｍ \&amp;amp;=19,195,200,000,000,000ｋｍ \&amp;amp;=19,195,200,000\div9,461 \&amp;amp;≒2,028,876光年\end{align*}$$
やっぱりとんでもなく長い。
解答3 最後に距離から、考えてみたいと思う。仮に阿鼻地獄が地球の中心にあったとすると、もうこれは落下とは言えないかもしてないかもしてないが、日本とブラジルを地球の中心を通り、まるで、安部マリオのようにいったりきたりすると仮定すると、単振動で計算すればいいとすると、片道４２分分らしいので、$2000\times365\times24\times60\div42$で何回転するか求められる。計算すると、25,028,571周できる。この時、動く距離は、318,914,051,682キロメートルとなる。この時、マントルにぶつかってあっついとか、この計算で行くと、阿鼻地獄の入り口を25,028,571素通りすることは気にしてはいけない。
あとがき ここまで読んでくださりありがとうございました。今回は文化祭二日前に書いたため、計算ミスや誤字があると思いますが、ご了承ください。また、本当は万有引力で計算したりいなければならないところや、実験によって証明されていない、理論を使っているところがありますが、無視しています。文系の学生が作った記事なので温かい目で見てください。</description></item></channel></rss>