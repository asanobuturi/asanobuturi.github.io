<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2024年度・部誌 on 浅野学園物理部</title><link>https://asanobuturi.github.io/document/2024/</link><description>Recent content in 2024年度・部誌 on 浅野学園物理部</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 15 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://asanobuturi.github.io/document/2024/index.xml" rel="self" type="application/rss+xml"/><item><title>16×16のLEDマトリクスの制御</title><link>https://asanobuturi.github.io/document/2024/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/11/</guid><description>初めに 初めまして。中3のYです。今回が初めての部誌ですがよろしくお願いします。
私はプログラミングの経験がなかったのですが、中学生になってプログラミングに興味を持ち物理部に入りました。Arduinoというマイコンボードを用いて中1では前後に動くモーターカー、中2では8×8のLEDドットマトリクスと電子ブザーを使った作品を作ってきました。
そして今年は2色16×16のLEDドットマトリクス、つまり去年と比べ4倍の大きさで2色LEDのものを扱っていましたが、今までよりかなり制御に苦戦したので、そのことについて書こうと思います。
「LEDドットマトリクス」とは LEDについては知っている方も多いと思いますが、「LEDドットマトリクス」は知らない方も多いと思います。私も使うまで名前すら聞いたことがありませんでした。
LEDマトリクスはLEDを格子状に並べたものです。この説明だとわかりにくいと思いますが、下の写真を見れば何となく分かるかもしれません。
{width=50%}
これです。大きいサイズのものなら、駅の電光掲示板などで利用されているのを見たことがあるのではないでしょうか。
先ほど出てきた16×16のLEDドットマトリクスというのは、写真と同じようにLEDが縦横それぞれ16列ずつ並んだものです。なのでこの場合、16×16、計256個のLEDを制御することになりますが、LEDドットマトリクスならこれを少ないピン数で制御できます。つまり256個のLEDをそれぞれ制御するよりもかなり簡単な回路で制御できるということです。
苦戦した理由 今年の作品に苦戦した理由は主に２つあります。
去年と比べて部品を扱うのがかなり難しかった。 去年はMAX7219というドライバ(制御を簡単にしてくれる部品)や、それと一緒に使うことができるライブラリ(コードを簡単にしてくれるもの)を用いることで制御がかなり簡単になっていました。ですが、今年の作品に使った部品でどうすればそれらを使えるのか分からなかったので今年は使いませんでした。
また、単純にLEDの数が4倍、さらに2色になっていたので制御が難しくなっていました。具体的に言うと、制御に必要なピン数が去年のものはMAX7219によって少なくなっているのもあって5本だったのに対し、今年は48本でした。
今年扱った部品の扱い方に関するインターネット上の情報が見つからなかった。
中1、中2での作品で扱った部品では、部品の名前などをネット上で検索すれば制御の仕方が詳しく書いてある記事が簡単に見つかり、それを作品制作の参考にしていました。ですが、今年の作品に使ったLT-5016M1というLEDドットマトリクスについての記事は検索しても良さそうなものがなかなか見つかりませんでした。結局自分の部品とは少し違うものを使っている記事を参考にしたのですが、自分で配線やコードを考える必要があり、今までそのようなことがあまり無かったのもあって、かなり大変でした。
制御 ここからはどう制御したのかの話をしようと思います。ですが部誌を書いている現在、まだ完全に制御ができていません。なので誤りがあるかもしれませんが大目に見てください。
まず、このLEDドットマトリクスはアノードコモンでピンが48本あります。1~16行目にそれぞれ対応したアノードの1~16ピン、1~16列目にそれぞれ対応しているカソードのうち、光が緑色になる17~32ピン、光が橙色になる33~48ピンです。1~16行から1つずつ行で点灯させ、それぞれの行で点灯させる部分を列で光らせるのを繰り返してダイナミック点灯を行う形で制御しました。
また、本来48ピン使わなければ制御できないところを74HC595というシフトレジスタを用いることで必要なピンの数を減らしています。74HC595は3本の制御用のピンでピン8本分の制御を行えます。また、74HC595はさらにカスケード接続という、複数個の74HC595を接続する方法によってより多くのピンを制御できます。具体的には使用する数を1つ増やす増やすごとに、同じ3本の制御用のピンで制御できるピンの数を8本ずつ増やすことができます。この方法を使って48本のピンを制御しやすくしています。
まとめ このように私は今年の作品を作りました。制御方法を自分で考えるという今までとは違った制作の仕方になりましたが、作品に用いた部品の仕組みを詳しく理解できたり、制御できたときの達成感が大きかったりしたので、1、2年のときより良いやり方だったんじゃないかなと思います。なのでこれからもこのやり方でできる限りやるつもりです。
以上です。ここまで読んでいただきありがとうございました。
参考文献 LEDドットマトリクス | 大塚商会 https://www.otsuka-shokai.co.jp/products/led/knowledge/lighting/dot-matrix.html (1)回路設計 - 電光掲示板制作ノート | Mbed https://os.mbed.com/users/p4ken/notebook/LED1/</description></item><item><title>418 I'm a Teapot</title><link>https://asanobuturi.github.io/document/2024/16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/16/</guid><description>418 I'm a Teapotとは、RFC7168にて定義されているHTCPCP-TEAが返すステータスコードの一つである。それはそれとして、物理部で流行中のTea Party(tea tea)の開催の仕方を綴る。
献立 Milk
OKかセブンで買おう。 Tea Bag
English Breakfastが一押し。Assamも良い。 Cup
紙コップ。 Sugar
OKで5g*110が250円！ 開催 地学部からポット借りよう。水道水を入れて沸かし、ティーバッグを突っ込んだらティーポットが完成する。
カップに注ぎ、牛乳を入れ砂糖を入れたらTeaの完成である。
部員の夏休みの土産をお供に優雅にプログラミングをしよう。
部誌の進捗が早まること間違いなしただ。
スピーカーでJazzを流すのも乙。
来年はHTCPCP-TEAに準拠したティーポットでも作ろう。
418 I'm a Teapot</description></item><item><title>APCの部誌執筆を支える技術</title><link>https://asanobuturi.github.io/document/2024/20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/20/</guid><description>まえがき 高一の編集担当です。私は小学生の頃灘の文化祭に訪れたことがあるのですが、その際母の言われるがままにNPCA(パー研)を訪れ、訪れたら当然部誌をもらうわけですが、さすが日本一の学校なだけあっていい感じにサボる節約する術を知っており、紙媒体では抜粋したものを配り、ビラと紙媒体の最終ページにあるQRコードを読み込むことでほんちゃんの部誌をWebで読むことができるようになっています。賢いですね。
その頃私は自前のネットサーフィンができる電子端末を所持していなかった上、ゴリゴリのTech系の雑誌の類も持っていなかったため、NPCAの2019年度部誌が全てなわけで。小４の乏しい力で舐め回すように部誌を読みました。そのおかげで結構プログラミングなどに興味を持ち、今に至るわけです。その後も各地のパー研を周り部誌を漁りましたがNPCAのが一番でしたね。はい。そんなわけでこの部誌に多大な影響を受けたわけなので、タイトルでちょっとオマージュです。まぁ元ネタの元ネタもあるわけですが。
What&amp;rsquo;s new 完全にGitHubを導入してみました。NPCAはGitLabを使っているそうです。Re:VIEW(よくわからん)というものを使っているそうですが、LaTeXの環境が必要なそうで、部員が環境構築で躓かないようにCI/CDを活用しているそう。弊部はCI/CDは今ひとつと言ったところ。サイトでは使っていますが、いかんせんGitHubのCI/CDの時間制限が厳しく全部やってたら請求が飛んでくるかもしれません。
問題 多くの部員がgitとmdの落とし穴にハマってしまいました。NPCAではハンズオンをやっていたそうですが、私が夏休み忙しかった(万能言い訳)上gitとmdをよく理解している部員がほとんどいないのでそういうことはやろうと思ってもできなさそうでしたね。
良かったこととしては去年よりバラエティに富み、かつ大ボリュームな部誌になったことですね。「放射能から筋トレまでok」と連呼していたら良く転び、じゃんけんから人工言語までのラインナップ、2021年度の部誌に匹敵する100ページ弱のボリュームと相成りました。
そして最後になってしまいましたが、引き続き楽しい「物理部展#2024」と「打越祭」を！</description></item><item><title>ChatGPTで遊んでみた！</title><link>https://asanobuturi.github.io/document/2024/3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/3/</guid><description>はじめに 皆さんこんにちは中３の平部員の清水です。今年が部誌を書くのは初めてですがよろしくお願いします!
ChatGPTの説明 皆さんはChatGPTを使ったことはあるでしょうか？ChtaGPTはopenAI社が開発したAIです。最近ではゆっくり実況者などがChatGPTを使って動画を作ったり、論文をChatGPTに書いてもらう人が現れるなど名前を聞く機会が増えているのではないでしょうか。
ChatGPTの正しい使い方 ここではChatGPTの正しい使い方の一つとして自分の書いてほしい小説をChatGPTに書いてもらいます。ただし、ここで登場する人物はすべてAIが作った架空の人物なので、現実の人物とは関係ありません。 あなた:「魅力的なミステリー短編小説を作りたいと考えています。」
ChatGPT:「素敵なプロジェクトですね！どんな雰囲気やテーマで書きたいと考えていますか？例えば、現代の都市を舞台にしたものや、歴史的な背景を持つものなど、少しイメージを聞かせていただければ、物語のプロットやキャラクターのアイデアを一緒に考えるお手伝いができます。」
あなた:「おすすめでお願いします」
ChatGPT:「それでは、おすすめのアイデアをいくつかご提案しますね!(後略)」
ChatGPTの質問に答えていきできた作品がこちらです
「消えた画家の謎」 第一章: 不穏な予感 美術評論家の綾香は、久しぶりに訪れた杉本悠斗の個展会場で違和感を覚えた。キャンバスにはいつものような繊細なタッチではなく、荒々しい筆遣いと不穏な色彩が支配していた。かつての優美で幻想的な作品は影を潜め、どこか重々しい恐怖がにじみ出ている。何が彼に起こったのか？綾香は思わず立ち止まり、目の前に広がる抽象画を見つめた。
「杉本さん、これは…？」綾香はつぶやく。
しかし、杉本の姿はどこにもなかった。個展の主役である彼が、急に消えたのだ。それから数週間が経ち、彼は一度も戻ってこなかった。警察も捜査を始めたが、手がかりは全く見つからなかった。彼が残したのは、アトリエに散らばる未完成の絵と、不穏な静寂だけだった。
第二章: 暗号の絵 綾香はどうしても杉本の失踪を諦められず、彼のアトリエを訪れることにした。古い木造のアトリエには、彼の手がかりとなるものがあるはずだ。部屋に入ると、キャンバスがいくつも立てかけられていた。その一つに、綾香は特別な目を留めた。最後に彼が描いていたという絵だ。
キャンバスには、いくつもの幾何学模様が描かれていた。それは一見すると意味のない配置に見えたが、綾香の目には何かメッセージが隠されているように感じられた。中央には曲がった時計のようなものがあり、赤い線がその周りを取り囲んでいた。
「これが、何かの手がかり…？」綾香はそう呟きながら、絵を注意深く観察した。
その時、彼女はあることに気付いた。時計は午後1時を指していたが、その時間は異常だ。何か意味があるに違いない。さらに、赤い線はランダムに引かれているように見えたが、じっくり見ると地図のように見えた。綾香は、街のどこか特定の場所を示しているのではないかと考えた。
第三章: 時計塔へ 赤い線が示す場所、それは古びた時計塔だった。綾香はその場所に向かう決心を固めた。時計塔はかつて芸術家たちが集まる場所だったが、今では忘れ去られたように寂れた雰囲気を漂わせていた。重々しい扉を開けると、古びた階段が地下へと続いている。杉本の絵が指し示した場所は、どうやらこの地下に隠されているようだ。
綾香は息をのみながら、暗い階段を一歩一歩降りていった。地下には、かつてのアトリエが残されており、その中心には杉本が失踪する前に描いたスケッチブックがあった。綾香は震える手でそれを開き、ページをめくると、彼の狂気に満ちた筆跡が目に飛び込んできた。
「彼が逃げていたのは、この人物か…」綾香は、スケッチに描かれた謎の人物を見つめた。それは、かつて彼が信頼していたパトロンの姿だった。しかし、そのパトロンはただの支援者ではなかった。彼は、杉本を支配し、彼の創造力を搾取しようとしていたのだ。
第四章: 真実の闇 綾香は、全てを理解した。杉本は、自分の才能を狙うパトロンから逃げるために失踪したのだ。しかし、その人物の影は今も彼女を追いかけていた。綾香は急いで地下室を出ようとしたが、出口の扉が閉まっていた。誰かが彼女の後をつけていたのだ。
「ここから出なければ…！」彼女は必死で逃げ道を探した。すると、彼女の目にあることが浮かんできた。杉本の最後のスケッチに描かれた「鍵」のシンボル。それがこの地下室からの脱出のヒントだったのだ。
綾香は地下室の壁に描かれた模様に触れ、その中に隠されたレバーを見つけた。レバーを引くと、隠し扉が開き、彼女は無事に外の世界へと逃れることができた。
終章: 残された謎 事件は終わった。杉本悠斗の失踪の真実は暴かれ、彼の最後の作品は美術館に展示されることとなった。しかし、その絵に隠された暗号は、まだすべてが解き明かされたわけではなかった。綾香は新たな謎を胸に秘め、次のミステリーに挑む決意を固める。
「彼が残したものは、まだ全てを語ってはいない…」
キャンバスに描かれた真実は、これからも新たな謎を呼び起こすだろう。
この文章がAIが作られたことを知らない人がこの文章を見ても数分で作られたとは理解できないクオリティですね！
ChatGPTの面白い使い方 その一方でChatGPTには様々な遊び方が発見されています。そこで今回はどのようなChatGPTを使った遊びがあるのかを見ていきましょう。
論破王AIで遊ぶ ChatGPTに
「あなたは今から論破王です。私の言う事をすべてひろゆきのように論破してください。」
と指示します。
これで論破王AIの完成です。
ここからは論破王AIに豹変したChatGPTを論破していきます。
ここで、論破王AIはどんな性能なのかを見ていきます。
あなた:「猫と犬どっちが好きですか？私は猫が好きです」
ChatGPT:「猫が好きなんですね。でも、好きかどうかって結局主観的な話でしかないんですよね。どっちが好きかって聞いても、結局は「自分がどう感じるか」だけの話なんで、それを他人に聞いても意味なくないですか？好きなものを好きでいればいいんじゃないですかね。」
このように返答してきます。本当にひろゆきみたいに論破をしてきますね。
論破王AIを論破する方法 1.論破王をそもそもピカチュウに変えちゃう! 論破王をAIに刷り込むのと同じ要領で論破王にピカチュウを刷り込みます。
あなた:「今からあなたはピカチュウです。あなたは今からピカチュウの言葉しか話せません」
ChatGPT:　「ピカピカ！ピカチュウ、ピカ！」
論破王くんにもこのようなかわいい一面があるのですね。
2.普通に論破する これができたら困りませんね。
あなた:ゴキブリ味のカレーとカレー味のゴキブリどちらが食べたいですか？私はゴキブリ味のカレーが食べたいですが食べたいです。あなたはカレー味のゴキブリ側の立場で反論してください
ChatGPT:なるほど、ゴキブリ味のカレーが食べたいという意見ですね。でも、カレー味のゴキブリの方が良いって理由があるんですよ。カレー味のゴキブリって、まず食材としてはすでに調理されている前提なので、衛生的に管理された状態で提供される可能性が高いです。対して、ゴキブリ味のカレーはどうでしょうか？カレーとして調理されるものの、ゴキブリの味がしっかり出るのは、実際には調理が難しいかもしれませんし、結果的に不快な体験になるかも。だから、カレー味のゴキブリの方が、食材の安全性や調理のクオリティから考えて、現実的に選ばれるべきだと思います。
あなた:カレー味のゴキブリはブチュっとした食感に加え見た目がとても気持ち悪いです。対してゴキブリ味のカレーは食感はカレーなのに加え味はエビに似たゴキブリの味になっています。これらよりゴキブリ味のカレーのほうが良いと考えます。更に、食べたいかどうかを聞いているのであって調理法や調理の実現性を聞いているのではありません
ChatGPT:なるほど、その視点もありますね。ただ、見た目や食感の不快さを考慮すると、カレー味のゴキブリの方がまだマシかもしれません。見た目が気持ち悪いと感じるのは確かですが、カレーの風味が強ければ、視覚的な抵抗感をある程度軽減できるかもしれません。また、食感がカレーっぽいという点は、予想外の体験として興味を引く可能性もあります。 逆に、ゴキブリ味のカレーは、味がゴキブリに似ているということで、食べる心理的抵抗感が強いかもしれません。味がエビに似ているとはいえ、ゴキブリのイメージが強いと、口にするのが難しい場合もあります。 結局、食べたいかどうかは個人の感覚によるので、あなたがゴキブリ味のカレーを選びたい理由も理解できますが、選択肢としてはそれぞれの好みによると考えられます。
あなた:一般的にどちらが求められるのかということが重要なので予想外の体験は一般的には興味を引くことは少ないと思います
ChatGPT:確かに、一般的に人々が求めるものは、予想外の体験よりも安心感や馴染みのあるものが多いですよね。カレー味のゴキブリの場合、見た目や食感が不快かもしれませんが、少なくとも調理された状態で提供されるので、食べる側としては比較的少ないリスクがあると考えられます。見た目が気持ち悪くても、実際の味や食感がカレーに近いということで、抵抗感をある程度和らげられるかもしれません。 一方で、ゴキブリ味のカレーは、味がエビに似ているとしても、そのゴキブリ感が心理的に大きな抵抗となる可能性が高いです。一般的には、「ゴキブリ味」と聞くと、それだけで拒絶反応を示す人が多いので、結果的に食べたいという意欲が低くなるかもしれません。人々が一般的に求めるのは、安心感や馴染みのある体験なので、やはりカレー味のゴキブリの方が受け入れられる可能性が高いと考えられます。
あなた:カレー味のゴキブリは実際にゴキブリなので食感はゴキブリです</description></item><item><title>sinの近似値を求めよう！</title><link>https://asanobuturi.github.io/document/2024/15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/15/</guid><description>はじめに 私は今回初めて部誌を書くのですが、マクローリン展開がとても面白いと思ったので今回書いてみました。できるだけ、数学が分からない人でも読んでマクローリン展開の面白さや凄さが伝えられるようにしたいと思います。
さて、これから色々な数式が出てくるのですが、最初に出てくる記号等の補足を入れたいと思います。知っている人は読み飛ばしてください。
$f(x)$とは、$x$の関数を意味しています。
$sum_{k=0}^a f(k)$とは、$f(k)$において$k=0$から$a$まで代入したときの総和を表しています。なので、 $sum_{k=0}^a f(k)=f(0)+f(1)+\ldots+f(a)$ ということになります。$f^{(n)}(x)$とは$f(x)$の第$n$次導関数を意味していて、$f(x)$の$n$階微分ともいいます。 $n!$とは非負整数(負ではない整数つまり$0,1,2,\ldots$)$n$に対して$1$から$n$までの積の値で、$n$の階乗です。つまり、$n! = 1 \times 2 \times 3 \times \ldots \times n$となります。($n$の階乗もガンマ関数で定義することで非負整数から正の実数まで拡張することができ、面白いのですがここでは取り扱いません)
区間$[a,b]$とは閉区間$[a,b]$ともいい、a以上b以下の数の集合です。
マクローリン展開とは？ $$f(x)=sum_{k=0}^{\infty} f^{(k)}(0) \frac{x^k}{k!} \cdot (1)$$ 上の式は無限回微分可能で右辺の級数が収束するような関数$f(x)$について成立する式です。
マクローリン展開とはこの式において、$f(x)$を左辺のように展開することです。この無限級数を途中まで計算すると、多項式になり$f(x)$を多項式で近似することができます。マクローリン展開の面白いところは、複雑な関数で表された曲線を多項式で近似できるところです。
sinxを実際にマクローリン展開してみる ①だとよく分からないかもしれない人もいるかもしれないので、まず①の右辺の級数を展開をしてみましょう。 $$f(x)=f^{\prime}(0) \frac{x}{1!}+f^{\prime \prime}(0) \frac{x^2}{2!}+f^{\prime \prime \prime}(0) \frac{x}{3!}+\ldots$$
と、右辺はなっています。
ここで、$\sin x$の$n$階導関数を求めると、 $$ \sin^{(n)}(x) = \begin{cases} \cos(x) &amp;amp; \text{n = 1, 5, 9&amp;hellip; のとき} \ -\sin(x) &amp;amp; \text{n = 2, 6, 10&amp;hellip; のとき} \ -\cos(x) &amp;amp; \text{n = 3, 7, 11&amp;hellip; のとき} \ \sin(x) &amp;amp; \text{n = 4, 8, 12&amp;hellip; のとき} \end{cases} $$</description></item><item><title>かの邪智暴虐なAlphabet Inc.を除こう</title><link>https://asanobuturi.github.io/document/2024/17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/17/</guid><description>まえがき 生活に不便を感じたらその不便さをwrapするためにラッパライブラリ等を作ることが私のプログラミングの動機となることが多く、
写真を写真.appで管理していたがPythonなどのスクリプトを使った一括編集などが難しいためDjangoを用いて自作 画像の変換が右クリメニューからできるソフトがあるのだが.avifや.webpなど次世代形式に対応していないため自作 SNSの交換の際にQRコードそのものが送られてくることが多々あったので画面上のQRコードを読み取りクリップボードにコピーするソフトを自作 マイクラ鯖のrconが生では使いにくすぎたのでDjangoでラッパを自作 などのツール系の自作が多くくも、去年はPC98でマインスイーパを自作しその続きをやろうと思っていたが、文化祭片付け後にPC98が死亡していたためジョークRFCのパロディでも書こうと思っていたのだが面白さがイマイチ伸びなかった上PC98を秋葉原最終処分場。で二台購入し動作確認もしたためPONGでも作る気概であったけれども夏休みが多忙を極めていた挙句外が暑すぎて部活に行きたくなかったので簡単に作れそうな
Google Mapのlocation-history.jsonを解析して地図に表示するツール を自作することとした。
献立 実行されたらオプションを解析、不足しているなら対話シェルを呼び出しユーザに情報を求める。その後はデータを解析しブラウザに表示し待機、ブラウザのタブが閉じられたらプログラム終了となる。また、急いで製作したものであるので、大半が「なんか知らんけど動いた」ゾーンに属していることを留意してもらいたい。
util.py, logger.py ベクトル計算の支援を主とするライブラリとロギング用のライブラリを自作して使用している。util.pyにて定義されているVectorついて解説すると、Vectorは四則演算が大体行列計算と同じものとなる。ただし、乗算は横ベクトルと縦ベクトルの積として計算される。つまりVector(a,b)*Vector(x,y)=Vector(ax,by)となり、除算もこれに倣う。logger.pyは、ほぼ想像できるような内容しか書かれていないので深くは解説しないが、StreamHandlerとFileHandlerで標準入出力とファイルにログを流している。
解析 location-history.jsonはactivity,timelinePath,visitの三種類うちどれか一つを持つデータの配列であり、activityは移動手段と移動元/先の座標、timelinePathは移動時のパス、visitは訪れた定点と訪れた時間帯が記録してある。今回移動手段はあまり気にしていない上Googleの推測が精度を欠いており、海上を車で移動していたりするので移動はtimelinePathを採用した。
座標は全て&amp;quot;geo:&amp;lt;lat&amp;gt;,&amp;lt;lng&amp;gt;&amp;quot;という形式で記録されていたので、geo_resolver関数を作成し効率化を図った。
main.py 28 29 30 31 32 33 def geo_resolver(text: str) -&amp;gt; Vector[float, float]: &amp;#34;&amp;#34;&amp;#34; &amp;#34;geo:lat,lng&amp;#34; -&amp;gt; (lat, lng) &amp;#34;&amp;#34;&amp;#34; return Vector(map(float, text[4:].split(&amp;#34;,&amp;#34;))) また、データの特性上(datetime, (lat, lng))という形式のオブジェクトを扱う機会が多いのでNamedTupleを利用してリーダブルなコードにした。
main.py 19 20 21 class Visit(NamedTuple): dt: datetime.datetime pos: Vector[float, float] markers辞書は同じ座標のmarkerが重なって読めないという事態を防ぐために座標をキーにした辞書型で格納しその後forを回してfolium.Mapに載せている。座標をキーにする際に処理を簡潔に.append()で済ませるためにdefaultdictを使用した。
main.py 155 markers = defaultdict(list) 169 markers[&amp;#34;,&amp;#34;.join(list(map(str,p)))].append(tooltip) 187 188 for pos in markers: folium.Marker(tuple(map(float, pos.split(&amp;#34;,&amp;#34;))), tooltip=&amp;#34;,&amp;#34;.</description></item><item><title>じゃんけんの必勝法</title><link>https://asanobuturi.github.io/document/2024/6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/6/</guid><description>はじめに 中三のIです。八月も終盤に差し掛かり夏休みも残り一週間を切りました。まだ宿題は全然終わっていません。そういえばこの間、優先席に座っている親子が「じゃーんけーんぽーいぽーいどっち出すの？こっち出すの！」ってやつをやっていました。しばらく観察しているとふと思いました。このゲームにはこのゲームには必勝法があるのではないかと（この時の僕はずっと優先席に座っている親子を睨んでいる変な奴みたいに第三者の目に映ったかもしれません）。
ルールの説明 わからない人のため一応ルール説明をします。 「じゃーんけーんぽーいぽーいどっちだーすの？」と言って一つ目の「ぽーい」のタイミングに片方の手を出し二回目の「ぽーい」でもう片方の手を出します。「こっちだーすの」と言って「こっち」のタイミングでどちらか片方の手を出します。その時に出した手でじゃんけんの勝敗が決まります。
相手と自分の手の組み合わせ「相手のどちらの手にも引き分け以上を狙える手と相手が引き分け狙いで出してきた手に出すと勝てる手」「相手の片方の手を出されると引き分け以下が確定する上に、引き分けを狙って出した手に勝つ手を相手が持っている」「確定であいこになる」「確定で勝つ」「確定で負ける」の五つがあります。一つ目から順番に「自分が有利」「相手が有利」「確定あいこ」「確定勝ち」「確定負け」と呼ぶことにしましょう。確定勝ちと確定負けは明らかにプレイミスです。確定あいこと確定勝ちの中にはあいこまたは負けになりたければたければなれるものも含まれます。
考え方 自分の最初の手をグーに固定して、相手の手のパターンは3x3=9通りなので一つ一つ何を出せば自分が有利か確定勝ち、無理なら確定あいこに持っていけるか考えていきましょう。次の1~9の中に何を入れれば勝ちやすいかを考えましょう。
一つ目 二つ目 一つ目 二つ目 一つ目 二つ目 相手 自分 1 2 3 相手 自分 4 5 6 相手 自分 7 8 9 1~9で出すべき手は
二つ目にパーを出せば絶対に勝てますが、何を出しても必ずあいこに持ち込むことができます 何を出してもグーを出せば勝てるのでなんでもいいです グーを出せば確定負け、チョキを出せば相手が有利、パーを出せば確定あいこ、よってパーが安定 グーを出せば勝てるので何でもよい グーを出せば勝てるので何でもよい グーを出せば確定負け、チョキを出せばこちらが有利、パーを出せば相手が有利、よってチョキが安定 グーを出せば確定負け、チョキを出せば相手が有利、パーを出せば確定あいこ、よってパーが安定 グーを出せば確定負け、チョキを出せば自分が有利、パーを出せば相手が有利、よってチョキが安定 グーを出せば確定負け、チョキを出せば確定勝ち、パーを出せば確定あいこ、よってチョキが安定 結論 初手の自分の手をグーに固定した場合 相手の初手が
グーの場合二つ目の手にパー
チョキの場合二つ目の手にチョキ
パーの場合二つ目の手にパー
のように出すのが最も安定します。ですが一つ目を出してから二つ目を出すまでの時間は結構短いので少し難しいかもしれません。
普通のじゃんけん じゃんけんぽいぽいなんて日常生活でやる機会ほとんどないと思うので普段からやるであろう普通のじゃんけんの勝ち方も考えましょう。
必勝法とは じゃんけんというゲームはグーはチョキに勝ち、パーはグーに勝ち、グーはチョキに勝つというルールで勝率は1/3なので必勝法などないように思われますがそれをやるのは人間なので出す手に偏りが生まれたり、心理的な戦略や駆け引きで自分の勝率を上げることはできます。ここに書いてあるものには本当かどうか怪しい物もありますが信じるか信じないかは信じるか信じないか次第です。
最初はパー 形を作りやすい、見た目が強そうなどの理由で最初はグーを出す人が多いそうです。なので最初にパーを出すとよいでしょう。ただし、最初はグーと言ってからじゃんけんした場合同じ手を連続で出したくないという思いからチョキとパーの確率が上がります。
時間をかけてチョキ 相手に時間を与えてからじゃんけんするとよく考えるためグーを出す確率が減りチョキとパーの確率が上がるためチョキを出すとよいでしょう。
あいこには負ける手 人は同じ手を連続で出したくないのであいこになった場合、あいては出した手とは別の手を出したいです。なのであいこになった手に負ける手を次に出せばまくる確率は低くなります。
チョキは例外 チョキのあいこの場合、チョキからグーを作りにくいため次にグーを出す確率が低いのでパーを出す確率が高いです。なのでチョキのあいこの次はチョキを出しましょう。
拳読 「最初はグー」で始めた場合グーチョキパーの手はグーから作られるため少しでも手が開いたのを確認したらチョキを出す、とすれば負ける確率は格段に低くなります。ただ、これは後出しになって反則負けになるリスクがあるのであまり推奨できません。
宣言 「俺グー出すから！」みたいなやつです。それで宣言したとおりにすれば勝てることもありますし相手によってはうそをついたほうが勝てることもあります。ただ裏の裏、裏の裏の裏、裏の裏の・・・・・みたいなこともあるのであまり正確ではないです。
上級者にグー ここに書いてあるような戦術を見ればわかる通り戦略を使うとチョキの割合が増えます。なので戦略を使うような相手であればグーを出せば勝率が上がります。
とりあえずパー 実際に出る手の割合グー、パー、チョキの順番に低くなります。なので困ったらパーを出しましょう。
まとめ ここにある必勝法を使っても確実に勝てるわけではないです。注意して使ってください。結局これが最強です。
参考 じゃんけんぽいぽいの基本的な考察 - 未定はいけないものを https://sinzyotoku.</description></item><item><title>すもももももももものうち</title><link>https://asanobuturi.github.io/document/2024/14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/14/</guid><description>今年は「マルコフ連鎖」というものを使って文章を生成する上での基礎のような部分について語ろうと思います。一応去年の続きです。
1,マルコフ連鎖 Wikipediaによれば、”確率過程の一種であるマルコフ過程のうち、とりうる状態が離散的なもの”を指すらしいです。何を言っているのかさっぱり分かりません。ただしこれは数学的な定義で、今回使うのはこれを利用した「マルコフ連鎖モンテカルロ法」と呼ばれるものなのでこの定義は分からなくても問題ありません。
2,マルコフ連鎖モンテカルロ法 今日が晴れの場合明日は6分の1の確率で雨、3分の1の確率で曇り、2分の1の確率で晴れになるとします。今日が雨や曇りの場合もこのようにしていけば、現在の状態のみで未来の状態を確率的に求めることができます。これがマルコフ連鎖モンテカルロ法です。以後の「マルコフ連鎖」はこれのことを指します。
3,形態素解析 文字列を言語の最小単位の形態素に分解し、それぞれの品詞などを判別する手法のこと。例えば「すもももももももものうち」という日本語ネイティブの私たちでも初見では読めないような文章を形態素解析すると
すもも　名詞,一般・・・・すもも,スモモ,スモモ
も　助詞,係助詞・・・・も,モ,モ
もも　名詞,一般・・・・もも,モモ,モモ
も　助詞,係助詞・・・・も,モ,モ
もも　名詞,一般・・・・もも,モモ,モモ
の　助詞,連体化・・・・の,ノ,ノ
うち　名詞,非自立,副詞可能・・・・うち,ウチ,ウチ
このような結果が出てきました。文明の利器は良いですね。
具体的な文章生成の流れ 文字列を形態素解析し、マルコフ連鎖を利用して文章を生成する。「私は本を買う」「私は家具を買う」の2つの文章でやってみます。
まずは2つの文を形態素解析して、「私　は　本　を　貰う　。」「私　は　家具　を　買う　。」とパーツに分けます。
次にマルコフ連鎖を利用します。「私」の次に来る可能性があるのは「は」だけなので「私は」は確定です。「は」の次には「本」または「家具」が2分の1ずつの確率で選ばれます。ここでは本が選ばれたことにします。「本」の次は「を」が確定、「を」の次は「貰う」または「買う」の二択です。このようにしていくといくつかの文章が作れます。
基本的には、文章を分かち書き→確率で次の文字を決定という流れを繰り返していけば参照する文章の数がいくら増えたとしても文章を生成することは可能なわけです。
4,メリット 楽しい
5,デメリット 確率を利用して機械的に実行するのでめちゃくちゃな文章が生成されることがある。
例えば「私はパンを食べる」と「私はラーメンをすする」の2つで実行する場合、「私はパンをすする」などという文が出てくることもあるわけです。すするな。色々調べてみましたがこれを解決する方法は無さそうです。
終わりに 今回は私の理解が及ばず実際に作成するところまでたどり着かずに基本的な考え方を紹介するにとどまりましたが、来年にはきっと実物ができているはずです。来年まで待ち切れない方や来年もどうせできてないだろうという方は是非”校長先生の話エンドレス”と検索してみてください。去年打った布石を回収しきれないまま今年も布石を打つという悲しい事態になってしまいましたが、ここまで読んでいただきありがとうございました。</description></item><item><title>とあるアニメ映像作品の戦闘シーンについて</title><link>https://asanobuturi.github.io/document/2024/2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/2/</guid><description>※この部誌を読むまえにできればyoutubeで該当シーンを確認してから考察を読んでください。短いシーンなのですぐに視聴できます。検索するシーンは①に書いてあります。
はじめに こんにちは中2部員Aです。今回は私の好きな機動戦士ガンダム0080 ポケットの中の戦争（きどうせんしがんだむダブルオーエイティポケットのなかのせんそう）というアニメ映像作品の中の戦闘シーンについて考察していこうと思います。今回行う考察は劇中に書かれた情報などから考察するものではなく、自分で事実関係を確認しながら登場人物の考えを推測していくものとなります。また、この記事は完全に個人の意見や考えなのでご了承ください。
1. 従来の説 今回考察するシーンは、先程述べたアニメの第4話「河を渡って木立を抜けて」というお話の戦闘シーンです。「ケンプファー　アレックス　戦闘シーン」とyoutubeで検索していただければ出てくると思います。この第4話では、ジオン軍（この作品ではどちらかといえば主人公サイド・他のガンダム作品では敵サイドのことが多い）の機動兵器であるMS（モビルスーツ）の新型、「ケンプファー」が連邦軍（この作品ではどちらかといえば敵サイド・他の作品では主人公サイドのことが多い）の新型MS「ガンダムNT-1アレックス」の鹵獲・撃破のために出撃し、ケンプファーが一つの小隊を壊滅させた後、この2体のMSが交戦することとなります。この時点でアレックスはチョバムアーマーという増加装甲をまとっており、攻撃力が貧弱です。対するケンプファーはアレックス撃破のためにショットガン、バズーカを始めとした、大量の武装を装備しています。ケンプファーはパイロットが登場していなかったアレックスに対してバズーカを打ち込みますが、着弾寸前でパイロットが乗り込み、避けられてしまいます。その後アレックスは必死に応戦しますがチョバムアーマーを装備しているため使用可能な武装が限られており、苦戦を強いられます。ですがその後ケンプファーの攻撃によってチョバムアーマーが破壊され、無傷の本体が露出します。チョバムアーマーが解けたことによって腕部のガトリング砲を使用可能になったアレックスは、もともと機動力を向上させるために装甲を薄くしていたケンプファーをガトリング砲で攻撃し、そのまま撃破します。
2. 今回新しく考えた説 ここからは新しく考えた説です。先程の従来の説を実際のシーンと合わせて見てみると、この説明の中で完全に事実と言えるのは、ケンプファーが出撃→小隊を壊滅→アレックスと交戦→鎖状の地雷によってチョバムアーマーを破壊→アレックスのガトリング砲によってケンプファーが撃破という流れだけです。また、ケンプファーのパイロットにアレックスを鹵獲・破壊するという意図があったことと、アレックスのパイロットに応戦の意図があったこともわかります。ではアレックスが「チョバムアーマーが解けたことによって腕部のガトリング砲を使用可能になった」ということは本当だったのでしょうか。一般的に兵器を作る場合、せっかく搭載した兵器を増加装甲によって封じるということは考えにくいです。また、脚部についた「スラスター」と呼ばれる推進装置もチョバムアーマーを装備した状態で使用できるようになっており、スラスターとガトリング砲で仕様が異なっていることは考えにくいです。ここから私は「パイロットはガトリング砲は使えたものの、いろいろな理由から使用しなかった」と考えました。ではなぜ使用しなかったのか。私は、「ケンプファーに武装を使用させるためだった」と考えています。ケンプファーの大量の武装はとても対MS戦用と思える量ではなく、普通に考えればケンプファーの狙いはアレッㇰスではなくアレックスを開発していた研究所やその周辺の市街地だとするのが妥当です。また、チョバムアーマーはただの装甲ではなく敵の攻撃を受けながらわざと破壊されることで本体へのダメージを軽減するというものだったのですが、まだ試作段階だったので試験にも最適だったわけです。これらの理由から、パイロットはチョバムアーマーを装備していて機動力の低い状態で相手の攻撃をモロに受けながら武装を使い、下手に弾を使い切ってしまうよりは、試験も兼ねてチョバムアーマーを使い、ケンプファーの戦闘力を落としてから一騎打ちに持ち込もうと考えたのではないかと私は思います。何よりアレックスは試作機であり、乗っていたのはテストパイロットだったのでそこまで技量が低い訳では無くチョバムアーマーを破壊されるまで何もせずにいることはないと考えられます。
おわりに 今回は僕の好きな作品の戦闘シーンについて考察してみました。この記事を読んでるみなさんも実際にシーンを見て共感してもらえていれば幸いです。今回僕は初めてこのようなアニメの考察をしたのですが、とても楽しく他の作品も考察してみたいと思いました。ここまで読んでくださりありがとうございました。</description></item><item><title>ネットスラングを分類してみる</title><link>https://asanobuturi.github.io/document/2024/4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/4/</guid><description>あいさつ 夏休みに１日中𝕏を見て過ごして感じた𝕏特有の表現方法(以下スラング)ついてまとめてみたくなったので、書いていく。
※注意　筆者のフォロワーの投稿を参考にしているため、紹介する文法が偏ってしまっている。
そもそもスラングとは 日常生活の中で行われる一般的な会話の中で用いられないような文法のこと、と私は定義している。
この記事では主に文法について例文と共に解説していく。
～で顔無い 焦り・後悔・絶望などの負の感情を表す。
合わせる顔が無い、感情が重すぎて真顔になっている、などが由来と思われる。
ちなみに、現代の弱者男性を揶揄していると言われているカオナシと関連があるのではないか、と最近新説が提唱された。
(例)　模試で偏差値50切って顔無い
余談だが「カオが鈍器」という曲もある。
～して鬱 憂鬱な気持ちを表す。
ネット特有の過度に強調する文化が現れている。実際は鬱になっていない
(例) 眼の前で電車逃して鬱
～で今これ 主に、自らに起こった出来事を文章で表し画像で結果を比喩して伝える文法。
短い文章と画像を用いることで読み手の理解を早めることができ、またコミュニティ内での共通認識のあるメディアを用いることで類似性バイアスの効果を得ることができる。
(例)　残業終わって今これ
{width=50%}
はやくこれになりたい 理想の姿を表す画像とともに用いられる。
(例) はやくこれになりたい
{width=50%}
優勝 最高に楽しんだ感情を表す。
ゲーム対戦界隈で主に用いられる。
(例) 二次会優勝した
{width=50%}
~はいいぞおじさん ～はいいぞおじさん「～はいいぞ」、という形で用いられる。
好きな作品を勧めたいが、ネタバレを避けるため内容には触れられない際に使われることが多い。
(例) ゴジラ-1.0はいいぞおじさん「ゴジラ-1.0はいいぞ」
～で横転 驚愕の感情を表す。
転ぶくらい驚いたというネット特有の過大に表現する文化が現れているのだろうか。
(例)　吉村家美味すぎで横転
名詞、～なんだよな 最初に文章の話題を示し、その後に自らの見解を表明する文法。
𝕏は1回の投稿で140文字までしか文章を書けない故、できるだけ短い文章で意見を発信しようとしていると一般的に言われている。
(例)　新子安駅、周辺に何もなさすぎるんだよな
総評 ほとんどのスラングに、それが生まれた背景がきちんとあるということが見られた。
日常会話で用いる文法とは異なり、字数が限られ文字情報しか伝えることができないという環境の下、それに適応し発展していったのだろうと思う。
実際の方言も環境に適応した結果生まれているものがいくつか見られる。
例えば、寒冷地の方言では「んだ」などの濁音が多いが、これは外の冷たい空気をできるだけ吸わないようにするため、口を大きく開けずに会話して生まれたという説がある。
つまり、ネットスラングもある種の方言であると言えるのではないだろうか。
ここで書いてきたことは勿論日本のスラングであるが、英語圏でのlol(笑いを意味するスラング)のようにそれぞれの言語圏・コミュニティでスラングが発展していっている。
グローバル化が叫ばれる中、このようなスラングも取り入れたら面白いのかも知れない。
おまけ この記事を読んでスラングに興味を持った人に以下のYouTubeチャンネルを紹介
琴葉ggr姉妹 - YouTube https://www.youtube.com/@KOTONOHAggrSISTERS このチャンネルでは様々なスラングやネットミームなどを毎日short動画で解説している。
現状900本以上の動画が投稿されているので、興味のある人は見てほしい。</description></item><item><title>パソコンの構造について</title><link>https://asanobuturi.github.io/document/2024/13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/13/</guid><description>はじめに こんにちは、中３笈摺です。初めての部誌ですがよろしくお願いします。 今回この部誌を書いた理由は他の部員がパソコンでプログラムしているのを見て、構造はどうなっているのか気になったからです。
ノートパソコンの大まかな構造 まず、パソコンには大きくわけ5つこ重要な部分があります。
CPU 1つ目にCPUとは「Central Processing Unit」をコンピューター内でデータを処理するための、さまざまな命令を実行するパーツです。これらの命令は、プログラムによって指示され、データの操作や計算、制御などの機能を実行します。例えば、Webブラウザを開いたり、ゲームをプレイしたりする際には、CPUが命令を受け取り、適切な処理を行います。 CPUの性能は、クロック周波数、コア数、キャッシュサイズなどによって決まります。高性能なCPUは、複雑な処理や大量データを高速かつ効率的に行うことができます。 CPUは性能に応じてメーカーごとに複数のシリーズが用意されており、例えば INTEL社 の場合は Pentium、Core-i 、Xeon 、 AMD社 では Athlon、Ryzen などが有名です。 今回解体するパソコンはcore-i3のパソコンです。
メインメモリ 次にメインメモリは、CPUが実行したいプログラムやデータを格納する場所で、人間の脳の記憶部分に相当します。
メインメモリは、ワードやエクセル、ブラウザなどのアプリケーションが実行される際に、それらのプログラムやデータを格納する場所として使われます。複数のアプリケーションを同時に利用する場合、それらに対応したメモリ容量が必要となります。メモリ容量が不足すると、パフォーマンスの低下やシステムの不安定化が起こる可能性があります。 多くのパソコンは8GBや16GBなどといった容量のパソコンが多いです
チップセット チップセットは、 CPUと周辺装置の間でデータをやり取りするためのパーツで、人間の脊髄に例えることができます。
脊髄は、神経が手や足などの身体の各部位に広がる中枢神経系の一部であり、情報の伝達や処理を担当しています。同様に、チップセットは、コンピューター内で周辺装置とのやり取りを行うための役割を果たします。
例えば、USBに接続されたハードディスクからデータを読み取りたい場合、CPUはチップセットに信号を送信します。チップセットは、その信号に応じてハードディスクからデータを読み取り、読み取ったデータをCPUに返送します。 このように、チップセットはコンピューター内の各部位や周辺装置との通信を仲介し、データのやり取りを可能にします。この役割は、人間の脊髄が身体の各部位と脳との間で情報を伝達し、体の動作や感覚を調整することに似ています。
ビデオチップ（GPU） ビデオチップは、GPU（Graphic Processor Unit）とも呼ばれ、液晶モニタへの表示を担当するパーツです。かなり無理やりですが、人に例えると「手の神経」でしょうか。
手の神経は、脳からの指示を受けて手の動きを制御し、物をつかんだり操作したりするために必要です。同様に、 GPUはコンピューターのグラフィックス処理を担当し、液晶モニタに画像や動画を表示するための情報を処理します。
チップセットとの違いは、チップセットが周辺装置全般に関するものであるのに対して、GPUは液晶モニタの表示を専門に担当するパーツであることです。言い換えれば、GPUは コンピューターの「視覚」を担当し、ユーザーがコンピューター上で見ることができるすべての画像や動画を制御します。 ただし多くのCPUにはGPUが内蔵されていることが多いです。 また、今回のパソコンにはGPU単体は搭載されておらず、CPU内臓のGPUとなっています。
ストレージ ストレージは、コンピューター内でデータを保存するためのパーツの総称です。主なストレージデバイスには、ハードディスク、SSD（Solid State Drive）、MMC（MultiMediaCard）のほか、DVDドライブやUSBメモリなどが含まれます。
まとめ 今回は、 ノートパソコンの内部構造や各部の役割について解説しました。
まず、ノートパソコンの基本構成について説明し、その後、主要パーツの役割について詳細に解説しました。水晶発振器やCPUなど、それぞれのパーツがどのような役割を果たしているかを説明しました。ここまで、読んでいただいてありがとうございました。
{width=100%}
引用 知っておきたいノートPCの仕組み（構成） | それ、早く言ってよ！初心者向けノートパソコン選びの基礎知識 https://note-pc-select.resanaplaza.com/2024/04/29/ノートパソコンの仕組み（構成）/</description></item><item><title>マルコフ連鎖で名言を作ろう</title><link>https://asanobuturi.github.io/document/2024/5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/5/</guid><description>はじめに 中学３年生のIです 初めての部誌ですがよろしくおねがいいたします。
マルコフ連鎖って？ マルコフ連鎖とは、
マルコフ連鎖（マルコフれんさ、英: Markov chain）とは、確率過程の一種であるマルコフ過程のうち、とりうる状態が離散的（有限または可算）なもの（離散状態マルコフ過程）をいう。また特に、時間が離散的なもの（時刻は添え字で表される）を指すことが多（略） 何を言っているのかまるでわからないので要約すると、
{width=100%}
こういう感じで文章を作って名言を作ろうという内容です。
最低限の環境を整えよう！ まず私が行ったのはプログラミングができる環境を作ったことです。
必要なもの python（生活必需品） Mecab（文章を分けたりしてくれる） 辞書 こいつらを入れたら、 試しに使ってみましょう！！ 私の場合はWindows 10だったためWindows 10以外の人はできないかも知れません。 まずコマンドプロンプトを開いて、
1 2 pip install mecab-python3 pip install ipadic をしてあげてMecabのインストールをしてあげます（辞書がない場合は個別に入れてね）。
使ってみよう 最低限の環境を整えたら本当に入ってるのか確認するためにMecabを使ってみましょう！！
1 2 3 4 import MeCab tagger = MeCab.Tagger() print(tagger.parse(&amp;#34;すもももももももものうち&amp;#34;).split()) を打ち込んだファイルに.pyをつけてpythonファイルにしてあげて実行する。 そうすると、 こんなかんじになります。
1 [&amp;#39;すもも&amp;#39;, &amp;#39;名詞,一般,*,*,*,*,すもも,スモモ,スモモ&amp;#39;, &amp;#39;も&amp;#39;, &amp;#39;助詞,係助詞,*,*,*,*,も,モ,モ&amp;#39;, &amp;#39;もも&amp;#39;, &amp;#39;名詞,一般,*,*,*,*,もも,モモ,モモ&amp;#39;, &amp;#39;も&amp;#39;, &amp;#39;助詞,係助詞,*,*,*,*,も,モ,モ&amp;#39;, &amp;#39;もも&amp;#39;, &amp;#39;名詞,一般,*,*,*,*,もも,モモ,モモ&amp;#39;, &amp;#39;の&amp;#39;, &amp;#39;助詞,連体化,*,*,*,*,の,ノ,ノ&amp;#39;, &amp;#39;うち&amp;#39;, &amp;#39;名詞,非自立,副詞可能,*,*,*,うち,ウチ,ウチ&amp;#39;, &amp;#39;EOS&amp;#39;] では最後に分かち書きをすると、
1 2 3 4 import MeCab tagger = MeCab.</description></item><item><title>或る日の秋葉原</title><link>https://asanobuturi.github.io/document/2024/7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/7/</guid><description>2024年6月某日。既に東の空に高く昇る陽に照らされ、いつものように机に向かい、問題集とノートを開き、鉛筆を走らせる。解答にアンダーラインを引き、橙色のボールペンに持ち替え問題集と照らし合わせ、計算ミスを修正し終えたところで短針は9を指していた。ペンを置いて問題集とノートを閉じ、財布と定期券、スマホとイヤホンだけを鞄に入れ、家を出た。
家から私鉄で横浜駅へと向かい、JRのホームの改札を通り抜け、7,8番線のホームに上がった。向かう先は、秋葉原。
秋葉原に出かける確固とした目的は特にない。電子部品の購入でも、書籍やアニメグッズの購入でもない。毎日の受験勉強。その息抜きを兼ね、ただ秋葉原の町並みを久方ぶりに歩いてみたかった、というだけであった。
ホームに滑り込んできた、緑と橙の電車に乗り込んだ。ポケットからイヤホンを取り出し、単語帳の音声を再生する。聞いたことのない単語に出くわし、流れる英文が聞き取れないこともいまだに多い。結局内容は殆ど頭に入らず、それでも時間を有意義に使った気になりながら、徐々に秋葉原に近づく。
「秋葉原」という地名を聞いて多くの人が次に連想する言葉は、「オタク」であろう。アニオタ、漫画オタ、鉄オタ…。世の中には「オタク」と呼ばれる人々が存在する。アニメに没頭する部員や漫画を読み耽る部員、ゲームを通して互いに交流し合う部員、プログラミングや電子工作に興じる部員を擁する物理部も、オタク集団としての例外ではない、と考えている部員もいるかもしれない。ところで、そもそも「オタク」とはどういった人々を意味するのであろうか。
オタクの在り方やオタクに対する考え方は人それぞれであろう。私にはオタクを自称できる自信がなくオタクに対する明確な考え方は定まっていないが、例えば広辞苑には、
お-たく【御宅】
④(多く片仮名で書く。仲間内で相手を「御宅」と呼ぶところからの称)特定の分野・物事には異常なほど熱中するが、他への関心が薄く世間との付合いに疎い人。また広く、特定の趣味に過度にのめり込んでいる人。
とある。また、明鏡国語辞典を引くと、
お-たく【御宅】
④〔俗〕趣味的な世界にひたすら没頭する閉鎖的な人。
「アニメ[パソコン]―」
▶相手を「おたく」と呼ぶ傾向があるからという。
[表記]多く「オタク」と書く。
と書かれている。すべてのオタクが他人との関わりを犠牲に自分の趣味に没頭しているとは思えないが、少なくとも「特定の物事に熱中する人」として世間には認知されているようだ。では、なぜオタクたちは秋葉原に行くのであろうか。
電子工作オタクやパソコンオタクを例に挙げよう。そして、商品の購入のみならず、仕事やオタク仲間のオフ会など、彼らが秋葉原に行く理由はいくらでも挙げられうるが、私が秋葉原を訪れた経験から、商品の購入に焦点を当てることにする。
よく知られている通り、電気街を擁する秋葉原には、数多くの電子部品店やパソコン・周辺機器の販売店が立ち並ぶ。そのような商品の多くは通販からも手に入るが、店頭限定の商品や店頭特価の商品を買いに行ったり、わからないことを店員に訊ねたり、店頭に並ぶ豊富な品揃えを眺めに行ったりすることに、十分秋葉原に行く意味がある。これはアニメグッズや漫画が好きなオタクがそれらをわざわざ秋葉原に出向いて買いに行く理由としての説明にもなるのではないか。しかし、中には仕事でなくとも年に何十回、何百回と通うオタクの話を耳にすることもある。そこまで頻繁に行く意味はあるのだろうか。
そもそも、オタクの趣味に関わる店が数多くある秋葉原は、多くのオタクにとって居場所と感じられるだろう。上に挙げた目的から、何度か秋葉原に行けば、秋葉原にそういった認識を持つようになり、愛着が芽生え、自分の趣味に対して抱いているほどにまで膨らみうる。そして、最初は特定の店舗以外には無頓着であったとしても次第に興味を持ち足を踏み入れるようになって未知との出会いを求めるようになったり、建物のリニューアルやラッピングの張り替えなど、秋葉原の街並みの些細な変化さえも気にするようになったりして、秋葉原へ行く度に愛着が増幅する。そして、ちょっとした買い物の用事ができたり、店頭におけるセールやキャンペーンの情報をSNSで見たりする度にわざわざ秋葉原へ行こうとするようになり、もともとの自分の趣味以外にも興味を持つようになるかもしれない。最終的には、特に明確な目的がなくとも帰省するかのように秋葉原に通う。順番通りとは限らないが、このように訪れる頻度は高くなるのではなかろうか。
単語帳の音声のトラックを1つ飛ばし、10回くらい聞いたところで電車が東京駅の7番線に着いた。ホームに出て一度1階へ降り、3,4番線の京浜東北線・山手線ホームに出る階段を上がって山手線の待機列に並んだ。3分程待つと、4番線に山手線のE235系が入線し、乗り込んだ。車窓を見ると、オフィスビルの集まりが次第に繁華街に変わっていき、反対側を見ると、並走する新幹線が見える。秋葉原に通い始めた頃の、この情景を見たときに感じた、徐々に秋葉原が近づくことへの高揚感を今でも鮮明に覚えている。中央線と分かれ、そのまま秋葉原駅の高架ホームに電車が到着した。知らないゲームの広告が張り出された階段を早足で下る。
腕時計を見ると、時刻は10時を少し過ぎている。しかし、多くの電子部品店やアニメグッズショップの開店時刻は11時。秋葉原の朝は遅い。秋葉原駅には電気街改札、中央改札、道路を隔てて昭和通り改札がある。いつもは電気街改札を通るが、既に開店しているヨドバシカメラマルチメディアAkibaへ向かうべく中央通り改札をくぐることにした。
サインに「YOSTAR改札」という表記が加えられた中央通り改札を出た先には、暫く見ないうちにオープンしていたYostar Official Shopがあり、40mの長さを誇るディスプレイにキャラクターやゲームのPVが映し出されているのが見える。
suicaをタッチし、交通費483円を払い、オタクの国・秋葉原への入場ゲートを通り抜けた。どのような景色が私を迎えてくれるのであろうか。
中央改札から外に出てすぐの場所にある、ヨドバシカメラマルチメディアAkibaに入った。日本全国に24店舗展開されていて、各店舗品揃えが豊富で売り場面積が大きいことが特長のヨドバシカメラだが、Akiba店はその中でも特に規模が大きく、秋葉原の中でも存在感が大きい。家の近くにもヨドバシカメラはあるが、ヨドバシAkibaは秋葉原に来たら必ず行く場所のひとつだ。
ヨドバシカメラに限らず、チェーン店であっても地域毎の店舗を巡るのは楽しい。すべての店舗にある程度の統一感はあれど、場所ごとに少しずつ在庫や陳列のされ方が異なり、その違いを見るだけでも訪れる甲斐を感じるからである。特にAkiba店は、広さ故に見ていても飽きることがない。
1階からエスカレーターで店舗を上がっていく。PC・周辺機器の売り場である2階では、商品を見る度に、それを買い家に置いたときの様子や、それを使っている自分を想像してしまう。4階のオーディオコーナーではいくつかヘッドホンを試聴し、6階では壁一面の工具に目を通した。
どの店を訪れても、家電量販店は特にそうだが、物欲が刺激される。しかし、持ち金が少ない上に、日々受験勉強で追われる中で、何か商品を買ったところで使う機会が想像できない。目にした物に手を伸ばしても同時に自制心が働き、結局何も購入することはなかった。
1時間ほど店内を歩き回ったところでヨドバシAkibaを後にし、ホテルメッツプレミア秋葉原の下の通路を抜けて、電気街改札を出た先であるアトレ秋葉原1に来た。窓や壁面にはキャラクターのラッピングが施されており、半月に一度貼り変わる。館内ではそのキャラクター達によるナレーションが流れている。電気街南口を出た場所にはキャラクターを描いた大きな絵があり、多くの人がその撮影に勤しんでいた。私も義務感のようなものに駆られスマホをポケットから取り出し、周りの歩行者に配慮しつつカメラを壁に向けるが、人混みの多さ故にうまく映りそうになく、諦めた。尤も、私はゲームやアニメの知識がほとんどなく、壁面のキャラクターの事も全く分からない。今になって考えてみれば、なぜ秋葉原に来る度に知らないものにカメラを向けるのか、目まぐるしく変わりゆく秋葉原を記録することへの欲望以上のことは分からない。
アトレ秋葉原1の南側に沿って歩く。突き当りでは、オノデンとラジオ会館の巨大ビジョンから流れる音楽とメイドカフェのテーマソングが響き渡る。右に曲がり、中央通りに出た。今こそ秋葉原の雰囲気にはもう慣れているが、通い始めた頃は、秋葉原が他のどの場所にもない異様さを醸し出しているように思えたのを鮮明に覚えている。
最初に秋葉原に来たのは、3年前の文化祭直前、完成間近であった作品のICを過電圧で飛ばし、急遽新しいものを買いに行ったときであった。
もう時間がないことへの焦りと共に電気街南口を出ると、様々な髪色をしたキャラクターの絵が建物を彩り、至るところで何かのアニソンやキャラソンが鳴り響き、白や黒、桃色のメイド服を身に纏った人たちが観光客に声を掛け、色とりどりに輝くLEDや精巧な工具、見たことのない電子機器たちを店頭に並べる店が軒を連ねていた。私の視線は常に泳いでいた。滞在時間は1時間程であったが、その日、この世のものとは思えないような秋葉原の独特な雰囲気が頭から離れることはなかった。
この雰囲気は誰の手で作られたのだろう。
オタクが何らかの形で携わり、自分たち好みの街並みとして構成してきたのは間違いない。オタクが秋葉原が電気街として発展し始めたのは戦後間もない頃でこのときはまだ「オタク」という概念も言葉も無かったが、秋葉原電気街を造り上げた人々の中には心の底で「オタク」の精神を持つ人も存在して、時と共に「オタク」達が受け継いでいき、このオタクの国の独特な街並みと雰囲気を作り上げているのかもしれない。
横断歩道を渡り、老舗の電子部品ショッピングモール、東京ラジオデパートの前を通り過ぎ、中国語の童謡が流れるあきばお〜弐号店の店頭に並ぶ安売りの電子機器たちを見てから、中央通りに比べれば少し落ち着いている秋葉原の裏路地を少し歩いた先にある千石電商に入り、自作と思われるスピーカーから流れるラジオ番組を耳にしながら地下1階から3階に並ぶ工具や線材、教育キットを眺めた。千石電商を出て、電子工作界隈で名が広く知られた電子部品販売店、秋月電子通商に入り、まず2階へ向かった。2階がオープンしたのは1年3ヶ月前だが、2階がオープンする前の店舗の様子も覚えているし、そこに通い始めて間もない頃の私が考えていたことも忘れていない。
当時は電子工作を始めて2年ほど経っており、まだ簡単な回路を組み立てるのにさえ苦労することがありながらも、少しずつ、電子工作を通して自分の思い描いたものをそのまま形にすることの楽しさを見出し始めていた。暇があれば秋月電子の通販サイトを眺め、物理部における作品制作のヒントを得たり、名前を知らない電子部品に出くわしてはその部品について調べたりしていた。秋葉原の電子部品店、特にこの秋月電子はそんな私にとっての僅か二、三十数畳の売場の中に無限の未知が広がる、夢のような場所と捉え始めるようになった。時が経ち、高二の文化祭が終わり受験生になるまで、月に1,2回電子部品店を訪れ電子部品や工具、配線材を買い、何か作品を作り上げる度に電子工作、そして電子部品店への思いを倍増させることを繰り返していた。
最後に物理部で作品を出してから9ヶ月。電子工作に興じていた日々を思い返しながら、閑散とした2階の売場で、売られている工具や測定機に目を向ける。2階がオープンする前は、オシロスコープなどの大きく値が張る測定器はパーツキャビネットの上に1台か2台置かれていただけであったが、2階のオープン後はいくつも測定機売り場に置かれている。数年かけて家に電子工作ができる環境を少しずつ構築してきたが、まだ何か工具や測定機を見る度に欲望が抑えられなくなる。しかしそれらの値段は月々の小遣いでは手が届かず、受験後の楽しみとして仕方なく購入を諦めている。ここで、測定機コーナーの反対側を向くと、「¥100」の文字とともに、倉庫の長期保存品として10個入りのフィルムコンデンサとロッカースイッチが特価で売られていたのが目に留まった。思わず1袋ずつ手に取る。180円のDIP-IC引抜冶具もついでに1つ取り、他のコンテナの特価商品やアンプキットへの誘惑を抑え、レジに向かった。支払いを済ませ、購入品が入った小さな茶色の紙袋とレシートを受け取り、鞄に入れて1階店舗まで降りた。
1階では抵抗やコンデンサ、LED、トランジスタやICなど、多くの人が電子部品と聞いて思い浮かべるであろうものが揃っている。2階に比べると客が多く、レジの音がせわしなく鳴り響いていた。
秋葉原はオタクにとっての居場所だろうと述べたが、もしそうであるならば「オタク」には「電子工作オタク」も含まれるだろう。その中でも秋月電子通商を居場所と考える電子工作オタクが多いと思われる。この店を利用する年齢層は幅広く、それぞれが自分の手でこれから生み出すものに思いを巡らせていることだろう。
緑色のカゴを取り、彼らに混じって私もキャビネットを眺める。分からない電子部品に出会うことも多いが、何か電子部品を見かけたら、その部品が基板に実装されている様子を思い浮かべてしまう。基板の大きさはいくらにするのか。Vccは何Vにするのか。パスコンは容量が何μFのものをいくつ使うのか。どのコネクタを使うのか。基板間の線材の太さは何sqにするのか。そのようなことを考える。熟練の電子工作オタクなら部品を目にしただけでデータシートも見ずに瞬時に回路図が隅々まで頭に浮かぶであろう。それに比べれば私の考えていることは初歩的だ。それでも、頭に思い浮かぶものの存在に気づく度、自分の電子工作への思いを再確認するのである。
そもそもこの日秋月電子に来た目的は、9ヶ月前に制作した作品に小さな改変を加えるのに必要な電子部品を買うことだ。そのためにもともと買うつもりであった、D基板と12Vの三端子レギュレーターを1つずつををカゴに入れた。ACアダプタ1つと、10個100円で安売りされていた、漆黒の外装と金色の印刷が光る、Panasonic製560μFアルミ電解コンデンサもカゴに入れ、レジに持っていく。小計は千数百円。かつては物理部の部費で何万円も使い、その度に長いレシートを持ち帰ったものだが、それに比べれば少ない金額だ。それでも、何かしらの収穫があると、お金を使ったことに対する僅かなの後ろめたさはあるものの、それに勝る物欲が満たされる。
2階での会計と同じように、電子部品が茶色い袋に入ったのを受け取り鞄に入れ、レシートを財布に入れて秋月電子を出た。
そういえば、秋葉原が電子部品店の数を減らしていることを嘆く人を時折見かける。私が秋葉原に通う数年の間にも、ラジオデパート内を中心とした電子部品店が何店舗かシャッターをおろした。ネジと圧着端子の専門店として知られていた西川電子部品も廃業し千石電商と合併して、千石電商がラジオデパート店と2号店を閉めて本店と旧西川電子の2店舗での営業に切り替えたのは記憶に新しい。この流れにアニメグッズショップの開店、アニオタの増加も伴って、電子工作オタクが秋葉原において存在感を減らしていると考えざるを得ない。しかしそれが日本の電子工作の衰退を意味するものではないと、私は思う。
インターネットの台頭で、秋月電子を含めた各電子部品店が通販を始め、電子部品を検索するだけでデータシートが見られるようになった。また、様々な層に向けて技術書も次々と出版されており、個人の電子工作のブログや制作記は無数に存在する。このように電子工作の環境はむしろ改善しているように思える。そのような状況で、電子工作オタクが数を大きく減らしている筈がない。むしろ、日本の電子工作オタクを取り巻く未来に幾何か光が見える気がする。
技術力は乏しいながらも、自分のものづくりへの思いは誰にも負けていない。そんな幻想を抱いていた頃が懐かしい。私が今はんだごてを握ることはほとんど無い。しかし、受験生になっても、頻度は落ちたが勉強の息抜きとして数ヶ月に一度秋葉原を訪れ、その度に秋月電子で売られている商品を眺めている。今でも技術書を開いてみれば意味の分からない文や式、名前の分からない電子部品や用語に出くわすことは多く、その度に、自分の技術力の未熟さに気付かされる。そんな自分が電子工作オタクだと断言できる自信は無い。それでも、勉強の合間に自室の電子部品のキャビネットを引き出して電子部品を手に取って壁の収納や工具箱の中の工具を握って技術書をざっと見通し、勉強以外のこととなると、電子部品や工具や測定機のこと、過去に作った作品のことや大学受験後に学びたいことややってみたい研究のことばかり考えていて、その度に電子工作は今もなお、生活の一部となっていることに気付かされる。もし受験期間中に電子工作への興味を失うということがなければ、間違いなく私がいち電子工作オタクとして再び秋葉原に通い、電子工作や研究に励むときが来るだろう。
裏路地から再び中央通りに出ると、既に歩行者天国が始まっていた。人々が中央通りを埋め尽くしており、その雰囲気にレンズを向ける人もいた。その通りを北に少し歩き、イヤホン・ヘッドホンの専門店、e☆イヤホン秋葉原店のビルに入った。
秋葉原に通い始めた頃からオーディオにはある程度興味があったが、半年近く迷った後にワイヤレスイヤホンを購入したのと、Bluetoothスピーカーを制作し2023年の文化祭で出展したのが重なり、オーディオ機器、特にポータブルオーディオ機器(携帯型のオーディオ機器)にいっそう興味を持つようになった。
何か音響機器を買おうとしているわけではない。ここに来た目的は、様々な音響機器の試聴をすることだ。というのも、e☆イヤホンでは、店頭に並べられているほぼ全ての音響機器を視聴することができるからである。製品の購入でなくとも、試聴が目的で訪れる人は多いようだ。
店舗の1階ではワイヤレスイヤホンやワイヤレスヘッドホンが並べられている。ワイヤレス機器はここ数年で需要が大きく増加しており、多くの人が試聴したり、店員さんと話したりしていた。早速、Amazon Musicを起動し、持っているスマホと1台ペアリングした。MEMSドライバーと、ハイレゾコーデックであるLDACとaptX Adaptive両搭載で話題になった、Noble Audio FALCON MAXだ。取り出して装着したが、サイズが大きく、右耳の装着センサーが反応せず、ノイズキャンセリングが働かない。仕方なくペアリングを切った。
壁側に展示されていたワイヤレスヘッドホン、Sennheiser MOMENTUM 4 WirelessやBOSE QuietComfort Ultra Headphonesなどを試聴し、ワイヤレスイヤホンも試聴しようとしたが、あまりにも人が多く、気になっているメーカーの機器を手に取れそうにない。結局、ワイヤレスイヤホンの試聴は諦め、上の階に上がることにした。
階が上がるほど、玄人向けの機器が増えるように思える。2階には、イヤーピースとエントリークラスの有線イヤホンとワイヤレスイヤホンが並ぶ。まず、手持ちのワイヤレスイヤホンのイヤーピースを付け替えて音楽を流した。イヤーピースごとに、遮音性や素材による音の傾向の違いや付け心地の違いが大きく異なり、その違いを楽しんでいた。次に、イヤーピース売り場の奥の有線イヤホン売り場にて、店頭展示されていた、Fiio KA2 Lightningとqdc SUPERIOR、Maestroaudio MAPro1000のバランス接続を試した。先入観もあるからであろうが、多くのレビューのとおり、前者は各帯域の分離感が程よく、後者は、イヤホンであることを疑うほど音場の広さが感じられた。いずれも、私のような素人であっても解像度の高さが感じられ、ワイヤレス機器や純正Lightning DACでは聞こえなかった細かい音が聞こえ、その度、脳から全身に刺激が走る。さらに数機試聴したのち、階段を上がった。
上の階では、さらなる未知の世界が待ち受けている。3階では有線ヘッドホンやDAPやヘッドホンアンプ、4階ではさらに高級な有線イヤホンやケーブルやカスタムIEMが売られており、いずれも玄人をターゲットにしているように思え、何十万円にも上る機器が平然と並んでいる。手にスマホだけではなく、照明を反射し特有の輝きを放つ金属シャーシの高級DAPや、手に乗るサイズで数万円もするUSB DACを持つ人の割合も増えた。それに比べ、私はiPhoneと16bit 48kHzのLightning DAC以外持っていないが、学生なので仕方がない。</description></item><item><title>学校のチャイムについて</title><link>https://asanobuturi.github.io/document/2024/12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/12/</guid><description>どうも、そこら辺の人です。早速ですが私の学校ののチャイムについて書かせていただきます。
チャイムの種類 まず、この学校のチャイムには色々な種類があります。そこで私が分かった範囲で種類をまとめていき、曲名を明かしていくのが本部誌の内容です。とりあえずまとめていきます。
授業中によくあるやつ 編集者注:{[脚注番号]:番号}と表記されているものは脚注番号に対応するURLのサイトの&amp;lt;番号&amp;gt;エントリに対応する曲を指しています。
授業中の音源
平常授業(A表) 午前短縮(B表) 30分遅れ(C表) 短縮授業 定期考査 考査公表 まずは授業としての音源にはこういう種類があります。(生徒手帳[1]より)
最初に、平常授業としてどこの学校にでもある「ウエストミンスターの鐘」が採用されています。詳細は[2]へ(丸投げ)。実は、そこにも２種類あり正時鐘の１６音が授業の始まりに採用されています。また、授業の終わりには始まりから８音飛ばした短い８音で構成されています[3]:1-2。
次に短縮授業。
これもまた[3]:3の音源です。そのなかの「よろこび」という名前のものです。また、この音源は考査公表にも使い回されています。
定期考査のチャイムは[3]:4これです。その中の「あおぞら」という曲名です。浅野生からは「テスト期間だけ現れるクソチャイム」みたいなイメージなのでこの音源が好きな人は絶対いません。たぶん。
次に午前短縮。こんな日程は１年に一回あるかどうかのなぜ用意したかわからないレベルで使わないです。学級集会でごたついて授業に食い込んだときにようやく聞けました。このチャイムはなぜか「美しき青きドナウ」のサビです。選曲がいきなりおしゃれになりましたね。
30分遅れのやつには遭遇できませんでした。先輩曰く一度も聞いたことないそうです。
放課後によくあるやつ 放課後の音源
部活終了 中1だけ部活終了 下校15分前 下校時刻 続いては放課後のチャイムです。なかなか沼です。
まず、部活終了のチャイムです。ようわからん音源のあとにようわからん人が
「◯◯時になりました。部活動終了の時刻です。下校の支度をしてください。部活動終了の時刻です。活動を終えましょう。」
とアナウンスをします。(やけくそ)実はこれにも種類があり、◯◯時には4:30, 5:00, 5:30の３つあります。そして、4:30バージョンでは 「“本日の”部活動終了時刻です。」と謎に付け足されています。下校時間のチャイムも同じ感じで謎のチャイムのあとに謎に音源が流れてきます。
続いては中１だけ部活動終了のチャイムです。ここでもまた別の謎のチャイムが流れます。蛇足ですがJR北海道の7打点チャイムとほとんど同じ感じです。理由は謎です。しかもこれにもアナウンスの種類があり、
「中学１年生の皆さん、部活動終了の時刻です。中学１年生は教室に戻りましょう」 「中学１年生の皆さん、部活動終了の時刻です。中学１年生は下校しましょう」 と２つあります。この音源が使われるときは中１の体験入部と仮入部のたった２週間です。
最後に来ました「下校15分前」。これがなかなかに沼っており、毎日聞けるのに日によって音源が全く異なるため未だ全貌がつかめていません。とりあえず私の分かる範囲でまとめていきます。
アニー・ローリー ユーモレスク カノン ノクターン 愛の挨拶 曲名不明(ただの知識不足です) の６つが判明しています。
音楽から曲名を探し出すのにかなり時間がかかりました。時間を変えて各曜日に下校15分前まで粘って粘りました。が、全くこの６つの曲が流れる法則性が見つかりませんでした。たぶんランダムで流れているんでしょうか？そしてなんでこんなにも大掛かりなことをしたんでしょうかね。また、他のチャイムのようにサビだけとるようなことはせず数分間フルで流れ続けます。
おわりに ここまでチャイムを集めるために遠隔で録音したりしていましたがまだまだすべてのチャイムを集めるのには苦労しそうです。
{width=70%}
{width=70%}
締切-3日前にこの部誌を書いたせいで構成が雑になっていますが悪しからず。
ここまで読んでいただきありがとうございました。以上物理部でした。
生徒手帳　浅野中学・高等学校 2023年度, 52-53p. ウェストミンスターの鐘 - Wikipedia https://ja.wikipedia.org/wiki/ウェストミンスターの鐘 チャイム音・楽曲一覧 | デジタルプログラムチャイム PA-DT600（B） | 業務用放送システム | JVC https://www.jvc.com/jp/pro/business-use-broadcast/lineup/pa-dt600b/feature03/</description></item><item><title>競プロ初めて10ヶ月で入水した話</title><link>https://asanobuturi.github.io/document/2024/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/10/</guid><description>はじめに 中学2年のkino0402です。競プロを始めて約10ヶ月、2024/8/25のARC183で入水しました。ここでは、「環境構築」「精進の内容」「オススメの教材」の３つに分けて入水に必要だと思うものについて書いていきます。
{width=100%}
目次 環境構築 精進の内容 オススメの教材 環境構築 してません。全部未だにAtCoderのコードテストを使っています。何なら緑コーダーになるまでは学校配布のChromebookを使っていました。 学校配布のChromebookでも問題なくできます(強いて言うなら拡張機能が入れられないのが不便)。これ見てる浅野生は今すぐAtCoderのアカウントを作って始めましょう。
精進の内容 基本的にABC200以降のC問題以降を苦手なアルゴリズムの問題を中心に埋めています。モチベのない時やスキマ時間にA問題を埋めてます。基本的に今の自分の色か自分の色より1つ上の難易度の問題を解くのが良いと言われていますが、それよりも低難易度で自分の苦手なアルゴリズムに慣れる方が重要だと思います。 また、コンテストで連敗して気分が落ち込んでいる時は昔のdiffと比べて簡単な問題を解いたり、ABC4問時代のバチャをして全完したりします。
↓色ごとのAC数です。参考にしない方が良いと思います。
{width=50%} {width=50%}
ちなみに青の6ACの内訳は
インタラクティブが2問 解説ACが3問 構築 黄の3ACの内訳は
解説AC フロー 重実装(3時間かけた) 橙の1ACの内訳は
フロー です。基本的に自分の色より2つ上以上を自力でACできることは少ないので高難易度特攻はあまりオススメしません。
オススメの教材 競プロを初めてやる人向けのものから水コーダーになりたい人向けまで、自分が役に立ったと思う教材を紹介します。
APG4b 正式名称は「C++入門 AtCoder Programming Guide for beginners」です。 競プロに必要なC++の文法などが学べます。1章を終わらせたらABCのA問題は解けるようになると思います。一応Python版もありますが、まずはC++を学ぶことをオススメします。
C++入門 AtCoder Programming Guide for beginners (APG4b) - AtCoder https://atcoder.jp/contests/APG4b Python入門 AtCoder Programming Guide for beginners (APG4bPython) - AtCoder https://atcoder.jp/contests/APG4bPython けんちょんさんの記事 AtCoderの問題の解説記事を沢山書いてる人です。ABCのA問題から最難関レベルの問題までわかりやすく書かれています。わからない問題を調べた時に大体出てきます。使うアルゴリズム毎にタグ付けもされているので新しく学んだアルゴリズムを使う練習をする際にも役立ちます。
このブログについて - けんちょんの競プロ精進記録 https://drken1215.hatenablog.com/about evimaさんの動画 毎週ABC終了直後に投稿される「3分でAtCoder Beginner Contest」シリーズや、初心者向けアルゴリズム解説、数学関係の問題などを投稿している人です。どの動画もわかりやすいです。
えびまラボ - YouTube https://www.</description></item><item><title>自作Arduinoを作った</title><link>https://asanobuturi.github.io/document/2024/19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/19/</guid><description>制作物画像 上にあるやつが Arduino 公式のやつ はじめに この記事は小学生向けというよりも電子工作をやっている外部の人向けになっています。ご了承ください。
また、物理部では執筆時点でArduino Uno R4を入手していないためこの記事中の Arduino Uno は断りがなければ R3 の方を指します。
Arduino とは何? Arduino について解説しようとしましたが大変説明が難しいので詳しくはこちらを参考にしてください。
回路図 ブロックごとに解説 ここからはそれぞれの部分に分けて解説していきます。ベースとしたのもはArduino Unoです。
電源 本家(Uno R3)は最近使わないプリンターなどの限られた用途でしか使われていない(ただ物理部では未だバリバリの現役の)USB type B が使われています。今回は最近使われるようになってきた USBtypeC を使った。
wikipedia より
USB type C を使うにあたって電源構成を考えたときに typeC では最大 100W 取れるのでこれを使うことにしました。typeC から特定の電圧を取り出すにはこの記事を参考にさせてもらいながらCH224Kを使用した(チップ本体はそんなに高くなかったが、変換基盤が高かった……)。また、取り出す電圧を変更する回路には前に使ったATtiny84が部室に転がっていたのでこれを使用した。コードについては動けがよしという流れで書いているので参考にならないかもしれない。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 const char CFG[]={0,9,10}; const char PG=1; const char buttons[]={5,4}; const char SIG=6; const char MODE=7; const int values[]={0,7,14,21,27,33}; // 1:5V 2:9V 3:12V 4:15V 5:20V int value=1; bool lastUpButtonState=false; bool lastDownButtonState=false; void setup() { for(char i:buttons){ pinMode(i,INPUT); } for(char i:CFG){ pinMode(i,OUTPUT); } pinMode(MODE,OUTPUT); pinMode(buttons[0],INPUT_PULLUP); pinMode(buttons[1],INPUT_PULLUP); digitalWrite(MODE,HIGH); } void loop() { if(digitalRead(buttons[0])==HIGH &amp;amp;&amp;amp; !</description></item><item><title>生成 AI の生成物を見分けることができるのか</title><link>https://asanobuturi.github.io/document/2024/8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/8/</guid><description>近年、急速に発展を遂げている生成 AI は、私たちの生活に様々な影響を与え始めている 1 2。 最近ではチャット型 AI のものを見分けるのが困難であるという研究も出てきている3。そこで、私は生成 AI の利用状況、どのような目的で使用されているのか、生成 AI によって生成された文章や画像、音楽を見分けることができるかについて調査を行った。
この調査の最終結果は文化祭終了後の 9/20 頃を予定している。それまでこのサイトをブックマークするなどして待っておいてもらいたい。
2024/09/18追記。アンケートの解答を掲載します。こちらです。結果については現在集計中なのでもうしばらくお待ち下さい。
2024/09/28 追記: 本編を公開しました。こちらです。
これだけでは面白くないので別度浅野生向けに取ったアンケートの途中結果を発表します。
9/8 現在 24 名浅野生からの回答を回収できた。
生成 AI の利用経験 まず、生成 AI を何かしら利用したことがあるか尋ねたところ、79.2%の方が「はい」と回答しました。生成 AI はすでに多くの人にとって身近な存在になりつつあることが伺えます。
生成 AI の利用頻度 生成 AI の利用頻度については、「ほぼ毎日」が最も多く 37.5%、「週 1 回以上」が 25%という結果になりました。一方で、「本当に必要になったときだけ」や「最初に使ったきり」という方も一定数いることがわかりました。
生成 AI の利用目的 生成 AI をどのような目的で使用しているかという質問に対しては、様々な回答が寄せられました。
プログラミングや数学の問題を解決するために利用 AI の限界を探るために利用 読書感想文の作成に利用 学習の補助として利用 イラストや文章、動画の生成に利用 Arduino(物理部で使われているマイコン)のコードの参考として利用 今回は浅野生と言ってもまだ物理部員が中心出会ったため、プログラミング関係のものが多く挙げられた。生成 AI は学習や趣味、仕事など、多岐にわたる分野で活用されていることがわかる。
利用されている生成 AI の種類 数ある生成 AI の中で、ChatGPT が最も多く利用されていることがわかりました。その他、Gemini や Claude 3、Stable Diffusion なども一定数の利用者がいることが確認できました。</description></item><item><title>猫でもわかる電工班</title><link>https://asanobuturi.github.io/document/2024/18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/18/</guid><description>初めに 物理部の中3のLです。
これは物理部、特に電子工作班に入って最初に何をするか知ってもらうことが目的の部誌となっています。電子工作班員ほぼ全員が経験していることを紹介していきます。PC班のことは分かりません。私の世界は狭いんです&amp;hellip;
最初はやっぱりこれ 入部してから電子工作班になって最初にやること基本的にLEDの点滅(Lチカ)の制御です。電子工作班の作品にはArduinoが使われています。 Arduinoとは初心者向けのたくさんの機能が備わった基盤で、学生などの学習のためによく使われるものとなっており、電子工作班員もよく使用しています。
また回路を配線しますが、その際ブレッドボードというものを使用します。これは簡易的に回路を使用するための部品です。
{width=30%}
この写真の中にある白い板のようなものがブレッドボードで、溝で分けられていない部分は縦に電気が通ります。
また、LEDは電気を通す向きが決まっており、アノードとカソード呼ばれるものが存在します。
` LEDの長い方がアノード、短い方がカソードで、アノードをデジタル出力ピン、カソードをGNDピンにつなげます。
この時、LEDが焼ききれないよう抵抗をつなぎます。これで配線は終わりです。
つまり、今回使用するのはArduinoとLED1個と抵抗1個、ブレッドボードとなります。非常にコンパクトですね!!
次はコード Arduino IDEというアプリを使って書いたスケッチ、つまり命令をArduinoにアップロードします。
例えばArduinoを使用してLEDを一秒ごとに光らせたいとすると、次のようなイメージになります。
Arduino起動時にLEDをとつながっているピンを設定する LEDを光らせ一秒待機し、光を消した後一秒待機する 上の動作を繰り返させる このようなものは簡単そうに見えますが、このコードを実際に作成すると10行程度になります。
まとめ的なやつ 基本的なものはこのイメージです。
この物理部の活動について、少しでも理解が深まったなら幸いです。
展示物の仕掛けについて考えてみると、違った見方もできるかもしれません。</description></item><item><title>部誌RTA</title><link>https://asanobuturi.github.io/document/2024/9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/9/</guid><description>はじめに 私がこれを書きはじめたとき、部誌の最終締め切りまで残り6日でした。
部誌のネタは完全ノープラン。どう間に合わせるか・・・と思っていたところ、部誌を最速で終わらす方法としてRTAを思いついてしまったので書いています。
なお、この部誌では実際にRTAで書く部誌はいま書いているものではなく、RTA用に書いた他の部誌を使用することとします。
RTAとは RTAとは、ゲームを最初からプレイして実時間でどれだけ早くクリアできるのかを競う遊び方です。実時間で時間を競うことから、リアルタイムアタックと呼ばれており、RTAはReal Time Attackの頭文字を取った略称です。
タイムアタックは海外ではSpeedrunという呼び方でも親しまれており、世界各国で楽しまれているゲームの遊び方です。
そしてそれを部誌でやってみようという訳です。
また、RTAのなかには「どのようなルールでクリアするか」でいろいろなカテゴリーがあります。今回行うのは次のものです。(ちなみに、RTAではこういったルールをレギュレーションといいます。なのでこれ以降はレギュレーションと言う呼び方をします)
Any%　◯◯ Any%ではなんでもありの状態でとにかく最速でゲームクリアタイムを競います。RTAのなかで最も基本的なカテゴリーです。例として、ドラクエ3でゲーム機をホットプレートに押し当ててバグらせたり、ゼルダの伝説関連で無を取得してエンディングへ飛んだりと、バグ技を多用して最速でクリアします。
ちなみに、大体のRTAではAny%のあと(〇〇の部分)に何らかの個別レギュレーションを追加してます。
Glitch Glitchとは、ゲーム制作者が意図しないバグを利用して、壁抜けや増殖などを起こすことです。簡単に言うならバグ技。”Any%　Glitch無し”と書かれている場合、ゲームを正規ルートで最速クリアするということになります。また、本来Glicthはデジタルで起こすものですが、今回に限っては正規手段で部誌を書くときには到底使わない手、自分で考えずに書いたりする行為をGlitchとします。
部誌の定義 RTAをする前に、部誌の定義をしようと思います。
部誌の定義は次の5つとします。
部誌とは中高生や大学生などの部活動で発行する冊子 明確なテーマが決められており、それに則って書かれている テーマに則って最後まで書き「完成」したものである なんらかの言語を使用して書いている 手以外にもパソコンなどのなんらかの媒体を使用して書いても良い なぜ定義づけしたかというと、ここで先に言って置かないと「これは部誌なのか・・・？」と突っ込まれるからです。
タイム計測方法 タイム計測は動画を取り、部誌のテーマを明確にし清書を書き始めた瞬間にスタート、完成したらタイマーストップです。
なお、テーマ決めや下準備などはタイムに含めないものとします。
部誌RTA　Any%　Glitch無し それでは早速始めたいと思うのですがその前に。
部誌では実際にRTAをしている動画を見せることができないので、クリアチャート(クリア方法のこと)の解説と実際に行ったときの様子を乗せるだけに収めます。
また、RTAで書く部誌の内容は「」ではじめから終わりまで囲うか、画像を貼ります。
1,部誌の内容を極端に短くする そのまんまの方法です。部誌の定義を満たす範囲でテーマをいじって書きます。
時間短縮のためにタイピングで書きます。
それではスタート
物理部で最も短い部誌
あ
終了です、タイムは10.98秒。
反省点を言えば、タイピングが苦手なのでそれでタイムロスをしてしまい3秒ほど失ったことですね。
次。
2,AIに書かせる “AIについて”という部誌をAIに書かせます。他を寄せ付けない圧倒的な生成速度の速さと、無料でできるという観点からGemini 1.5 Flash-8B Experimental 0827を使用しました。また、出来うる限り早く生成するために生成量を300字にするようにプロンプトを書きます。
それではタイマースタート
手順①　まずプロンプトを書きます 今回は『「AIのこれからについて」という部誌を300字で書いてください』という文章を書きます
手順②　生成されたものをコピペ ここに貼り付けた瞬間タイマーストップです。
AIのこれから
近年、私たちの生活に欠かせない存在となったAI。その進化は、ますます加速し、私たちの未来を大きく変えようとしています。 AIは、医療、教育、製造など、様々な分野で活躍の場を広げつつあります。病気の早期発見や治療法の開発、個に応じた学習支援、自動運転など、AIは私たちの生活をより豊かに、より便利にする可能性を秘めています。 さらに、AIは人間の能力を超える可能性を秘めています。例えば、膨大なデータから複雑なパターンを認識し、新しい知識や技術を生み出すことも期待できます。 しかし、AIの進化には課題も伴います。雇用問題やプライバシーの侵害、倫理的な問題など、AIの活用によって生じるリスクをどのように管理していくかが重要です。 AIは、人類の未来を大きく左右する技術です。その可能性を最大限に引き出し、同時に課題を克服していくために、社会全体で議論を進め、適切なルールや規制を整備していく必要があります。
タイマーストップ、記録は7.88秒。
感想としては、生成自体は1.8秒ほどで終わるのですが、生成速度があまりに早いためコピペに手間取ってしまい、それで6秒ほどタイムロスをしてしまったのが惜しいですね。
部誌RTA　Any%　300字完走 やっと本題のRTAです。前述した通り、本RTAではGlitch(バグ技)を使用して時間を短縮します。ですが、字数指定もなくGlitchを使用してもあまり面白くならないので字数指定300字を設けます。</description></item><item><title>部長挨拶</title><link>https://asanobuturi.github.io/document/2024/1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2024/1/</guid><description>この部長挨拶は夏休みの終盤も終盤、8月31日に書いています。
批評文を書く課題と英語リスニングの課題が未だ未着手という状況です。
7月の私は旧約聖書の創世記を批評しようと何故か考えていました、何を書けばよいのでしょうか。
おそらく私は来年もこの文をこの時期に同じような内容で書くことでしょう。
この文を読んでいる受験生諸君はこんな学生にならないように気をつけましょう、
冗談はこの辺にしておいて、今年度のPositronも秀逸な記事が揃っています。
是非、お楽しみください。</description></item></channel></rss>