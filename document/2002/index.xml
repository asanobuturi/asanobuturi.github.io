<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2002年度部誌 on 浅野学園物理部</title><link>https://asanobuturi.github.io/document/2002/</link><description>Recent content in 2002年度部誌 on 浅野学園物理部</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 22 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://asanobuturi.github.io/document/2002/index.xml" rel="self" type="application/rss+xml"/><item><title>Windowsドッキリプログラミング初級</title><link>https://asanobuturi.github.io/document/2002/2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2002/2/</guid><description>はじめに ここでは、C++を使ってWindows上で動くビックリなプログラム(初級)を厳選して作っていきます。なので、プログラミングの知識が必要となってきます。今回、ここでプログラミングの説明をしている余裕がないので、勝手に、あなたがC++を知っているということにしてしまいます(←超手抜き)。C++での作業にあたってはVC++を使ってください。そうすればここに書いてあるとおりにすれば同じ結果になるはず。あと、ここでは、Windowsの特殊な知識(API)を身につけなきゃならんので要注意。APIについては次の章を読んでね。
APIについて WindowsにはAPI(Application Programming Interface)という、膨大な関数群がある。APIは使用用途によって分類されているのだ(Windowsで標準的に使われるWin32API、DirectX関連で使われるDirectX APIなど)。Windowsアプリケーションはこれらを使っていろんなことができるわけだ(例えばウィンドウの描画とか&amp;hellip;etc)。C++では、APIを直接使うのが一般的(MFCなるものもありますがね)。 C++では &amp;ldquo;windows.h&amp;rdquo; をインクルードするだけで利用可能。具体的にもっと知りたいという読者は、本を立ち読みしたり(プログラミング関連の本って高すぎ)、MSDNライブラリを漁ってみたりしてください。
サンプルについて 我が部には、CD-ROM付録など、高等なことをするほどさいふが豊かではないので、ベーマガ(BASIC Magazineのつもり)同様、人間コピー機を作動させてください。スキャナーを持っているブルジョアな人は、それを使ってもかまいませんよ。あと、新型のヴィールスを作ろうと思っている方、ハッキングを試みている方、この記事はあまりその方面には縁がないと思います。どちらかというと憎いやつを叩きのめしてやりたいと思っている人向けかも?
注意! ここでは、少々アブナイことをするので、要注意。慎重に作業を遂行せよ!あと、生成物は個人で楽しむことを前提としているので、**決して他人に迷惑をかけないように!また、この記事が原因で発生したいかなる損害もわれわれは責任をとらないぞ!**あと、WinNT系での動作は一切未確認。大半はできないでしょう。では、さっそく実践に入りましょう。
マウスが。。。 マウスカーソルが飛び回るものを作ってみましょう。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include &amp;lt;windows.h&amp;gt; WINAPI WinMain(HINSTANCE hI nstance, HINSTANCE hPrevInstance, LPSTR Cmd, int iState) { BOOL ret; MSG msg; // メッセージループ while (1) { // メッセージチェック ret = PeekMessage(&amp;amp;msg, NULL, 0, 0, PM_REMOVE); if (ret) { // 終了判定 f(msg.</description></item><item><title>フォークリフト製作記</title><link>https://asanobuturi.github.io/document/2002/1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2002/1/</guid><description>フォークリフトロボットについて 今年、私はフォークリフトを製作することにしました。埠頭や運送会社などでコンテナを運んだりパレットを運んだりと活躍しているあの車です。このロボットを作ろうと思ったきっかけに「しむりふと」1(右図)というゲームがありました。このゲームは名前のとおりにフォークリフトのシミュレーションで、与えられた指示どおりにフォークリフトを動かし、ミッションをクリアしていくというゲームです。このゲームのフォークリフトの動きが気に入ってしまいました。それを見て、「これはロボットとして作るしかない!」と思ったわけです。
今まで物理部で作られてきたロボット(ショベルカーなど)は左右の車輪が完全に独立して回転し、直進・後進・回転を行っています(左図・左カーブの場合)。後輪のキャスターは車の動きに従ってぐるぐる回っているだけでした。そのためにその車の走り方は普通の自動車の走りとかけ離れたものになっています。
それならば、と今回は普通の自動車のように実際にハンドルを切って走るように作ろうと考えました。フォークリフトはハンドルを切ると後輪が動いてカーブを描きます。コントローラーにハンドルに相当するスイッチをつけ、それに応じてロボット本体のほうでモーターを使いタイヤを転回するようにします。
今年のロボットは「物理部初!ステアリングを切って走るロボット」ということで作り始めました。しかし、この原稿を書いている段階でまだこのロボットは動いていません。この原稿では最初の目標のまま書いていますが、展示に間に合わせるために妥協策を講じているかもしれません。
フォークリフトロボットの構造 このロボットの要はコントローラーの入力に合わせてステアリングを切るところです。この部分はコントローラーに左右にハンドルを切るためのスイッチを取り付け、そこからの入力信号をPICと呼ばれるICで処理するようにします。実際にタイヤを動かす構造はギアボックスを使いタミヤ製のステアリングセットと組み合わせて作りました(右図、右写真)。当初はステッピングモーターを使いダイレクトにコントロールする予定でしたが、思いの外ステッピングモーター2のパワーが弱かったためギアボックスに変更しました。
コントローラーのスイッチを倒すと、倒した方向に曲がるようにタイヤが動く 回転の限界位置にリミットスイッチをつけ、曲がり過ぎないようにする。 コントローラーのスイッチを戻すと、タイヤが中心位置に勝手に戻る。 ここで問題になったのが最後の「勝手に中心位置に戻る」というところです。普通の電子回路だとなかなか作りにくいところです。今回はPICというICを使ってみることにしました。PICとはICの中にプログラムを書き込むことができ、そのプログラムによりICの端子につながっているセンサーやモーターなどを動かすことができます。今までPICを使ったことは無かったので、「First PICk」というトレーニングキットを買ってきて使い方を習得するところから始めました。このキットには習得用の実験基板と、PICへプログラムを書き込む回路がくっついた基板(左写真)が付いているので、一通りPICについて理解した後もずっと使えます。PICはプログラミング言語がアセンブラ3なのでとても難しいですが、使いこなせればかなり複雑な事までできる面白いパーツです。
このPICを核に電子回路が組まれています。基板の上にはICが2個と大き目のトランジスタ、リレーが1つにその他抵抗などの小さい部品がたくさんついています。基板の表面にパーツが乱雑に乗っている様子や、裏面の適当はんだ付け実装による高密度配線などもなかなか見ごたえがあります、が完成してからではなかなか見えません。
また、タイヤを中央で止めるためには中心位置を判定するためのセンサーも必要です。このロボットではフォトインタプラタというパーツを使うつもりです。このパーツは発光部と受光部に分かれていてその間に物が入ると反応を示すという働きをします。このパーツをクランクのところに取り付ければ、クランクが中心位置に入ったときにモーターを止めるということができます。しかし、まだここまで製作が進んでいないので何とも言えません。
電源はICとモーターを両方とも動かす必要があるので5V電源と3V電源が必要です。単3電池4本と単2電池2本を搭載しています。今の段階ではロボット本体にすべての電池を搭載しているのでとても無骨な印象を受けます。あまりにも重いためステアリングの動きが悪くなっているのでコントローラーに一部の電池を移動させようか検討しています。
ベースになったショベルカーロボット ロボット本体は2年前に作ったショベルカーロボット(2台あった)を解体して部品や形を流用しつつ作りました。駆動用のギアボックスを取り付けるアルミアングル2本をそのまま使い、その上に乗って車体のベースとなる2本のアルミアングルをショベルカーロボットのパーツと同じ構造で作りました。
リフトの上下はギアボックスとベルトを使い、上下端の判定のためにマイクロスイッチを二つ使っています。ベルトは左図のように2つかけてあり、垂直方向のベルトにリフトが固定してあります。これは配置の関係でこのようになりました。ギアボックスについた大ホイールが白矢印のほうに回転するとリフトが上昇し、黒矢印のほうに回転すると下降します。一番上までリフトが昇ると上端にあるスイッチを押し、昇るための回路が切れてこれ以上上昇しなくなります。逆の降りるための回路はつながっているので、コントローラーで逆のスイッチを押せばリフトを下ろすことができます。一番下にリフトが下りてきたときはこれと反対に動作します。スイッチのついている位置は前ページの写真を見てください。上端はロボットの前面についていて、リフトでスイッチを押します。下端は支え棒の裏側にありリフトの金具でスイッチを押すようになっています。この判定回路にはダイオード4が使われていて多少電圧が失われますが、最も簡単なこの方法を選びました。
フォークリフトロボット製作小話 このフォークリフトロボットの前輪にはギアボックスが2つついていて、そこにタイヤがついています。実はこの2つのうち右側のギアボックスは動作しないようになっています。タイヤをまげてカーブするように車を作ると、実際にカーブするときに左右のタイヤで進む距離が微妙にずれてくるのです。このずれがあるのを無視して両方のタイヤを同じ速さで回転させると全くカーブしない車になってしまいます。そのためにこのずれを生かすように片側駆動になっているのです。後輪が直進の向きになっていれば片方のタイヤしか回転しなくても直進することができるので、その場で回転してしまうということはありません。
また車体に関して、今回はじめて穴開きのアルミ板を使いました。これは見た目がいい上にネジ穴をあける必要が無く便利だろうと思って買ってきたのですが、なかなか間隔と合わずに、ネジ穴を押し広げたり無理やりネジ止めしたりと結構苦労している代物です。最終的に、基板の覆いとして取り付けたりすれば結構見栄えのするパーツだと思います。
電子回路にも小話があります。このロボットではPICというプログラムを書き込むICを使っています。プログラムを書き込むためにICを書き込み基板に差込み、ちょいと休憩を取っていました。そろそろ作業を再開しようと基板の前に戻り少し浮いていたICを押し込もうとして手を触れた瞬間。アチッ!!火傷しました。原因はICの逆挿しでした。不注意でICを逆向きに基板に差してしまったのです。ICは決まった端子に決まった役割があるので、それをつなぎ間違えてしまったために思いっきり発熱してしまったみたいです。触ったときの温度は半田ごての先に触れて火傷したとき並みでした。半田ごての先端が300度近くになっているのでICもかなりの温度になっていたことが分かります。指先にICの形のままの長方形の火傷の跡ができました。ちなみにそのICは破損。その後まともに動作してくれなくなりました。予備のICを使っています。高かった書き込み基板とそれに接続しているコンピューターが壊れなくて良かったです。
&amp;hellip;現在このような事をしながら試行錯誤中です。まだ完成までは多少かかりそうですが地道に進めています。無事に文化祭で展示できていることを祈りながらこの稿を終わりにしたいと思います。
藤石達也さんが製作されたシミュレーションゲーム。フリーソフト。 http://www.h2.dion.ne.jp/~ame/こちらからダウンロードできます。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
普通のモーターが磁石の間を整流子の付いたローターが回転するのに対して、コイルの間を磁石が動くようになっているモーター。外側のコイルにパルス信号を送ることで好きな角度だけ回転させることができる。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
プログラミング言語の一種。ハードウェアの中で使われている機械語にちょいと飾り付けしただけのような言語なので、最も機械に近い言葉である。よって非常に難しい。プログラミングにコツが必要である。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
一方向のみに電気を流す働きのある半導体。決まった方向からしか電気を通すことが無く、逆からだと全く流れない。これの性質を利用してリフトの上下回路が製作された。&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>物理部員辞典</title><link>https://asanobuturi.github.io/document/2002/5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2002/5/</guid><description/></item><item><title>物理部用誤辞典</title><link>https://asanobuturi.github.io/document/2002/4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2002/4/</guid><description>「あ」行 あきた{飽きた}
ある一定の作業を繰り返した事に対して覚える感情の一種。この台詞と共に消されたMD、CDは数知れず。
{用例}「飽きた。」
「だからって音楽ファイルを消去する必要はないでしょう!?」
&amp;gt;&amp;gt;&amp;gt;「それは君が何十回も同じ曲を再生するからだねい。」一介の会計
&amp;gt;&amp;gt;&amp;gt;「だからって削除します?普通&amp;hellip;(泣)」稲歌
&amp;gt;&amp;gt;&amp;gt;「する。」編募委員会委員長
あきだねぇ{秋だねぇ}
秋が来た様を端的に表した感嘆詞。また、節の一つにして物理部が多忙になり、
そして暇になる季節。主に9月はじめから11月頃までを指す。
{関連}→打ち上げ 文化祭 {用例}「秋だねぇ」
「文化祭だねぇ」
「部誌の原稿は&amp;hellip;?」
「 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;秋だねぇ&amp;hellip;」
&amp;gt;&amp;gt;&amp;gt;「この季節に文化祭、打ち上げと物理部の主な行事があるのですぞ。」混沌野郎
あきはばら{秋葉原}
地名。電気街としても有名。なんでもそろう街。だが土地勘の無い人には地獄。
食事は摂れずず、店も見つからず体力と金を消耗する空間。
&amp;gt;&amp;gt;&amp;gt;「そうならないように土地勘のある人と行くべきですな。」混沌野郎
あさののかばん{浅野の鞄}
我が浅野学園の鞄。小さい鞄は手頃なサイズなのだが大きい鞄はとても大きい。
{俗説}実際はかってみると、家のプリンターが入ったらしい。
&amp;gt;&amp;gt;&amp;gt;「信じられないだろうが、本当の話だ。」混沌野郎
&amp;gt;&amp;gt;&amp;gt;「やろうと思えば人の胴体も入るんじゃないっすかねぇ?」ねずみ
あしたやる{明日やる}
明日改めて今日やるはずの仕事をやる事。決意を表す。
転じて、ない仕事を先延ばしにする事。言い逃れを表す。
{類語}「今度やる。」「いつかやる。」「今日は気が乗らない。」「後でやるんだよ!」
{用例}「おーい、会計。今までの領収書の合計、いくらになった?」
「&amp;hellip;&amp;hellip;明日やる。 」
&amp;gt;&amp;gt;&amp;gt;「君がさぼったから電子工作班は困ったのだからね。」部員I
&amp;gt;&amp;gt;&amp;gt;「いや あの その ごめん」一介の会計
&amp;gt;&amp;gt;&amp;gt;「あやまらなくてもいいから態度で示せや」小指無き人
あたまがいたい{頭が痛い}
頭痛のすること。頭痛のするほどにやることが多いこと。
{用例}「明日までにシューティングゲームを作れ?&amp;hellip;頭が痛い&amp;hellip;&amp;hellip;(泣)」
&amp;gt;&amp;gt;&amp;gt;「不可能ではない、というのがこの恐ろしさですな。」混沌野郎
&amp;gt;&amp;gt;&amp;gt;「やれないと、文句を言われますしね。」稲穂
&amp;gt;&amp;gt;&amp;gt;「やれ、と言われたからには、やる。これぞ漢。うんうん。」部員S
&amp;gt;&amp;gt;&amp;gt;「勝手にやってれば?あたしゃ寝る。」わがまま部員
あっ!{あっ!}
思わぬ事態に直面した際に発する感嘆詞。転じて、注意さを呪う呪文の一種。
{用例}「さーて、プログラムも終わったし、帰るか。あっ!セーブするの忘れてた!」
{類語}「ををっ!」「なっ!?」「しまった!」「ぐはぁ!」「そんな・・・」
&amp;gt;&amp;gt;&amp;gt;「パソコン班員なら誰もが体験するんだよねい。」一介の会計
&amp;gt;&amp;gt;&amp;gt;「それは君が不注意だからではないのかな?」部員I
あとちょっと!{あとちょっと!}
物事の集結を遅らすことを願う呼びかけの台詞。下校時間をも超えて部活動を行うこと
を部長に乞う、祈願の呪文として使われる。
{類語}「もう終わるから。」「これだけ!」「まだ日は高い!」「待ってろ!」
{用例}「あのさ、もう下校時間なんだけど&amp;hellip;」
「あとちょっと!ここでやめると後で分からなくなる!」
&amp;gt;&amp;gt;&amp;gt;「全く、下校時間ぐらい守れないのかい?」部員I
&amp;gt;&amp;gt;&amp;gt;「君が早く帰りたいのはゲーセンによるからでしょ。」一介の会計
あんにょんはしむにか{アンニョンハシムニカ}
朝鮮語。意味は挨拶。部室に来るなりコレを言う者は既に物理部に汚染されている。
{類語}「ハッハー!」「ドーモドーモ」
{用例}「あ。おはよう。」
「アンニョンハシムニカ!」
&amp;gt;&amp;gt;&amp;gt;「北と南ではこの発音が全く違いますぞ」混沌野郎
&amp;gt;&amp;gt;&amp;gt;「何か北の人は力が入ってる」部員S
いっけー!{行っけー!}</description></item><item><title>面白フォントを使おう</title><link>https://asanobuturi.github.io/document/2002/3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://asanobuturi.github.io/document/2002/3/</guid><description>Windowsパソコンには普通の文字を表すことができない、変わったフォントがついているのをご存知でしょうか?このフォントを使えばいろいろな絵を簡単に文章内に入れたり、ワープロソフトでテンプレートのように使ったりといろいろなことができます。
いざ使ってみよう!!! 何かワープロソフトを立ち上げてフォントの一覧を見てみて下さい。
Webdings,Wingdingsの2つが見つかると思います。これに加えてWingdings2とWingdings3がある場合もあります。この4つが変わったフォントです。
このフォントを選択するとそのキーに対応した絵文字が表示されます。例えばWebdingsを選んで「b」のキーを押すと「b」のように自転車の絵がでます。これらをうまく使えば、携帯電話の絵文字のように使えるのです。
普通はどのキーがどの絵文字に対応しているかなんてわかりません。そのための一覧表を使って載せてみました。上2段は小文字で(Shiftキーを押さずに)入力したとき、下2段は大文字で(Shiftキーを押しながら)入力したときに表示される文字です。
Webdings a b c d e f g h i j k l m n o p q r s t u v w x a b c d e f g h i j k l m n o p q r s t u v w x y z 1 2 3 4 5 6 7 8 9 0 - ^ ¥ @ [ ; : ] , .</description></item></channel></rss>